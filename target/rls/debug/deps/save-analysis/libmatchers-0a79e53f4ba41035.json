{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0","program":"/Users/jackson/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","matchers","--edition=2018","/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=0a79e53f4ba41035","-C","extra-filename=-0a79e53f4ba41035","--out-dir","/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps","-L","dependency=/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps","--extern","regex_automata=/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps/libregex_automata-e624cda314d59055.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/jackson/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps/libmatchers-0a79e53f4ba41035.rmeta"},"prelude":{"crate_id":{"name":"matchers","disambiguator":[4940386637717059096,0]},"crate_root":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src","external_crates":[{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8736441298905945133,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14793976659495462539,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3402831840469434398,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266006331935790141,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3256146445313423250,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17904618012795691138,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9322387616446168443,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3101585505833515335,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9998121223216013160,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13604153592636442655,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[4682215639508348019,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[681692869457277629,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14282542057858629160,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14550073586256240635,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6281633846692226065,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17361906875064838028,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16875744454975590306,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":18,"id":{"name":"regex_automata","disambiguator":[8329360303239149312,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","num":19,"id":{"name":"regex_syntax","disambiguator":[888281800106960282,0]}}],"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":0,"byte_end":19250,"line_start":1,"line_end":600,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":18,"index":1412},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1521,"byte_end":1526,"line_start":32,"line_end":32,"column_start":25,"column_end":30},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":0,"byte_end":19250,"line_start":1,"line_end":600,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":106},{"krate":0,"index":110},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":125},{"krate":0,"index":130},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":53},{"krate":0,"index":74},{"krate":0,"index":79},{"krate":0,"index":85},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":97},{"krate":0,"index":102},{"krate":0,"index":104}],"decl_id":null,"docs":" Regex matchers on character and byte streams.","sig":null,"attributes":[{"value":"/ Regex matchers on character and byte streams.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":0,"byte_end":49,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":50,"byte_end":53,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Overview","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":54,"byte_end":69,"line_start":3,"line_end":3,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":70,"byte_end":73,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The [`regex`] crate implements regular expression matching on strings and byte","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":74,"byte_end":156,"line_start":5,"line_end":5,"column_start":1,"column_end":83}},{"value":"/ arrays. However, in order to match the output of implementations of `fmt::Debug`","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":157,"byte_end":241,"line_start":6,"line_end":6,"column_start":1,"column_end":85}},{"value":"/ and `fmt::Display`, or by any code which writes to an instance of `fmt::Write`","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":242,"byte_end":324,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/ or `io::Write`, it is necessary to first allocate a buffer, write to that","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":325,"byte_end":402,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/ buffer, and then match the buffer against a regex.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":403,"byte_end":457,"line_start":9,"line_end":9,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":458,"byte_end":461,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ In cases where it is not necessary to extract substrings, but only to test whether","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":462,"byte_end":548,"line_start":11,"line_end":11,"column_start":1,"column_end":87}},{"value":"/ or not output matches a regex, it is not strictly necessary to allocate and","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":549,"byte_end":628,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ write this output to a buffer. This crate provides a simple interface on top of","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":629,"byte_end":712,"line_start":13,"line_end":13,"column_start":1,"column_end":84}},{"value":"/ the lower-level [`regex-automata`] library that implements `fmt::Write` and","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":713,"byte_end":792,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ `io::Write` for regex patterns. This may be used to test whether streaming","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":793,"byte_end":871,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ output matches a pattern without buffering that output.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":872,"byte_end":931,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":932,"byte_end":935,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Users who need to extract substrings based on a pattern or who already have","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":936,"byte_end":1015,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ buffered data should probably use the [`regex`] crate instead.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1016,"byte_end":1082,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1083,"byte_end":1086,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ## Syntax","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1087,"byte_end":1100,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1101,"byte_end":1104,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ This crate uses the same [regex syntax][syntax] of the `regex-automata` crate.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1105,"byte_end":1187,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1188,"byte_end":1191,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ [`regex`]: https://crates.io/crates/regex","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1192,"byte_end":1237,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"/ [`regex-automata`]: https://crates.io/crates/regex-automata","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1238,"byte_end":1301,"line_start":26,"line_end":26,"column_start":1,"column_end":64}},{"value":"/ [syntax]: https://docs.rs/regex-automata/0.1.7/regex_automata/#syntax","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1302,"byte_end":1375,"line_start":27,"line_end":27,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":106},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1725,"byte_end":1732,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"Pattern","qualname":"::Pattern","value":"Pattern {  }","parent":null,"children":[{"krate":0,"index":109}],"decl_id":null,"docs":" A compiled match pattern that can match multipe inputs, or return a\n [`Matcher`] that matches a single input.","sig":null,"attributes":[{"value":"/ A compiled match pattern that can match multipe inputs, or return a","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1529,"byte_end":1600,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/ [`Matcher`] that matches a single input.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1601,"byte_end":1645,"line_start":35,"line_end":35,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1646,"byte_end":1649,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`Matcher`]: ../struct.Matcher.html","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1650,"byte_end":1689,"line_start":37,"line_end":37,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":118},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1975,"byte_end":1982,"line_start":51,"line_end":51,"column_start":12,"column_end":19},"name":"Matcher","qualname":"::Matcher","value":"Matcher {  }","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"decl_id":null,"docs":" A reference to a [`Pattern`] that matches a single input.","sig":null,"attributes":[{"value":"/ A reference to a [`Pattern`] that matches a single input.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1834,"byte_end":1895,"line_start":47,"line_end":47,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1896,"byte_end":1899,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ [`Pattern`]: ../struct.Pattern.html","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":1900,"byte_end":1939,"line_start":49,"line_end":49,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3358,"byte_end":3361,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"new","qualname":"<Pattern>::new","value":"pub fn new(&str) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Pattern` for the given regex, or an error if the regex\n was invalid.","sig":null,"attributes":[{"value":"/ Returns a new `Pattern` for the given regex, or an error if the regex","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2177,"byte_end":2250,"line_start":64,"line_end":64,"column_start":5,"column_end":78}},{"value":"/ was invalid.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2255,"byte_end":2271,"line_start":65,"line_end":65,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2276,"byte_end":2279,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ The returned `Pattern` will match occurances of the pattern which start","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2284,"byte_end":2359,"line_start":67,"line_end":67,"column_start":5,"column_end":80}},{"value":"/ at *any* in a byte or character stream — the pattern may be preceded by","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2364,"byte_end":2441,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ any number of non-matching characters. Essentially, it will behave as","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2446,"byte_end":2519,"line_start":69,"line_end":69,"column_start":5,"column_end":78}},{"value":"/ though the regular expression started with a `.*?`, which enables a","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2524,"byte_end":2595,"line_start":70,"line_end":70,"column_start":5,"column_end":76}},{"value":"/ match to appear anywhere. If this is not the desired behavior, use","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2600,"byte_end":2670,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/ [`Pattern::new_anchored`] instead.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2675,"byte_end":2713,"line_start":72,"line_end":72,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2718,"byte_end":2721,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ For example:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2726,"byte_end":2742,"line_start":74,"line_end":74,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2747,"byte_end":2754,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use matchers::Pattern;","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2759,"byte_end":2785,"line_start":76,"line_end":76,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2790,"byte_end":2793,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ // This pattern matches any number of `a`s followed by a `b`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2798,"byte_end":2863,"line_start":78,"line_end":78,"column_start":5,"column_end":70}},{"value":"/ let pattern = Pattern::new(\"a+b\").expect(\"regex is not invalid\");","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2868,"byte_end":2937,"line_start":79,"line_end":79,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2942,"byte_end":2945,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ // Of course, the pattern matches an input where the entire sequence of","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2950,"byte_end":3025,"line_start":81,"line_end":81,"column_start":5,"column_end":80}},{"value":"/ // characters matches the pattern:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3030,"byte_end":3068,"line_start":82,"line_end":82,"column_start":5,"column_end":43}},{"value":"/ assert!(pattern.display_matches(&\"aaaaab\"));","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3073,"byte_end":3121,"line_start":83,"line_end":83,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3126,"byte_end":3129,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ // And, since the pattern is unanchored, it will also match the","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3134,"byte_end":3201,"line_start":85,"line_end":85,"column_start":5,"column_end":72}},{"value":"/ // sequence when it's followed by non-matching characters:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3206,"byte_end":3268,"line_start":86,"line_end":86,"column_start":5,"column_end":67}},{"value":"/ assert!(pattern.display_matches(&\"hello world! aaaaab\"));","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3273,"byte_end":3334,"line_start":87,"line_end":87,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3339,"byte_end":3346,"line_start":88,"line_end":88,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4772,"byte_end":4784,"line_start":123,"line_end":123,"column_start":12,"column_end":24},"name":"new_anchored","qualname":"<Pattern>::new_anchored","value":"pub fn new_anchored(&str) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Pattern` anchored at the beginning of the input stream,\n or an error if the regex was invalid.","sig":null,"attributes":[{"value":"/ Returns a new `Pattern` anchored at the beginning of the input stream,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3496,"byte_end":3570,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ or an error if the regex was invalid.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3575,"byte_end":3616,"line_start":95,"line_end":95,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3621,"byte_end":3624,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The returned `Pattern` will *only* match an occurence of the pattern in","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3629,"byte_end":3704,"line_start":97,"line_end":97,"column_start":5,"column_end":80}},{"value":"/ an input sequence if the first character or byte in the input matches","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3709,"byte_end":3782,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ the pattern. If this is not the desired behavior, use [`Pattern::new`]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3787,"byte_end":3861,"line_start":99,"line_end":99,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3866,"byte_end":3878,"line_start":100,"line_end":100,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3883,"byte_end":3886,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ For example:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3891,"byte_end":3907,"line_start":102,"line_end":102,"column_start":5,"column_end":21}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3912,"byte_end":3919,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ use matchers::Pattern;","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3924,"byte_end":3950,"line_start":104,"line_end":104,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3955,"byte_end":3958,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ // This pattern matches any number of `a`s followed by a `b`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":3963,"byte_end":4028,"line_start":106,"line_end":106,"column_start":5,"column_end":70}},{"value":"/ let pattern = Pattern::new_anchored(\"a+b\")","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4033,"byte_end":4079,"line_start":107,"line_end":107,"column_start":5,"column_end":51}},{"value":"/     .expect(\"regex is not invalid\");","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4084,"byte_end":4124,"line_start":108,"line_end":108,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4129,"byte_end":4132,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ // The pattern matches an input where the entire sequence of","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4137,"byte_end":4201,"line_start":110,"line_end":110,"column_start":5,"column_end":69}},{"value":"/ // characters matches the pattern:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4206,"byte_end":4244,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/ assert!(pattern.display_matches(&\"aaaaab\"));","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4249,"byte_end":4297,"line_start":112,"line_end":112,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4302,"byte_end":4305,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ // Since the pattern is anchored, it will *not* match an input that","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4310,"byte_end":4381,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"/ // begins with non-matching characters:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4386,"byte_end":4429,"line_start":115,"line_end":115,"column_start":5,"column_end":48}},{"value":"/ assert!(!pattern.display_matches(&\"hello world! aaaaab\"));","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4434,"byte_end":4496,"line_start":116,"line_end":116,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4501,"byte_end":4504,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ // ...however, if we create a pattern beginning with `.*?`, it will:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4509,"byte_end":4581,"line_start":118,"line_end":118,"column_start":5,"column_end":77}},{"value":"/ let pattern2 = Pattern::new_anchored(\".*?a+b\")","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4586,"byte_end":4636,"line_start":119,"line_end":119,"column_start":5,"column_end":55}},{"value":"/     .expect(\"regex is not invalid\");","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4641,"byte_end":4681,"line_start":120,"line_end":120,"column_start":5,"column_end":45}},{"value":"/ assert!(pattern2.display_matches(&\"hello world! aaaaab\"));","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4686,"byte_end":4748,"line_start":121,"line_end":121,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4753,"byte_end":4760,"line_start":122,"line_end":122,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5274,"byte_end":5281,"line_start":144,"line_end":144,"column_start":12,"column_end":19},"name":"matches","qualname":"<Pattern<S, A>>::matches","value":"pub fn matches<impl AsRef<str>: AsRef<str>>(&Self, &impl AsRef<str>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this pattern matches the given string.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this pattern matches the given string.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5188,"byte_end":5248,"line_start":142,"line_end":142,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5253,"byte_end":5262,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6139,"byte_end":6152,"line_start":172,"line_end":172,"column_start":12,"column_end":25},"name":"debug_matches","qualname":"<Pattern<S, A>>::debug_matches","value":"pub fn debug_matches<impl fmt::Debug: fmt::Debug>(&Self, &impl fmt::Debug)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this pattern matches the formatted output of the given\n type implementing `fmt::Debug`.","sig":null,"attributes":[{"value":"/ Returns `true` if this pattern matches the formatted output of the given","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5365,"byte_end":5441,"line_start":148,"line_end":148,"column_start":5,"column_end":81}},{"value":"/ type implementing `fmt::Debug`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5446,"byte_end":5481,"line_start":149,"line_end":149,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5486,"byte_end":5489,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ For example:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5494,"byte_end":5510,"line_start":151,"line_end":151,"column_start":5,"column_end":21}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5515,"byte_end":5526,"line_start":152,"line_end":152,"column_start":5,"column_end":16}},{"value":"/ use matchers::Pattern;","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5531,"byte_end":5557,"line_start":153,"line_end":153,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5562,"byte_end":5565,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5570,"byte_end":5590,"line_start":155,"line_end":155,"column_start":5,"column_end":25}},{"value":"/ pub struct Hello {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5595,"byte_end":5617,"line_start":156,"line_end":156,"column_start":5,"column_end":27}},{"value":"/     to: &'static str,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5622,"byte_end":5647,"line_start":157,"line_end":157,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5652,"byte_end":5657,"line_start":158,"line_end":158,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5662,"byte_end":5665,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ let pattern = Pattern::new(r#\"Hello \\{ to: \"W[^\"]*\" \\}\"#).unwrap();","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5670,"byte_end":5741,"line_start":160,"line_end":160,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5746,"byte_end":5749,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let hello_world = Hello { to: \"World\" };","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5754,"byte_end":5798,"line_start":162,"line_end":162,"column_start":5,"column_end":49}},{"value":"/ assert!(pattern.debug_matches(&hello_world));","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5803,"byte_end":5852,"line_start":163,"line_end":163,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5857,"byte_end":5860,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let hello_sf = Hello { to: \"San Francisco\" };","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5865,"byte_end":5914,"line_start":165,"line_end":165,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(pattern.debug_matches(&hello_sf), false);","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5919,"byte_end":5975,"line_start":166,"line_end":166,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5980,"byte_end":5983,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let hello_washington = Hello { to: \"Washington\" };","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5988,"byte_end":6042,"line_start":168,"line_end":168,"column_start":5,"column_end":59}},{"value":"/ assert!(pattern.debug_matches(&hello_washington));","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6047,"byte_end":6101,"line_start":169,"line_end":169,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6106,"byte_end":6113,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6118,"byte_end":6127,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7281,"byte_end":7296,"line_start":208,"line_end":208,"column_start":12,"column_end":27},"name":"display_matches","qualname":"<Pattern<S, A>>::display_matches","value":"pub fn display_matches<impl fmt::Display: fmt::Display>(&Self,\n&impl fmt::Display) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this pattern matches the formatted output of the given\n type implementing `fmt::Display`.","sig":null,"attributes":[{"value":"/ Returns `true` if this pattern matches the formatted output of the given","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6242,"byte_end":6318,"line_start":176,"line_end":176,"column_start":5,"column_end":81}},{"value":"/ type implementing `fmt::Display`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6323,"byte_end":6360,"line_start":177,"line_end":177,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6365,"byte_end":6368,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ For example:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6373,"byte_end":6389,"line_start":179,"line_end":179,"column_start":5,"column_end":21}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6394,"byte_end":6405,"line_start":180,"line_end":180,"column_start":5,"column_end":16}},{"value":"/ # use std::fmt;","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6410,"byte_end":6429,"line_start":181,"line_end":181,"column_start":5,"column_end":24}},{"value":"/ use matchers::Pattern;","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6434,"byte_end":6460,"line_start":182,"line_end":182,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6465,"byte_end":6468,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ #[derive(Debug)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6473,"byte_end":6493,"line_start":184,"line_end":184,"column_start":5,"column_end":25}},{"value":"/ pub struct Hello {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6498,"byte_end":6520,"line_start":185,"line_end":185,"column_start":5,"column_end":27}},{"value":"/     to: &'static str,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6525,"byte_end":6550,"line_start":186,"line_end":186,"column_start":5,"column_end":30}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6555,"byte_end":6560,"line_start":187,"line_end":187,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6565,"byte_end":6568,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ impl fmt::Display for Hello {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6573,"byte_end":6606,"line_start":189,"line_end":189,"column_start":5,"column_end":38}},{"value":"/     fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6611,"byte_end":6673,"line_start":190,"line_end":190,"column_start":5,"column_end":67}},{"value":"/         write!(f, \"Hello {}\", self.to)","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6678,"byte_end":6720,"line_start":191,"line_end":191,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6725,"byte_end":6734,"line_start":192,"line_end":192,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6739,"byte_end":6744,"line_start":193,"line_end":193,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6749,"byte_end":6752,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ let pattern = Pattern::new(\"Hello [Ww].+\").unwrap();","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6757,"byte_end":6813,"line_start":195,"line_end":195,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6818,"byte_end":6821,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ let hello_world = Hello { to: \"world\" };","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6826,"byte_end":6870,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/ assert!(pattern.display_matches(&hello_world));","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6875,"byte_end":6926,"line_start":198,"line_end":198,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(pattern.debug_matches(&hello_world), false);","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6931,"byte_end":6990,"line_start":199,"line_end":199,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":6995,"byte_end":6998,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ let hello_sf = Hello { to: \"San Francisco\" };","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7003,"byte_end":7052,"line_start":201,"line_end":201,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(pattern.display_matches(&hello_sf), false);","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7057,"byte_end":7115,"line_start":202,"line_end":202,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7120,"byte_end":7123,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let hello_washington = Hello { to: \"Washington\" };","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7128,"byte_end":7182,"line_start":204,"line_end":204,"column_start":5,"column_end":59}},{"value":"/ assert!(pattern.display_matches(&hello_washington));","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7187,"byte_end":7243,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7248,"byte_end":7255,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7260,"byte_end":7269,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7621,"byte_end":7633,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"read_matches","qualname":"<Pattern<S, A>>::read_matches","value":"pub fn read_matches<impl io::Read: io::Read>(&Self, impl io::Read)\n-> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns either a `bool` indicating whether or not this pattern matches the\n data read from the provided `io::Read` stream, or an `io::Error` if an\n error occurred reading from the stream.\n","sig":null,"attributes":[{"value":"/ Returns either a `bool` indicating whether or not this pattern matches the","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7390,"byte_end":7468,"line_start":212,"line_end":212,"column_start":5,"column_end":83}},{"value":"/ data read from the provided `io::Read` stream, or an `io::Error` if an","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7473,"byte_end":7547,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"/ error occurred reading from the stream.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7552,"byte_end":7595,"line_start":214,"line_end":214,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7600,"byte_end":7609,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":8506,"byte_end":8516,"line_start":250,"line_end":250,"column_start":12,"column_end":22},"name":"is_matched","qualname":"<Matcher>::is_matched","value":"pub fn is_matched(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this `Matcher` has matched any input that has been\n provided.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this `Matcher` has matched any input that has been","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":8390,"byte_end":8462,"line_start":247,"line_end":247,"column_start":5,"column_end":77}},{"value":"/ provided.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":8467,"byte_end":8480,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"inline","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":8485,"byte_end":8494,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":8723,"byte_end":8730,"line_start":256,"line_end":256,"column_start":12,"column_end":19},"name":"matches","qualname":"<Matcher>::matches","value":"pub fn matches<impl AsRef<str>: AsRef<str>>(Self, &impl AsRef<str>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this pattern matches the formatted output of the given\n type implementing `fmt::Debug`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this pattern matches the formatted output of the given","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":8595,"byte_end":8671,"line_start":254,"line_end":254,"column_start":5,"column_end":81}},{"value":"/ type implementing `fmt::Debug`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":8676,"byte_end":8711,"line_start":255,"line_end":255,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":9126,"byte_end":9139,"line_start":268,"line_end":268,"column_start":12,"column_end":25},"name":"debug_matches","qualname":"<Matcher>::debug_matches","value":"pub fn debug_matches<impl fmt::Debug: fmt::Debug>(Self, &impl fmt::Debug)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this pattern matches the formatted output of the given\n type implementing `fmt::Debug`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this pattern matches the formatted output of the given","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":8998,"byte_end":9074,"line_start":266,"line_end":266,"column_start":5,"column_end":81}},{"value":"/ type implementing `fmt::Debug`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":9079,"byte_end":9114,"line_start":267,"line_end":267,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":9460,"byte_end":9475,"line_start":276,"line_end":276,"column_start":12,"column_end":27},"name":"display_matches","qualname":"<Matcher>::display_matches","value":"pub fn display_matches<impl fmt::Display: fmt::Display>(Self,\n&impl fmt::Display) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this pattern matches the formatted output of the given\n type implementing `fmt::Display`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this pattern matches the formatted output of the given","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":9330,"byte_end":9406,"line_start":274,"line_end":274,"column_start":5,"column_end":81}},{"value":"/ type implementing `fmt::Display`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":9411,"byte_end":9448,"line_start":275,"line_end":275,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":9883,"byte_end":9895,"line_start":285,"line_end":285,"column_start":12,"column_end":24},"name":"read_matches","qualname":"<Matcher>::read_matches","value":"pub fn read_matches<impl io::Read + Sized: io::Read +\nSized>(Self, impl io::Read + Sized) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns either a `bool` indicating whether or not this pattern matches the\n data read from the provided `io::Read` stream, or an `io::Error` if an\n error occurred reading from the stream.\n","sig":null,"attributes":[{"value":"/ Returns either a `bool` indicating whether or not this pattern matches the","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":9666,"byte_end":9744,"line_start":282,"line_end":282,"column_start":5,"column_end":83}},{"value":"/ data read from the provided `io::Read` stream, or an `io::Error` if an","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":9749,"byte_end":9823,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ error occurred reading from the stream.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":9828,"byte_end":9871,"line_start":284,"line_end":284,"column_start":5,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":85},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":10987,"byte_end":10996,"line_start":334,"line_end":334,"column_start":11,"column_end":20},"name":"ToMatcher","qualname":"::ToMatcher","value":"ToMatcher<'a, S>","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":88},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":11075,"byte_end":11084,"line_start":339,"line_end":339,"column_start":10,"column_end":19},"name":"Automaton","qualname":"::ToMatcher::Automaton","value":"type Automaton: DFA<ID = S>;","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":89},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":11106,"byte_end":11113,"line_start":340,"line_end":340,"column_start":8,"column_end":15},"name":"matcher","qualname":"::ToMatcher::matcher","value":"pub fn matcher(&'a Self) -> Matcher","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":105},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":11878,"byte_end":11884,"line_start":368,"line_end":368,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2163,"byte_end":2170,"line_start":63,"line_end":63,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":36},{"krate":0,"index":37}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4963,"byte_end":4970,"line_start":129,"line_end":129,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5090,"byte_end":5097,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":47},{"krate":0,"index":49},{"krate":0,"index":51}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7771,"byte_end":7778,"line_start":223,"line_end":223,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":67},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":10200,"byte_end":10207,"line_start":296,"line_end":296,"column_start":31,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":10542,"byte_end":10549,"line_start":312,"line_end":312,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":11197,"byte_end":11204,"line_start":343,"line_end":343,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":11283,"byte_end":11290,"line_start":345,"line_end":345,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":11537,"byte_end":11544,"line_start":355,"line_end":355,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":11796,"byte_end":11803,"line_start":365,"line_end":365,"column_start":35,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":2163,"byte_end":2170,"line_start":63,"line_end":63,"column_start":6,"column_end":13},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":4963,"byte_end":4970,"line_start":129,"line_end":129,"column_start":18,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":106},"to":{"krate":2,"index":12190}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":5090,"byte_end":5097,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":7771,"byte_end":7778,"line_start":223,"line_end":223,"column_start":16,"column_end":23},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":118},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":10200,"byte_end":10207,"line_start":296,"line_end":296,"column_start":31,"column_end":38},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":118},"to":{"krate":2,"index":9547}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":10542,"byte_end":10549,"line_start":312,"line_end":312,"column_start":30,"column_end":37},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":118},"to":{"krate":1,"index":4685}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":11197,"byte_end":11204,"line_start":343,"line_end":343,"column_start":35,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":106},"to":{"krate":0,"index":105}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":11283,"byte_end":11290,"line_start":345,"line_end":345,"column_start":34,"column_end":41},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":106},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":11537,"byte_end":11544,"line_start":355,"line_end":355,"column_start":34,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":106},"to":{"krate":0,"index":85}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/matchers-0.1.0/src/lib.rs","byte_start":11796,"byte_end":11803,"line_start":365,"line_end":365,"column_start":35,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":106},"to":{"krate":0,"index":105}}]}