{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0","program":"/Users/jackson/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","wgpu","--edition=2018","/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"naga\"","--cfg","feature=\"spirv\"","-C","metadata=b09a1ca0d9e581c6","-C","extra-filename=-b09a1ca0d9e581c6","--out-dir","/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps","-L","dependency=/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps","--extern","arrayvec=/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps/libarrayvec-74fc9036eb6fa419.rmeta","--extern","log=/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps/liblog-219452f3316ff2f6.rmeta","--extern","naga=/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps/libnaga-1479c624aa0b98ef.rmeta","--extern","parking_lot=/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps/libparking_lot-38142a9947b17c4d.rmeta","--extern","raw_window_handle=/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps/libraw_window_handle-340536674c39bca6.rmeta","--extern","smallvec=/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps/libsmallvec-906e2ddf30d20d2b.rmeta","--extern","wgc=/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps/libwgpu_core-50425af092eeaf45.rmeta","--extern","hal=/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps/libwgpu_hal-33454dd6c7f4f27c.rmeta","--extern","wgt=/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps/libwgpu_types-d86b128497ede748.rmeta","--cap-lints","allow","-L","native=/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/build/objc_exception-262f6b1c1d19b0d0/out","--error-format=json","--sysroot","/Users/jackson/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/jackson/Documents/code/playground/rust-playground/bevy_playground/boids-rs/target/rls/debug/deps/libwgpu-b09a1ca0d9e581c6.rmeta"},"prelude":{"crate_id":{"name":"wgpu","disambiguator":[12117749123575617982,0]},"crate_root":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src","external_crates":[{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[8736441298905945133,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14793976659495462539,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3402831840469434398,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[10266006331935790141,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[3256146445313423250,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[17904618012795691138,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9322387616446168443,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3101585505833515335,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[9998121223216013160,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13604153592636442655,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":11,"id":{"name":"std_detect","disambiguator":[4682215639508348019,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":12,"id":{"name":"rustc_demangle","disambiguator":[681692869457277629,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[14282542057858629160,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14550073586256240635,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[6281633846692226065,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":16,"id":{"name":"memchr","disambiguator":[17361906875064838028,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[16875744454975590306,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":18,"id":{"name":"arrayvec","disambiguator":[9011847643536676062,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":19,"id":{"name":"parking_lot","disambiguator":[7405088699782637530,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":20,"id":{"name":"instant","disambiguator":[7045953033948170626,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":21,"id":{"name":"cfg_if","disambiguator":[13997309999588659716,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":22,"id":{"name":"lock_api","disambiguator":[16285760165729202796,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":23,"id":{"name":"scopeguard","disambiguator":[12406165358025328992,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":24,"id":{"name":"parking_lot_core","disambiguator":[7306649264465728554,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":25,"id":{"name":"smallvec","disambiguator":[12672169373754085389,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":26,"id":{"name":"serde","disambiguator":[8165560518224493110,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":27,"id":{"name":"serde_derive","disambiguator":[14923659144645396593,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":28,"id":{"name":"libc","disambiguator":[8238380484632325458,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":29,"id":{"name":"wgpu_core","disambiguator":[18061669404730061980,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":30,"id":{"name":"thiserror","disambiguator":[8141393596917955733,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":31,"id":{"name":"thiserror_impl","disambiguator":[702851866151222847,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":32,"id":{"name":"wgpu_hal","disambiguator":[2591286555561933616,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":33,"id":{"name":"metal","disambiguator":[14747007323993841087,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":34,"id":{"name":"bitflags","disambiguator":[9807794630315450975,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":35,"id":{"name":"log","disambiguator":[6140537959952722314,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":36,"id":{"name":"objc","disambiguator":[11377032801965192704,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":37,"id":{"name":"malloc_buf","disambiguator":[6458673331550315642,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":38,"id":{"name":"foreign_types","disambiguator":[6908088356258286267,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":39,"id":{"name":"foreign_types_shared","disambiguator":[8908912727142272698,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":40,"id":{"name":"core_graphics_types","disambiguator":[12676958738169590797,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":41,"id":{"name":"core_foundation","disambiguator":[549812262580259527,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":42,"id":{"name":"core_foundation_sys","disambiguator":[6984234136581700931,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":43,"id":{"name":"block","disambiguator":[9475795875566280205,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","num":44,"id":{"name":"wgpu_types","disambiguator":[10056001555877266505,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":45,"id":{"name":"raw_window_handle","disambiguator":[10591365689282711975,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":46,"id":{"name":"cty","disambiguator":[18138830965111268235,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":47,"id":{"name":"naga","disambiguator":[4698109364384335694,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":48,"id":{"name":"indexmap","disambiguator":[8689215731290919355,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":49,"id":{"name":"hashbrown","disambiguator":[9088478009550783317,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":50,"id":{"name":"ahash","disambiguator":[5147616631141160104,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":51,"id":{"name":"once_cell","disambiguator":[14434512543409285861,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":52,"id":{"name":"getrandom","disambiguator":[4104144744870242681,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":53,"id":{"name":"bit_set","disambiguator":[8110025400413914158,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":54,"id":{"name":"bit_vec","disambiguator":[10634936639577224610,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":55,"id":{"name":"spirv","disambiguator":[1056442076863097048,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":56,"id":{"name":"num_traits","disambiguator":[17612029823848429976,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":57,"id":{"name":"pp_rs","disambiguator":[2799477895848100502,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":58,"id":{"name":"unicode_xid","disambiguator":[13844809013555060120,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":59,"id":{"name":"petgraph","disambiguator":[1323335127564756507,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":60,"id":{"name":"fixedbitset","disambiguator":[14067718292253989789,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":61,"id":{"name":"hexf_parse","disambiguator":[14922478242498741644,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":62,"id":{"name":"codespan_reporting","disambiguator":[15073896638441654238,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":63,"id":{"name":"termcolor","disambiguator":[9161048266779921186,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":64,"id":{"name":"unicode_width","disambiguator":[4469519018130192833,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":65,"id":{"name":"rustc_hash","disambiguator":[4986289463817913992,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":66,"id":{"name":"fxhash","disambiguator":[8537849836498958177,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":67,"id":{"name":"byteorder","disambiguator":[2479198172443252321,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":68,"id":{"name":"copyless","disambiguator":[7038933061890337449,0]}},{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","num":69,"id":{"name":"profiling","disambiguator":[12102277178691850386,0]}}],"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":0,"byte_end":119043,"line_start":1,"line_end":3342,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":29,"index":3468},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/init.rs","byte_start":224007,"byte_end":224037,"line_start":6,"line_end":6,"column_start":24,"column_end":54},"alias_span":null,"name":"parse_backends_from_comma_list","value":"","parent":{"krate":0,"index":621}},{"kind":"Use","ref_id":{"krate":0,"index":528},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199508,"byte_end":199519,"line_start":15,"line_end":15,"column_start":15,"column_end":26},"alias_span":null,"name":"StagingBelt","value":"","parent":{"krate":0,"index":469}},{"kind":"Use","ref_id":{"krate":0,"index":1516},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199538,"byte_end":199558,"line_start":16,"line_end":16,"column_start":18,"column_end":38},"alias_span":null,"name":"BufferInitDescriptor","value":"","parent":{"krate":0,"index":469}},{"kind":"Use","ref_id":{"krate":0,"index":549},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199560,"byte_end":199569,"line_start":16,"line_end":16,"column_start":40,"column_end":49},"alias_span":null,"name":"DeviceExt","value":"","parent":{"krate":0,"index":469}},{"kind":"Use","ref_id":{"krate":0,"index":588},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199589,"byte_end":199602,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"alias_span":null,"name":"RenderEncoder","value":"","parent":{"krate":0,"index":469}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199618,"byte_end":199619,"line_start":18,"line_end":18,"column_start":15,"column_end":16},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":469}},{"kind":"Use","ref_id":{"krate":44,"index":908},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":584,"byte_end":595,"line_start":28,"line_end":28,"column_start":5,"column_end":16},"alias_span":null,"name":"AdapterInfo","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2598},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":597,"byte_end":608,"line_start":28,"line_end":28,"column_start":18,"column_end":29},"alias_span":null,"name":"AddressMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":187},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":610,"byte_end":617,"line_start":28,"line_end":28,"column_start":31,"column_end":38},"alias_span":null,"name":"Backend","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":244},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":619,"byte_end":627,"line_start":28,"line_end":28,"column_start":40,"column_end":48},"alias_span":null,"name":"Backends","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2861},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":629,"byte_end":649,"line_start":28,"line_end":28,"column_start":50,"column_end":70},"alias_span":null,"name":"BindGroupLayoutEntry","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2830},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":651,"byte_end":662,"line_start":28,"line_end":28,"column_start":72,"column_end":83},"alias_span":null,"name":"BindingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1154},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":664,"byte_end":678,"line_start":28,"line_end":28,"column_start":85,"column_end":99},"alias_span":null,"name":"BlendComponent","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1070},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":684,"byte_end":695,"line_start":29,"line_end":29,"column_start":5,"column_end":16},"alias_span":null,"name":"BlendFactor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1124},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":697,"byte_end":711,"line_start":29,"line_end":29,"column_start":18,"column_end":32},"alias_span":null,"name":"BlendOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1173},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":713,"byte_end":723,"line_start":29,"line_end":29,"column_start":34,"column_end":44},"alias_span":null,"name":"BlendState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":10},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":725,"byte_end":738,"line_start":29,"line_end":29,"column_start":46,"column_end":59},"alias_span":null,"name":"BufferAddress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2744},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":740,"byte_end":757,"line_start":29,"line_end":29,"column_start":61,"column_end":78},"alias_span":null,"name":"BufferBindingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":11},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":759,"byte_end":769,"line_start":29,"line_end":29,"column_start":80,"column_end":90},"alias_span":null,"name":"BufferSize","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2130},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":775,"byte_end":787,"line_start":30,"line_end":30,"column_start":5,"column_end":17},"alias_span":null,"name":"BufferUsages","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2472},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":789,"byte_end":794,"line_start":30,"line_end":30,"column_start":19,"column_end":24},"alias_span":null,"name":"Color","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1191},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":796,"byte_end":812,"line_start":30,"line_end":30,"column_start":26,"column_end":42},"alias_span":null,"name":"ColorTargetState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1692},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":814,"byte_end":825,"line_start":30,"line_end":30,"column_start":44,"column_end":55},"alias_span":null,"name":"ColorWrites","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2663},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":827,"byte_end":850,"line_start":30,"line_end":30,"column_start":57,"column_end":80},"alias_span":null,"name":"CommandBufferDescriptor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1934},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":852,"byte_end":867,"line_start":30,"line_end":30,"column_start":82,"column_end":97},"alias_span":null,"name":"CompareFunction","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1825},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":873,"byte_end":887,"line_start":31,"line_end":31,"column_start":5,"column_end":19},"alias_span":null,"name":"DepthBiasState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1840},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":889,"byte_end":906,"line_start":31,"line_end":31,"column_start":21,"column_end":38},"alias_span":null,"name":"DepthStencilState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":889},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":908,"byte_end":918,"line_start":31,"line_end":31,"column_start":40,"column_end":50},"alias_span":null,"name":"DeviceType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":695},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":920,"byte_end":941,"line_start":31,"line_end":31,"column_start":52,"column_end":73},"alias_span":null,"name":"DownlevelCapabilities","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":717},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":943,"byte_end":957,"line_start":31,"line_end":31,"column_start":75,"column_end":89},"alias_span":null,"name":"DownlevelFlags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":13},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":963,"byte_end":976,"line_start":32,"line_end":32,"column_start":5,"column_end":18},"alias_span":null,"name":"DynamicOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2528},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":978,"byte_end":986,"line_start":32,"line_end":32,"column_start":20,"column_end":28},"alias_span":null,"name":"Extent3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1260},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":988,"byte_end":992,"line_start":32,"line_end":32,"column_start":30,"column_end":34},"alias_span":null,"name":"Face","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":394},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":994,"byte_end":1002,"line_start":32,"line_end":32,"column_start":36,"column_end":44},"alias_span":null,"name":"Features","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2625},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1004,"byte_end":1014,"line_start":32,"line_end":32,"column_start":46,"column_end":56},"alias_span":null,"name":"FilterMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1239},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1016,"byte_end":1025,"line_start":32,"line_end":32,"column_start":58,"column_end":67},"alias_span":null,"name":"FrontFace","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2733},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1027,"byte_end":1042,"line_start":32,"line_end":32,"column_start":69,"column_end":84},"alias_span":null,"name":"ImageDataLayout","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2903},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1048,"byte_end":1069,"line_start":33,"line_end":33,"column_start":5,"column_end":26},"alias_span":null,"name":"ImageSubresourceRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1854},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1071,"byte_end":1082,"line_start":33,"line_end":33,"column_start":28,"column_end":39},"alias_span":null,"name":"IndexFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":631},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1084,"byte_end":1090,"line_start":33,"line_end":33,"column_start":41,"column_end":47},"alias_span":null,"name":"Limits","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1330},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1092,"byte_end":1108,"line_start":33,"line_end":33,"column_start":49,"column_end":65},"alias_span":null,"name":"MultisampleState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2509},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1110,"byte_end":1118,"line_start":33,"line_end":33,"column_start":67,"column_end":75},"alias_span":null,"name":"Origin3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2964},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1124,"byte_end":1147,"line_start":34,"line_end":34,"column_start":5,"column_end":28},"alias_span":null,"name":"PipelineStatisticsTypes","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1281},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1149,"byte_end":1160,"line_start":34,"line_end":34,"column_start":30,"column_end":41},"alias_span":null,"name":"PolygonMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":223},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1162,"byte_end":1177,"line_start":34,"line_end":34,"column_start":43,"column_end":58},"alias_span":null,"name":"PowerPreference","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2308},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1179,"byte_end":1190,"line_start":34,"line_end":34,"column_start":60,"column_end":71},"alias_span":null,"name":"PresentMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1305},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1192,"byte_end":1206,"line_start":34,"line_end":34,"column_start":73,"column_end":87},"alias_span":null,"name":"PrimitiveState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1209},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1212,"byte_end":1229,"line_start":35,"line_end":35,"column_start":5,"column_end":22},"alias_span":null,"name":"PrimitiveTopology","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2646},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1231,"byte_end":1248,"line_start":35,"line_end":35,"column_start":24,"column_end":41},"alias_span":null,"name":"PushConstantRange","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2951},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1250,"byte_end":1259,"line_start":35,"line_end":35,"column_start":43,"column_end":52},"alias_span":null,"name":"QueryType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2690},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1261,"byte_end":1285,"line_start":35,"line_end":35,"column_start":54,"column_end":78},"alias_span":null,"name":"RenderBundleDepthStencil","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2809},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1287,"byte_end":1305,"line_start":35,"line_end":35,"column_start":80,"column_end":98},"alias_span":null,"name":"SamplerBindingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2919},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1311,"byte_end":1329,"line_start":36,"line_end":36,"column_start":5,"column_end":23},"alias_span":null,"name":"SamplerBorderColor","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":12},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1331,"byte_end":1345,"line_start":36,"line_end":36,"column_start":25,"column_end":39},"alias_span":null,"name":"ShaderLocation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":864},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1347,"byte_end":1358,"line_start":36,"line_end":36,"column_start":41,"column_end":52},"alias_span":null,"name":"ShaderModel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":936},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1360,"byte_end":1372,"line_start":36,"line_end":36,"column_start":54,"column_end":66},"alias_span":null,"name":"ShaderStages","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1914},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1374,"byte_end":1390,"line_start":36,"line_end":36,"column_start":68,"column_end":84},"alias_span":null,"name":"StencilFaceState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1875},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1396,"byte_end":1412,"line_start":37,"line_end":37,"column_start":5,"column_end":21},"alias_span":null,"name":"StencilOperation","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1804},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1414,"byte_end":1426,"line_start":37,"line_end":37,"column_start":23,"column_end":35},"alias_span":null,"name":"StencilState","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2788},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1428,"byte_end":1448,"line_start":37,"line_end":37,"column_start":37,"column_end":57},"alias_span":null,"name":"StorageTextureAccess","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2439},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1450,"byte_end":1470,"line_start":37,"line_end":37,"column_start":59,"column_end":79},"alias_span":null,"name":"SurfaceConfiguration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2459},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1472,"byte_end":1485,"line_start":37,"line_end":37,"column_start":81,"column_end":94},"alias_span":null,"name":"SurfaceStatus","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2577},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1491,"byte_end":1504,"line_start":38,"line_end":38,"column_start":5,"column_end":18},"alias_span":null,"name":"TextureAspect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2488},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1506,"byte_end":1522,"line_start":38,"line_end":38,"column_start":20,"column_end":36},"alias_span":null,"name":"TextureDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1483},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1524,"byte_end":1537,"line_start":38,"line_end":38,"column_start":38,"column_end":51},"alias_span":null,"name":"TextureFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1349},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1539,"byte_end":1564,"line_start":38,"line_end":38,"column_start":53,"column_end":78},"alias_span":null,"name":"TextureFormatFeatureFlags","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1441},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1570,"byte_end":1591,"line_start":39,"line_end":39,"column_start":5,"column_end":26},"alias_span":null,"name":"TextureFormatFeatures","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2764},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1593,"byte_end":1610,"line_start":39,"line_end":39,"column_start":28,"column_end":45},"alias_span":null,"name":"TextureSampleType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2332},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1612,"byte_end":1625,"line_start":39,"line_end":39,"column_start":47,"column_end":60},"alias_span":null,"name":"TextureUsages","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1043},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1627,"byte_end":1647,"line_start":39,"line_end":39,"column_start":62,"column_end":82},"alias_span":null,"name":"TextureViewDimension","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1994},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1649,"byte_end":1664,"line_start":39,"line_end":39,"column_start":84,"column_end":99},"alias_span":null,"name":"VertexAttribute","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2013},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1670,"byte_end":1682,"line_start":40,"line_end":40,"column_start":5,"column_end":17},"alias_span":null,"name":"VertexFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":1973},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1684,"byte_end":1698,"line_start":40,"line_end":40,"column_start":19,"column_end":33},"alias_span":null,"name":"VertexStepMode","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":16},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1700,"byte_end":1721,"line_start":40,"line_end":40,"column_start":35,"column_end":56},"alias_span":null,"name":"COPY_BUFFER_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":14},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1723,"byte_end":1751,"line_start":40,"line_end":40,"column_start":58,"column_end":86},"alias_span":null,"name":"COPY_BYTES_PER_ROW_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":17},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1757,"byte_end":1770,"line_start":41,"line_end":41,"column_start":5,"column_end":18},"alias_span":null,"name":"MAP_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":19},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1772,"byte_end":1795,"line_start":41,"line_end":41,"column_start":20,"column_end":43},"alias_span":null,"name":"PUSH_CONSTANT_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":15},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1797,"byte_end":1827,"line_start":41,"line_end":41,"column_start":45,"column_end":75},"alias_span":null,"name":"QUERY_RESOLVE_BUFFER_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":20},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1829,"byte_end":1850,"line_start":41,"line_end":41,"column_start":77,"column_end":98},"alias_span":null,"name":"QUERY_SET_MAX_QUERIES","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":21},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1856,"byte_end":1866,"line_start":42,"line_end":42,"column_start":5,"column_end":15},"alias_span":null,"name":"QUERY_SIZE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":18},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1868,"byte_end":1891,"line_start":42,"line_end":42,"column_start":17,"column_end":40},"alias_span":null,"name":"VERTEX_STRIDE_ALIGNMENT","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":366},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37125,"byte_end":37146,"line_start":1121,"line_end":1121,"column_start":14,"column_end":35},"alias_span":null,"name":"RequestAdapterOptionsBase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2881},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47073,"byte_end":47088,"line_start":1342,"line_end":1342,"column_start":14,"column_end":29},"alias_span":null,"name":"ImageCopyBufferBase","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":44,"index":2891},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47257,"byte_end":47273,"line_start":1346,"line_end":1346,"column_start":14,"column_end":30},"alias_span":null,"name":"ImageCopyTextureBase","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":0,"byte_end":119043,"line_start":1,"line_end":3342,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":469},{"krate":0,"index":696},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":712},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":725},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":732},{"krate":0,"index":735},{"krate":0,"index":738},{"krate":0,"index":741},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":748},{"krate":0,"index":751},{"krate":0,"index":754},{"krate":0,"index":757},{"krate":0,"index":760},{"krate":0,"index":763},{"krate":0,"index":766},{"krate":0,"index":769},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":787},{"krate":0,"index":790},{"krate":0,"index":793},{"krate":0,"index":796},{"krate":0,"index":799},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":814},{"krate":0,"index":817},{"krate":0,"index":820},{"krate":0,"index":823},{"krate":0,"index":826},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":853},{"krate":0,"index":856},{"krate":0,"index":859},{"krate":0,"index":862},{"krate":0,"index":865},{"krate":0,"index":868},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":877},{"krate":0,"index":880},{"krate":0,"index":883},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":901},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":910},{"krate":0,"index":913},{"krate":0,"index":916},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":955},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":967},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":977},{"krate":0,"index":1542},{"krate":0,"index":1547},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1555},{"krate":0,"index":980},{"krate":0,"index":993},{"krate":0,"index":1008},{"krate":0,"index":1023},{"krate":0,"index":1557},{"krate":0,"index":1559},{"krate":0,"index":1561},{"krate":0,"index":1564},{"krate":0,"index":1140},{"krate":0,"index":1566},{"krate":0,"index":1569},{"krate":0,"index":1571},{"krate":0,"index":1576},{"krate":0,"index":1578},{"krate":0,"index":1579},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1584},{"krate":0,"index":1585},{"krate":0,"index":1587},{"krate":0,"index":1591},{"krate":0,"index":1142},{"krate":0,"index":1593},{"krate":0,"index":1598},{"krate":0,"index":1600},{"krate":0,"index":1605},{"krate":0,"index":1607},{"krate":0,"index":1610},{"krate":0,"index":1613},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":1624},{"krate":0,"index":1627},{"krate":0,"index":1148},{"krate":0,"index":1629},{"krate":0,"index":1632},{"krate":0,"index":1150},{"krate":0,"index":1634},{"krate":0,"index":1637},{"krate":0,"index":1152},{"krate":0,"index":1639},{"krate":0,"index":1642},{"krate":0,"index":1154},{"krate":0,"index":1644},{"krate":0,"index":1647},{"krate":0,"index":1156},{"krate":0,"index":1158},{"krate":0,"index":1166},{"krate":0,"index":1170},{"krate":0,"index":1649},{"krate":0,"index":1652},{"krate":0,"index":1174},{"krate":0,"index":1654},{"krate":0,"index":1657},{"krate":0,"index":1176},{"krate":0,"index":1178},{"krate":0,"index":1659},{"krate":0,"index":1662},{"krate":0,"index":1180},{"krate":0,"index":1182},{"krate":0,"index":1664},{"krate":0,"index":1667},{"krate":0,"index":1184},{"krate":0,"index":1669},{"krate":0,"index":1672},{"krate":0,"index":1186},{"krate":0,"index":1674},{"krate":0,"index":1678},{"krate":0,"index":1681},{"krate":0,"index":1685},{"krate":0,"index":1688},{"krate":0,"index":1694},{"krate":0,"index":1697},{"krate":0,"index":1700},{"krate":0,"index":1188},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":1702},{"krate":0,"index":1705},{"krate":0,"index":1707},{"krate":0,"index":1727},{"krate":0,"index":1730},{"krate":0,"index":1733},{"krate":0,"index":1738},{"krate":0,"index":1741},{"krate":0,"index":1744},{"krate":0,"index":1751},{"krate":0,"index":1753},{"krate":0,"index":1756},{"krate":0,"index":1759},{"krate":0,"index":1763},{"krate":0,"index":1765},{"krate":0,"index":1768},{"krate":0,"index":1770},{"krate":0,"index":1195},{"krate":0,"index":1774},{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1783},{"krate":0,"index":1786},{"krate":0,"index":1790},{"krate":0,"index":1792},{"krate":0,"index":1795},{"krate":0,"index":1797},{"krate":0,"index":1198},{"krate":0,"index":1801},{"krate":0,"index":1806},{"krate":0,"index":1809},{"krate":0,"index":1812},{"krate":0,"index":1817},{"krate":0,"index":1820},{"krate":0,"index":1201},{"krate":0,"index":1203},{"krate":0,"index":1206},{"krate":0,"index":1208},{"krate":0,"index":1210},{"krate":0,"index":1212},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1823},{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1848},{"krate":0,"index":1853},{"krate":0,"index":1856},{"krate":0,"index":1859},{"krate":0,"index":1862},{"krate":0,"index":1876},{"krate":0,"index":1879},{"krate":0,"index":1882},{"krate":0,"index":1884},{"krate":0,"index":1220},{"krate":0,"index":1888},{"krate":0,"index":1892},{"krate":0,"index":1895},{"krate":0,"index":1898},{"krate":0,"index":1903},{"krate":0,"index":1906},{"krate":0,"index":1909},{"krate":0,"index":1915},{"krate":0,"index":1919},{"krate":0,"index":1923},{"krate":0,"index":1927},{"krate":0,"index":1932},{"krate":0,"index":1935},{"krate":0,"index":1938},{"krate":0,"index":1942},{"krate":0,"index":1944},{"krate":0,"index":1947},{"krate":0,"index":1949},{"krate":0,"index":1953},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1964},{"krate":0,"index":1969},{"krate":0,"index":1972},{"krate":0,"index":1975},{"krate":0,"index":1985},{"krate":0,"index":1988},{"krate":0,"index":1991},{"krate":0,"index":1994},{"krate":0,"index":1997},{"krate":0,"index":2000},{"krate":0,"index":2003},{"krate":0,"index":2009},{"krate":0,"index":2012},{"krate":0,"index":1222},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1230},{"krate":0,"index":2015},{"krate":0,"index":2019},{"krate":0,"index":2022},{"krate":0,"index":2025},{"krate":0,"index":2032},{"krate":0,"index":2035},{"krate":0,"index":2038},{"krate":0,"index":2041},{"krate":0,"index":2043},{"krate":0,"index":2047},{"krate":0,"index":2049},{"krate":0,"index":2052},{"krate":0,"index":2056},{"krate":0,"index":2061},{"krate":0,"index":2063},{"krate":0,"index":2072},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1253},{"krate":0,"index":1267},{"krate":0,"index":1298},{"krate":0,"index":2082},{"krate":0,"index":2084},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2092},{"krate":0,"index":1300},{"krate":0,"index":1302},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2104},{"krate":0,"index":1303},{"krate":0,"index":1305},{"krate":0,"index":2106},{"krate":0,"index":2111},{"krate":0,"index":2113},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2117},{"krate":0,"index":1306},{"krate":0,"index":1309},{"krate":0,"index":2119},{"krate":0,"index":2123},{"krate":0,"index":2126},{"krate":0,"index":2131},{"krate":0,"index":1312},{"krate":0,"index":1315},{"krate":0,"index":1318},{"krate":0,"index":1320},{"krate":0,"index":1322},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1328},{"krate":0,"index":1335},{"krate":0,"index":1341},{"krate":0,"index":1343},{"krate":0,"index":1350},{"krate":0,"index":1352},{"krate":0,"index":1354},{"krate":0,"index":1368},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1392},{"krate":0,"index":1396},{"krate":0,"index":1400},{"krate":0,"index":1403},{"krate":0,"index":1406},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":1422},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":1446},{"krate":0,"index":1449},{"krate":0,"index":1458},{"krate":0,"index":1460},{"krate":0,"index":1462},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":2134},{"krate":0,"index":2140},{"krate":0,"index":1470},{"krate":0,"index":1472}],"decl_id":null,"docs":" A cross-platform graphics and compute library based on [WebGPU](https://gpuweb.github.io/gpuweb/).","sig":null,"attributes":[{"value":"/ A cross-platform graphics and compute library based on [WebGPU](https://gpuweb.github.io/gpuweb/).","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":0,"byte_end":102,"line_start":1,"line_end":1,"column_start":1,"column_end":103}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103,"byte_end":106,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ To start using the API, create an [`Instance`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":107,"byte_end":158,"line_start":3,"line_end":3,"column_start":1,"column_end":52}},{"value":"warn(missing_docs)","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":249,"byte_end":271,"line_start":6,"line_end":6,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":469},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":545},{"krate":0,"index":555},{"krate":0,"index":621},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":668},{"krate":0,"index":671},{"krate":0,"index":672},{"krate":0,"index":675},{"krate":0,"index":678},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":685},{"krate":0,"index":689},{"krate":0,"index":693}],"decl_id":null,"docs":" Utility structures and functions.\n","sig":null,"attributes":[{"value":"/ Utility structures and functions.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199292,"byte_end":199329,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":528},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":204703,"byte_end":204714,"line_start":58,"line_end":58,"column_start":12,"column_end":23},"name":"StagingBelt","qualname":"::util::belt::StagingBelt","value":"StagingBelt {  }","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534}],"decl_id":null,"docs":" Staging belt is a machine that uploads data.","sig":null,"attributes":[{"value":"/ Staging belt is a machine that uploads data.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":204163,"byte_end":204211,"line_start":47,"line_end":47,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":204212,"byte_end":204215,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Internally it uses a ring-buffer of staging buffers that are sub-allocated.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":204216,"byte_end":204295,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/ It has an advantage over `Queue.write_buffer` in a way that it returns a mutable slice,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":204296,"byte_end":204387,"line_start":50,"line_end":50,"column_start":1,"column_end":92}},{"value":"/ which you can fill to avoid an extra data copy.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":204388,"byte_end":204439,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":204440,"byte_end":204443,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ Using a staging belt is slightly complicated, and generally goes as follows:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":204444,"byte_end":204524,"line_start":53,"line_end":53,"column_start":1,"column_end":81}},{"value":"/ - Write to buffers that need writing to using `write_buffer`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":204525,"byte_end":204590,"line_start":54,"line_end":54,"column_start":1,"column_end":66}},{"value":"/ - Call `finish`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":204591,"byte_end":204611,"line_start":55,"line_end":55,"column_start":1,"column_end":21}},{"value":"/ - Submit all command encoders used with `write_buffer`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":204612,"byte_end":204671,"line_start":56,"line_end":56,"column_start":1,"column_end":60}},{"value":"/ - Call `recall`","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":204672,"byte_end":204691,"line_start":57,"line_end":57,"column_start":1,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205382,"byte_end":205385,"line_start":76,"line_end":76,"column_start":12,"column_end":15},"name":"new","qualname":"<StagingBelt>::new","value":"pub fn new(BufferAddress) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new staging belt.","sig":null,"attributes":[{"value":"/ Create a new staging belt.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205133,"byte_end":205163,"line_start":71,"line_end":71,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205168,"byte_end":205171,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The `chunk_size` is the unit of internal buffer allocation.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205176,"byte_end":205239,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ It's better when it's big, but ideally still 1-4 times less than","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205244,"byte_end":205312,"line_start":74,"line_end":74,"column_start":5,"column_end":73}},{"value":"/ the total amount of data uploaded per submission.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205317,"byte_end":205370,"line_start":75,"line_end":75,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205999,"byte_end":206011,"line_start":93,"line_end":93,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<StagingBelt>::write_buffer","value":"pub fn write_buffer(&mut Self, &mut CommandEncoder, &Buffer, BufferAddress,\nBufferSize, &Device) -> BufferViewMut","parent":null,"children":[],"decl_id":null,"docs":" Allocate the staging belt slice of `size` to be uploaded into the `target` buffer\n at the specified offset.","sig":null,"attributes":[{"value":"/ Allocate the staging belt slice of `size` to be uploaded into the `target` buffer","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205697,"byte_end":205782,"line_start":88,"line_end":88,"column_start":5,"column_end":90}},{"value":"/ at the specified offset.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205787,"byte_end":205815,"line_start":89,"line_end":89,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205820,"byte_end":205823,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The upload will be placed into the provided command encoder. This encoder","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205828,"byte_end":205905,"line_start":91,"line_end":91,"column_start":5,"column_end":82}},{"value":"/ must be submitted after `finish` is called and before `recall` is called.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205910,"byte_end":205987,"line_start":92,"line_end":92,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":207853,"byte_end":207859,"line_start":148,"line_end":148,"column_start":12,"column_end":18},"name":"finish","qualname":"<StagingBelt>::finish","value":"pub fn finish(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Prepare currently mapped buffers for use in a submission.","sig":null,"attributes":[{"value":"/ Prepare currently mapped buffers for use in a submission.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":207641,"byte_end":207702,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":207707,"byte_end":207710,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ At this point, all the partially used staging buffers are closed until","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":207715,"byte_end":207789,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ the GPU is done copying the data from them.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":207794,"byte_end":207841,"line_start":147,"line_end":147,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":208197,"byte_end":208203,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"recall","qualname":"<StagingBelt>::recall","value":"pub fn recall(&mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Recall all of the closed buffers back to be reused.","sig":null,"attributes":[{"value":"/ Recall all of the closed buffers back to be reused.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":208024,"byte_end":208079,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":208084,"byte_end":208087,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This has to be called after the command encoders written to `write_buffer` are submitted!","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":208092,"byte_end":208185,"line_start":157,"line_end":157,"column_start":5,"column_end":98}}]},{"kind":"Struct","id":{"krate":0,"index":1516},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209176,"byte_end":209196,"line_start":5,"line_end":5,"column_start":12,"column_end":32},"name":"BufferInitDescriptor","qualname":"::util::device::BufferInitDescriptor","value":"BufferInitDescriptor { label, contents, usage }","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520}],"decl_id":null,"docs":" Describes a [Buffer](crate::Buffer) when allocating.\n","sig":null,"attributes":[{"value":"/ Describes a [Buffer](crate::Buffer) when allocating.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209063,"byte_end":209119,"line_start":3,"line_end":3,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1518},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209309,"byte_end":209314,"line_start":7,"line_end":7,"column_start":9,"column_end":14},"name":"label","qualname":"::util::device::BufferInitDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":" Debug label of a buffer. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of a buffer. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209207,"byte_end":209300,"line_start":6,"line_end":6,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":1519},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209384,"byte_end":209392,"line_start":9,"line_end":9,"column_start":9,"column_end":17},"name":"contents","qualname":"::util::device::BufferInitDescriptor::contents","value":"&'a [u8]","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":" Contents of a buffer on creation.\n","sig":null,"attributes":[{"value":"/ Contents of a buffer on creation.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209338,"byte_end":209375,"line_start":8,"line_end":8,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1520},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209534,"byte_end":209539,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"name":"usage","qualname":"::util::device::BufferInitDescriptor::usage","value":"wgpu_types::BufferUsages","parent":{"krate":0,"index":1516},"children":[],"decl_id":null,"docs":" Usages of a buffer. If the buffer is used in any way that isn't specified here, the operation\n will panic.\n","sig":null,"attributes":[{"value":"/ Usages of a buffer. If the buffer is used in any way that isn't specified here, the operation","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209408,"byte_end":209505,"line_start":10,"line_end":10,"column_start":5,"column_end":102}},{"value":"/ will panic.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209510,"byte_end":209525,"line_start":11,"line_end":11,"column_start":5,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":549},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209628,"byte_end":209637,"line_start":16,"line_end":16,"column_start":11,"column_end":20},"name":"DeviceExt","qualname":"::util::device::DeviceExt","value":"DeviceExt","parent":null,"children":[{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" Utility methods not meant to be in the main API.\n","sig":null,"attributes":[{"value":"/ Utility methods not meant to be in the main API.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209565,"byte_end":209617,"line_start":15,"line_end":15,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209717,"byte_end":209735,"line_start":18,"line_end":18,"column_start":8,"column_end":26},"name":"create_buffer_init","qualname":"::util::device::DeviceExt::create_buffer_init","value":"pub fn create_buffer_init(&Self, &BufferInitDescriptor) -> crate::Buffer","parent":{"krate":0,"index":549},"children":[],"decl_id":null,"docs":" Creates a [Buffer](crate::Buffer) with data to initialize it.\n","sig":null,"attributes":[{"value":"/ Creates a [Buffer](crate::Buffer) with data to initialize it.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209644,"byte_end":209709,"line_start":17,"line_end":17,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":210360,"byte_end":210384,"line_start":32,"line_end":32,"column_start":8,"column_end":32},"name":"create_texture_with_data","qualname":"::util::device::DeviceExt::create_texture_with_data","value":"pub fn create_texture_with_data(&Self, &crate::Queue,\n&crate::TextureDescriptor, &[u8]) -> crate::Texture","parent":{"krate":0,"index":549},"children":[],"decl_id":null,"docs":" Upload an entire texture and its mipmaps from a source buffer.","sig":null,"attributes":[{"value":"/ Upload an entire texture and its mipmaps from a source buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209795,"byte_end":209861,"line_start":20,"line_end":20,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209866,"byte_end":209869,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Expects all mipmaps to be tightly packed in the data buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209874,"byte_end":209938,"line_start":22,"line_end":22,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209943,"byte_end":209946,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ If the texture is a 2DArray texture, uploads each layer in order, expecting","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":209951,"byte_end":210030,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ each layer and its mips to be tightly packed.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":210035,"byte_end":210084,"line_start":25,"line_end":25,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":210089,"byte_end":210092,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":210097,"byte_end":210109,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/ Layer0Mip0 Layer0Mip1 Layer0Mip2 ... Layer1Mip0 Layer1Mip1 Layer1Mip2 ...","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":210114,"byte_end":210191,"line_start":28,"line_end":28,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":210196,"byte_end":210199,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Implicitly adds the `COPY_DST` usage if it is not present in the descriptor,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":210204,"byte_end":210284,"line_start":30,"line_end":30,"column_start":5,"column_end":85}},{"value":"/ as it is required to be able to upload the data to the gpu.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":210289,"byte_end":210352,"line_start":31,"line_end":31,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":588},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215187,"byte_end":215200,"line_start":8,"line_end":8,"column_start":11,"column_end":24},"name":"RenderEncoder","qualname":"::util::encoder::RenderEncoder","value":"RenderEncoder<'a>","parent":null,"children":[{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"decl_id":null,"docs":" Methods shared by [`RenderPass`] and [`RenderBundleEncoder`].\n","sig":null,"attributes":[{"value":"/ Methods shared by [`RenderPass`] and [`RenderBundleEncoder`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215111,"byte_end":215176,"line_start":7,"line_end":7,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215511,"byte_end":215525,"line_start":13,"line_end":13,"column_start":8,"column_end":22},"name":"set_bind_group","qualname":"::util::encoder::RenderEncoder::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when any `draw()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215211,"byte_end":215293,"line_start":9,"line_end":9,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when any `draw()` function is called must match the layout of this bind group.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215298,"byte_end":215403,"line_start":10,"line_end":10,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215408,"byte_end":215411,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in order of their declaration.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215416,"byte_end":215503,"line_start":12,"line_end":12,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215740,"byte_end":215752,"line_start":18,"line_end":18,"column_start":8,"column_end":20},"name":"set_pipeline","qualname":"::util::encoder::RenderEncoder::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a RenderPipeline)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Sets the active render pipeline.","sig":null,"attributes":[{"value":"/ Sets the active render pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215609,"byte_end":215645,"line_start":15,"line_end":15,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215650,"byte_end":215653,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will exhibit the behavior defined by `pipeline`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215658,"byte_end":215732,"line_start":17,"line_end":17,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216003,"byte_end":216019,"line_start":24,"line_end":24,"column_start":8,"column_end":24},"name":"set_index_buffer","qualname":"::util::encoder::RenderEncoder::set_index_buffer","value":"pub fn set_index_buffer(&mut Self, BufferSlice, IndexFormat)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Sets the active index buffer.","sig":null,"attributes":[{"value":"/ Sets the active index buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215800,"byte_end":215833,"line_start":20,"line_end":20,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215838,"byte_end":215841,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw_indexed`](RenderEncoder::draw_indexed) on this [`RenderEncoder`] will","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215846,"byte_end":215946,"line_start":22,"line_end":22,"column_start":5,"column_end":105}},{"value":"/ use `buffer` as the source index buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":215951,"byte_end":215995,"line_start":23,"line_end":23,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216533,"byte_end":216550,"line_start":36,"line_end":36,"column_start":8,"column_end":25},"name":"set_vertex_buffer","qualname":"::util::encoder::RenderEncoder::set_vertex_buffer","value":"pub fn set_vertex_buffer(&mut Self, u32, BufferSlice)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Assign a vertex buffer to a slot.","sig":null,"attributes":[{"value":"/ Assign a vertex buffer to a slot.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216095,"byte_end":216132,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216137,"byte_end":216140,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw`] and [`draw_indexed`] on this","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216145,"byte_end":216206,"line_start":28,"line_end":28,"column_start":5,"column_end":66}},{"value":"/ [`RenderEncoder`] will use `buffer` as one of the source vertex buffers.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216211,"byte_end":216287,"line_start":29,"line_end":29,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216292,"byte_end":216295,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The `slot` refers to the index of the matching descriptor in","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216300,"byte_end":216364,"line_start":31,"line_end":31,"column_start":5,"column_end":69}},{"value":"/ [VertexState::buffers](crate::VertexState::buffers).","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216369,"byte_end":216425,"line_start":32,"line_end":32,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216430,"byte_end":216433,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ [`draw`]: RenderEncoder::draw","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216438,"byte_end":216471,"line_start":34,"line_end":34,"column_start":5,"column_end":38}},{"value":"/ [`draw_indexed`]: RenderEncoder::draw_indexed","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216476,"byte_end":216525,"line_start":35,"line_end":35,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216768,"byte_end":216772,"line_start":41,"line_end":41,"column_start":8,"column_end":12},"name":"draw","qualname":"::util::encoder::RenderEncoder::draw","value":"pub fn draw(&mut Self, Range<u32>, Range<u32>)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s).","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s).","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216610,"byte_end":216664,"line_start":38,"line_end":38,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216669,"byte_end":216672,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderEncoder::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216677,"byte_end":216760,"line_start":40,"line_end":40,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217119,"byte_end":217131,"line_start":47,"line_end":47,"column_start":8,"column_end":20},"name":"draw_indexed","qualname":"::util::encoder::RenderEncoder::draw_indexed","value":"pub fn draw_indexed(&mut Self, Range<u32>, i32, Range<u32>)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216835,"byte_end":216924,"line_start":43,"line_end":43,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216929,"byte_end":216932,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderEncoder::set_index_buffer`], while the active","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":216937,"byte_end":217034,"line_start":45,"line_end":45,"column_start":5,"column_end":102}},{"value":"/ vertex buffers can be set with [`RenderEncoder::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217039,"byte_end":217111,"line_start":46,"line_end":46,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217878,"byte_end":217891,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"draw_indirect","qualname":"::util::encoder::RenderEncoder::draw_indirect","value":"pub fn draw_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217211,"byte_end":217312,"line_start":49,"line_end":49,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217317,"byte_end":217320,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderEncoder::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217325,"byte_end":217408,"line_start":51,"line_end":51,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217413,"byte_end":217416,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217421,"byte_end":217486,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217491,"byte_end":217494,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217499,"byte_end":217510,"line_start":55,"line_end":55,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217515,"byte_end":217529,"line_start":56,"line_end":56,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217534,"byte_end":217559,"line_start":57,"line_end":57,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217564,"byte_end":217625,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217630,"byte_end":217694,"line_start":59,"line_end":59,"column_start":5,"column_end":69}},{"value":"/     base_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217699,"byte_end":217766,"line_start":60,"line_end":60,"column_start":5,"column_end":72}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217771,"byte_end":217848,"line_start":61,"line_end":61,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217853,"byte_end":217858,"line_start":62,"line_end":62,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217863,"byte_end":217870,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218890,"byte_end":218911,"line_start":84,"line_end":84,"column_start":8,"column_end":29},"name":"draw_indexed_indirect","qualname":"::util::encoder::RenderEncoder::draw_indexed_indirect","value":"pub fn draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":217970,"byte_end":218059,"line_start":66,"line_end":66,"column_start":5,"column_end":94}},{"value":"/ based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218064,"byte_end":218115,"line_start":67,"line_end":67,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218120,"byte_end":218123,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderEncoder::set_index_buffer`], while the active","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218128,"byte_end":218225,"line_start":69,"line_end":69,"column_start":5,"column_end":102}},{"value":"/ vertex buffers can be set with [`RenderEncoder::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218230,"byte_end":218302,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218307,"byte_end":218310,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218315,"byte_end":218380,"line_start":72,"line_end":72,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218385,"byte_end":218388,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218393,"byte_end":218404,"line_start":74,"line_end":74,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218409,"byte_end":218423,"line_start":75,"line_end":75,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218428,"byte_end":218460,"line_start":76,"line_end":76,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218465,"byte_end":218526,"line_start":77,"line_end":77,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218531,"byte_end":218595,"line_start":78,"line_end":78,"column_start":5,"column_end":69}},{"value":"/     base_index: u32, // The base index within the index buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218600,"byte_end":218667,"line_start":79,"line_end":79,"column_start":5,"column_end":72}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218672,"byte_end":218778,"line_start":80,"line_end":80,"column_start":5,"column_end":111}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218783,"byte_end":218860,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218865,"byte_end":218870,"line_start":82,"line_end":82,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":218875,"byte_end":218882,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":220344,"byte_end":220362,"line_start":120,"line_end":120,"column_start":8,"column_end":26},"name":"set_push_constants","qualname":"::util::encoder::RenderEncoder::set_push_constants","value":"pub fn set_push_constants(&mut Self, wgt::ShaderStages, u32, &[u8])","parent":{"krate":0,"index":588},"children":[],"decl_id":null,"docs":" [`wgt::Features::PUSH_CONSTANTS`] must be enabled on the device in order to call this function.","sig":null,"attributes":[{"value":"/ [`wgt::Features::PUSH_CONSTANTS`] must be enabled on the device in order to call this function.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219021,"byte_end":219120,"line_start":90,"line_end":90,"column_start":5,"column_end":104}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219125,"byte_end":219128,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Set push constant data.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219133,"byte_end":219160,"line_start":92,"line_end":92,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219165,"byte_end":219168,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Offset is measured in bytes, but must be a multiple of [`wgt::PUSH_CONSTANT_ALIGNMENT`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219173,"byte_end":219265,"line_start":94,"line_end":94,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219270,"byte_end":219273,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Data size must be a multiple of 4 and must be aligned to the 4s, so we take an array of u32.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219278,"byte_end":219374,"line_start":96,"line_end":96,"column_start":5,"column_end":101}},{"value":"/ For example, with an offset of 4 and an array of `[u32; 3]`, that will write to the range","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219379,"byte_end":219472,"line_start":97,"line_end":97,"column_start":5,"column_end":98}},{"value":"/ of 4..16.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219477,"byte_end":219490,"line_start":98,"line_end":98,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219495,"byte_end":219498,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ For each byte in the range of push constant data written, the union of the stages of all push constant","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219503,"byte_end":219609,"line_start":100,"line_end":100,"column_start":5,"column_end":111}},{"value":"/ ranges that covers that byte must be exactly `stages`. There's no good way of explaining this simply,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219614,"byte_end":219719,"line_start":101,"line_end":101,"column_start":5,"column_end":110}},{"value":"/ so here are some examples:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219724,"byte_end":219754,"line_start":102,"line_end":102,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219759,"byte_end":219762,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219767,"byte_end":219778,"line_start":104,"line_end":104,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219783,"byte_end":219808,"line_start":105,"line_end":105,"column_start":5,"column_end":30}},{"value":"/ - 0..4 Vertex","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219813,"byte_end":219830,"line_start":106,"line_end":106,"column_start":5,"column_end":22}},{"value":"/ - 4..8 Fragment","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219835,"byte_end":219854,"line_start":107,"line_end":107,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219859,"byte_end":219866,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219871,"byte_end":219874,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in two set_push_constants calls. First for the `Vertex` range, second for the `Fragment` range.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":219879,"byte_end":220008,"line_start":110,"line_end":110,"column_start":5,"column_end":134}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":220013,"byte_end":220016,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":220021,"byte_end":220032,"line_start":112,"line_end":112,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":220037,"byte_end":220062,"line_start":113,"line_end":113,"column_start":5,"column_end":30}},{"value":"/ - 0..8  Vertex","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":220067,"byte_end":220085,"line_start":114,"line_end":114,"column_start":5,"column_end":23}},{"value":"/ - 4..12 Fragment","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":220090,"byte_end":220110,"line_start":115,"line_end":115,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":220115,"byte_end":220122,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":220127,"byte_end":220130,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in three set_push_constants calls. First for the `Vertex` only range 0..4, second","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":220135,"byte_end":220250,"line_start":118,"line_end":118,"column_start":5,"column_end":120}},{"value":"/ for the `Vertex | Fragment` range 4..8, third for the `Fragment` range 8..12.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":220255,"byte_end":220336,"line_start":119,"line_end":119,"column_start":5,"column_end":86}}]},{"kind":"Function","id":{"krate":0,"index":645},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/init.rs","byte_start":224324,"byte_end":224345,"line_start":14,"line_end":14,"column_start":8,"column_end":29},"name":"backend_bits_from_env","qualname":"::util::init::backend_bits_from_env","value":"pub fn backend_bits_from_env() -> Option<Backends>","parent":null,"children":[],"decl_id":null,"docs":" Get a set of backend bits from the environment variable WGPU_BACKEND.\n","sig":null,"attributes":[{"value":"/ Get a set of backend bits from the environment variable WGPU_BACKEND.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/init.rs","byte_start":224243,"byte_end":224316,"line_start":13,"line_end":13,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":646},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/init.rs","byte_start":224618,"byte_end":224643,"line_start":24,"line_end":24,"column_start":8,"column_end":33},"name":"power_preference_from_env","qualname":"::util::init::power_preference_from_env","value":"pub fn power_preference_from_env() -> Option<PowerPreference>","parent":null,"children":[],"decl_id":null,"docs":" Get a power preference from the environment variable WGPU_POWER_PREF\n","sig":null,"attributes":[{"value":"/ Get a power preference from the environment variable WGPU_POWER_PREF","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/init.rs","byte_start":224538,"byte_end":224610,"line_start":23,"line_end":23,"column_start":1,"column_end":73}}]},{"kind":"Function","id":{"krate":0,"index":647},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/init.rs","byte_start":225110,"byte_end":225137,"line_start":40,"line_end":40,"column_start":8,"column_end":35},"name":"initialize_adapter_from_env","qualname":"::util::init::initialize_adapter_from_env","value":"pub fn initialize_adapter_from_env(&Instance, Backends) -> Option<Adapter>","parent":null,"children":[],"decl_id":null,"docs":" Initialize the adapter obeying the WGPU_ADAPTER_NAME environment variable.\n","sig":null,"attributes":[{"value":"/ Initialize the adapter obeying the WGPU_ADAPTER_NAME environment variable.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/init.rs","byte_start":224988,"byte_end":225066,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/init.rs","byte_start":225067,"byte_end":225102,"line_start":39,"line_end":39,"column_start":1,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":648},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/init.rs","byte_start":226131,"byte_end":226169,"line_start":71,"line_end":71,"column_start":14,"column_end":52},"name":"initialize_adapter_from_env_or_default","qualname":"::util::init::initialize_adapter_from_env_or_default","value":"pub async fn initialize_adapter_from_env_or_default<'_,\n'_>(&'_ Instance, wgt::Backends, Option<&'_ Surface>) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Initialize the adapter obeying the WGPU_ADAPTER_NAME environment variable and if it doesn't exist fall back on a default adapter.\n","sig":null,"attributes":[{"value":"/ Initialize the adapter obeying the WGPU_ADAPTER_NAME environment variable and if it doesn't exist fall back on a default adapter.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/init.rs","byte_start":225984,"byte_end":226117,"line_start":70,"line_end":70,"column_start":1,"column_end":134}}]},{"kind":"Function","id":{"krate":0,"index":682},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199908,"byte_end":199918,"line_start":30,"line_end":30,"column_start":8,"column_end":18},"name":"make_spirv","qualname":"::util::make_spirv","value":"pub fn make_spirv(&[u8]) -> super::ShaderSource","parent":null,"children":[],"decl_id":null,"docs":" Treat the given byte slice as a SPIR-V module.","sig":null,"attributes":[{"value":"/ Treat the given byte slice as a SPIR-V module.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199622,"byte_end":199672,"line_start":20,"line_end":20,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199673,"byte_end":199676,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Panic","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199677,"byte_end":199688,"line_start":22,"line_end":22,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199689,"byte_end":199692,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This function panics if:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199693,"byte_end":199721,"line_start":24,"line_end":24,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199722,"byte_end":199725,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ - Input length isn't multiple of 4","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199726,"byte_end":199764,"line_start":26,"line_end":26,"column_start":1,"column_end":39}},{"value":"/ - Input is longer than [`usize::max_value`]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199765,"byte_end":199812,"line_start":27,"line_end":27,"column_start":1,"column_end":48}},{"value":"/ - SPIR-V magic number is missing from beginning of stream","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199813,"byte_end":199874,"line_start":28,"line_end":28,"column_start":1,"column_end":62}},{"value":"cfg(feature = \"spirv\")","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":199875,"byte_end":199900,"line_start":29,"line_end":29,"column_start":1,"column_end":26}}]},{"kind":"Function","id":{"krate":0,"index":683},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":200245,"byte_end":200259,"line_start":38,"line_end":38,"column_start":8,"column_end":22},"name":"make_spirv_raw","qualname":"::util::make_spirv_raw","value":"pub fn make_spirv_raw(&[u8]) -> Cow<, [u32]>","parent":null,"children":[],"decl_id":null,"docs":" Version of make_spirv intended for use with [`Device::create_shader_module_spirv`].\n Returns raw slice instead of ShaderSource.","sig":null,"attributes":[{"value":"/ Version of make_spirv intended for use with [`Device::create_shader_module_spirv`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":200013,"byte_end":200100,"line_start":34,"line_end":34,"column_start":1,"column_end":88}},{"value":"/ Returns raw slice instead of ShaderSource.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":200101,"byte_end":200147,"line_start":35,"line_end":35,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":200148,"byte_end":200151,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ [`Device::create_shader_module_spirv`]: crate::Device::create_shader_module_spirv","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":200152,"byte_end":200237,"line_start":37,"line_end":37,"column_start":1,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":685},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":201315,"byte_end":201329,"line_start":71,"line_end":71,"column_start":12,"column_end":26},"name":"DownloadBuffer","qualname":"::util::DownloadBuffer","value":"","parent":null,"children":[],"decl_id":null,"docs":" CPU accessible buffer used to download data back from the GPU.\n","sig":null,"attributes":[{"value":"/ CPU accessible buffer used to download data back from the GPU.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":201237,"byte_end":201303,"line_start":70,"line_end":70,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":201460,"byte_end":201471,"line_start":75,"line_end":75,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<DownloadBuffer>::read_buffer","value":"pub fn read_buffer(&super::Device, &super::Queue, &super::BufferSlice)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Asynchronously read the contents of a buffer.\n","sig":null,"attributes":[{"value":"/ Asynchronously read the contents of a buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":201399,"byte_end":201448,"line_start":74,"line_end":74,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1543},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":2096,"byte_end":2107,"line_start":51,"line_end":51,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::ErrorFilter::OutOfMemory","value":"ErrorFilter::OutOfMemory","parent":{"krate":0,"index":1542},"children":[],"decl_id":null,"docs":" Catch only out-of-memory errors.\n","sig":null,"attributes":[{"value":"/ Catch only out-of-memory errors.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":2055,"byte_end":2091,"line_start":50,"line_end":50,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1545},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":2151,"byte_end":2161,"line_start":53,"line_end":53,"column_start":5,"column_end":15},"name":"Validation","qualname":"::ErrorFilter::Validation","value":"ErrorFilter::Validation","parent":{"krate":0,"index":1542},"children":[],"decl_id":null,"docs":" Catch only validation errors.\n","sig":null,"attributes":[{"value":"/ Catch only validation errors.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":2113,"byte_end":2146,"line_start":52,"line_end":52,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":1542},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":2037,"byte_end":2048,"line_start":49,"line_end":49,"column_start":10,"column_end":21},"name":"ErrorFilter","qualname":"::ErrorFilter","value":"pub enum ErrorFilter { OutOfMemory, Validation, }","parent":null,"children":[{"krate":0,"index":1543},{"krate":0,"index":1545}],"decl_id":null,"docs":" Filter for error scopes.\n","sig":null,"attributes":[{"value":"/ Filter for error scopes.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":1946,"byte_end":1974,"line_start":47,"line_end":47,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":5903,"byte_end":5912,"line_start":166,"line_end":166,"column_start":10,"column_end":19},"name":"AdapterId","qualname":"::Context::AdapterId","value":"type AdapterId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":5954,"byte_end":5962,"line_start":167,"line_end":167,"column_start":10,"column_end":18},"name":"DeviceId","qualname":"::Context::DeviceId","value":"type DeviceId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6004,"byte_end":6011,"line_start":168,"line_end":168,"column_start":10,"column_end":17},"name":"QueueId","qualname":"::Context::QueueId","value":"type QueueId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6053,"byte_end":6067,"line_start":169,"line_end":169,"column_start":10,"column_end":24},"name":"ShaderModuleId","qualname":"::Context::ShaderModuleId","value":"type ShaderModuleId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6109,"byte_end":6126,"line_start":170,"line_end":170,"column_start":10,"column_end":27},"name":"BindGroupLayoutId","qualname":"::Context::BindGroupLayoutId","value":"type BindGroupLayoutId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6168,"byte_end":6179,"line_start":171,"line_end":171,"column_start":10,"column_end":21},"name":"BindGroupId","qualname":"::Context::BindGroupId","value":"type BindGroupId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6221,"byte_end":6234,"line_start":172,"line_end":172,"column_start":10,"column_end":23},"name":"TextureViewId","qualname":"::Context::TextureViewId","value":"type TextureViewId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6276,"byte_end":6285,"line_start":173,"line_end":173,"column_start":10,"column_end":19},"name":"SamplerId","qualname":"::Context::SamplerId","value":"type SamplerId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1032},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6327,"byte_end":6335,"line_start":174,"line_end":174,"column_start":10,"column_end":18},"name":"BufferId","qualname":"::Context::BufferId","value":"type BufferId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1033},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6377,"byte_end":6386,"line_start":175,"line_end":175,"column_start":10,"column_end":19},"name":"TextureId","qualname":"::Context::TextureId","value":"type TextureId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1034},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6428,"byte_end":6438,"line_start":176,"line_end":176,"column_start":10,"column_end":20},"name":"QuerySetId","qualname":"::Context::QuerySetId","value":"type QuerySetId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1035},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6480,"byte_end":6496,"line_start":177,"line_end":177,"column_start":10,"column_end":26},"name":"PipelineLayoutId","qualname":"::Context::PipelineLayoutId","value":"type PipelineLayoutId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1036},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6538,"byte_end":6554,"line_start":178,"line_end":178,"column_start":10,"column_end":26},"name":"RenderPipelineId","qualname":"::Context::RenderPipelineId","value":"type RenderPipelineId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1037},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6596,"byte_end":6613,"line_start":179,"line_end":179,"column_start":10,"column_end":27},"name":"ComputePipelineId","qualname":"::Context::ComputePipelineId","value":"type ComputePipelineId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1038},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6655,"byte_end":6671,"line_start":180,"line_end":180,"column_start":10,"column_end":26},"name":"CommandEncoderId","qualname":"::Context::CommandEncoderId","value":"type CommandEncoderId: Debug;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1039},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6689,"byte_end":6702,"line_start":181,"line_end":181,"column_start":10,"column_end":23},"name":"ComputePassId","qualname":"::Context::ComputePassId","value":"type ComputePassId: Debug + ComputePassInner<Self>;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6745,"byte_end":6757,"line_start":182,"line_end":182,"column_start":10,"column_end":22},"name":"RenderPassId","qualname":"::Context::RenderPassId","value":"type RenderPassId: Debug + RenderPassInner<Self>;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6799,"byte_end":6814,"line_start":183,"line_end":183,"column_start":10,"column_end":25},"name":"CommandBufferId","qualname":"::Context::CommandBufferId","value":"type CommandBufferId: Debug + Send + Sync;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6846,"byte_end":6867,"line_start":184,"line_end":184,"column_start":10,"column_end":31},"name":"RenderBundleEncoderId","qualname":"::Context::RenderBundleEncoderId","value":"type RenderBundleEncoderId: Debug + RenderInner<Self>;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6905,"byte_end":6919,"line_start":185,"line_end":185,"column_start":10,"column_end":24},"name":"RenderBundleId","qualname":"::Context::RenderBundleId","value":"type RenderBundleId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":6961,"byte_end":6970,"line_start":186,"line_end":186,"column_start":10,"column_end":19},"name":"SurfaceId","qualname":"::Context::SurfaceId","value":"type SurfaceId: Debug + Send + Sync + 'static;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":7013,"byte_end":7032,"line_start":188,"line_end":188,"column_start":10,"column_end":29},"name":"SurfaceOutputDetail","qualname":"::Context::SurfaceOutputDetail","value":"type SurfaceOutputDetail: Send;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":7050,"byte_end":7070,"line_start":190,"line_end":190,"column_start":10,"column_end":30},"name":"RequestAdapterFuture","qualname":"::Context::RequestAdapterFuture","value":"type RequestAdapterFuture: Future<Output = Option<Self::AdapterId>> + Send;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":7130,"byte_end":7149,"line_start":191,"line_end":191,"column_start":10,"column_end":29},"name":"RequestDeviceFuture","qualname":"::Context::RequestDeviceFuture","value":"type RequestDeviceFuture: Future<Output = Result<(Self::DeviceId, Self::QueueId), RequestDeviceError>>\n        + Send;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":7253,"byte_end":7267,"line_start":193,"line_end":193,"column_start":10,"column_end":24},"name":"MapAsyncFuture","qualname":"::Context::MapAsyncFuture","value":"type MapAsyncFuture: Future<Output = Result<(), BufferAsyncError>> + Send;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":7332,"byte_end":7357,"line_start":194,"line_end":194,"column_start":10,"column_end":35},"name":"OnSubmittedWorkDoneFuture","qualname":"::Context::OnSubmittedWorkDoneFuture","value":"type OnSubmittedWorkDoneFuture: Future<Output = ()> + Send;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":7396,"byte_end":7415,"line_start":195,"line_end":195,"column_start":10,"column_end":29},"name":"PopErrorScopeFuture","qualname":"::Context::PopErrorScopeFuture","value":"type PopErrorScopeFuture: Future<Output = Option<Error>> + Send;","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1557},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18092,"byte_end":18100,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"Instance","qualname":"::Instance","value":"Instance {  }","parent":null,"children":[{"krate":0,"index":1558}],"decl_id":null,"docs":" Context for all other wgpu objects. Instance of wgpu.","sig":null,"attributes":[{"value":"/ Context for all other wgpu objects. Instance of wgpu.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":17842,"byte_end":17899,"line_start":503,"line_end":503,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":17900,"byte_end":17903,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/ This is the first thing you create when using wgpu.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":17904,"byte_end":17959,"line_start":505,"line_end":505,"column_start":1,"column_end":56}},{"value":"/ Its primary use is to create [`Adapter`]s and [`Surface`]s.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":17960,"byte_end":18023,"line_start":506,"line_end":506,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18024,"byte_end":18027,"line_start":507,"line_end":507,"column_start":1,"column_end":4}},{"value":"/ Does not have to be kept alive.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18028,"byte_end":18063,"line_start":508,"line_end":508,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1561},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18395,"byte_end":18402,"line_start":521,"line_end":521,"column_start":12,"column_end":19},"name":"Adapter","qualname":"::Adapter","value":"Adapter {  }","parent":null,"children":[{"krate":0,"index":1562},{"krate":0,"index":1563}],"decl_id":null,"docs":" Handle to a physical graphics and/or compute device.","sig":null,"attributes":[{"value":"/ Handle to a physical graphics and/or compute device.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18127,"byte_end":18183,"line_start":514,"line_end":514,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18184,"byte_end":18187,"line_start":515,"line_end":515,"column_start":1,"column_end":4}},{"value":"/ Adapters can be used to open a connection to the corresponding [`Device`]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18188,"byte_end":18265,"line_start":516,"line_end":516,"column_start":1,"column_end":78}},{"value":"/ on the host system by using [`Adapter::request_device`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18266,"byte_end":18326,"line_start":517,"line_end":517,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18327,"byte_end":18330,"line_start":518,"line_end":518,"column_start":1,"column_end":4}},{"value":"/ Does not have to be kept alive.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18331,"byte_end":18366,"line_start":519,"line_end":519,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1566},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18934,"byte_end":18940,"line_start":541,"line_end":541,"column_start":12,"column_end":18},"name":"Device","qualname":"::Device","value":"Device {  }","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568}],"decl_id":null,"docs":" Open connection to a graphics and/or compute device.","sig":null,"attributes":[{"value":"/ Open connection to a graphics and/or compute device.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18614,"byte_end":18670,"line_start":534,"line_end":534,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18671,"byte_end":18674,"line_start":535,"line_end":535,"column_start":1,"column_end":4}},{"value":"/ Responsible for the creation of most rendering and compute resources.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18675,"byte_end":18748,"line_start":536,"line_end":536,"column_start":1,"column_end":74}},{"value":"/ These are then used in commands, which are submitted to a [`Queue`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18749,"byte_end":18821,"line_start":537,"line_end":537,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18822,"byte_end":18825,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ A device may be requested from an adapter with [`Adapter::request_device`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18826,"byte_end":18905,"line_start":539,"line_end":539,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1572},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":19188,"byte_end":19192,"line_start":551,"line_end":551,"column_start":5,"column_end":9},"name":"Wait","qualname":"::Maintain::Wait","value":"Maintain::Wait","parent":{"krate":0,"index":1571},"children":[],"decl_id":null,"docs":" Block\n","sig":null,"attributes":[{"value":"/ Block","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":19174,"byte_end":19183,"line_start":550,"line_end":550,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1574},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":19218,"byte_end":19222,"line_start":553,"line_end":553,"column_start":5,"column_end":9},"name":"Poll","qualname":"::Maintain::Poll","value":"Maintain::Poll","parent":{"krate":0,"index":1571},"children":[],"decl_id":null,"docs":" Don't block\n","sig":null,"attributes":[{"value":"/ Don't block","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":19198,"byte_end":19213,"line_start":552,"line_end":552,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":1571},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":19159,"byte_end":19167,"line_start":549,"line_end":549,"column_start":10,"column_end":18},"name":"Maintain","qualname":"::Maintain","value":"pub enum Maintain { Wait, Poll, }","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1574}],"decl_id":null,"docs":" Passed to [`Device::poll`] to control if it should block or not. This has no effect on\n the web.\n","sig":null,"attributes":[{"value":"/ Passed to [`Device::poll`] to control if it should block or not. This has no effect on","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":19001,"byte_end":19091,"line_start":546,"line_end":546,"column_start":1,"column_end":91}},{"value":"/ the web.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":19092,"byte_end":19104,"line_start":547,"line_end":547,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":1593},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21151,"byte_end":21157,"line_start":620,"line_end":620,"column_start":12,"column_end":18},"name":"Buffer","qualname":"::Buffer","value":"Buffer {  }","parent":null,"children":[{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597}],"decl_id":null,"docs":" Handle to a GPU-accessible buffer.","sig":null,"attributes":[{"value":"/ Handle to a GPU-accessible buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":20958,"byte_end":20996,"line_start":615,"line_end":615,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":20997,"byte_end":21000,"line_start":616,"line_end":616,"column_start":1,"column_end":4}},{"value":"/ Created with [`Device::create_buffer`] or","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21001,"byte_end":21046,"line_start":617,"line_end":617,"column_start":1,"column_end":46}},{"value":"/ [`DeviceExt::create_buffer_init`](util::DeviceExt::create_buffer_init).","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21047,"byte_end":21122,"line_start":618,"line_end":618,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":1600},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21474,"byte_end":21485,"line_start":633,"line_end":633,"column_start":12,"column_end":23},"name":"BufferSlice","qualname":"::BufferSlice","value":"BufferSlice {  }","parent":null,"children":[{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604}],"decl_id":null,"docs":" Slice into a [`Buffer`].","sig":null,"attributes":[{"value":"/ Slice into a [`Buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21279,"byte_end":21307,"line_start":627,"line_end":627,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21308,"byte_end":21311,"line_start":628,"line_end":628,"column_start":1,"column_end":4}},{"value":"/ Created by calling [`Buffer::slice`]. To use the whole buffer, call with unbounded slice:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21312,"byte_end":21405,"line_start":629,"line_end":629,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21406,"byte_end":21409,"line_start":630,"line_end":630,"column_start":1,"column_end":4}},{"value":"/ `buffer.slice(..)`","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21410,"byte_end":21432,"line_start":631,"line_end":631,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":1613},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21694,"byte_end":21701,"line_start":643,"line_end":643,"column_start":12,"column_end":19},"name":"Texture","qualname":"::Texture","value":"Texture {  }","parent":null,"children":[{"krate":0,"index":1614},{"krate":0,"index":1615},{"krate":0,"index":1616}],"decl_id":null,"docs":" Handle to a texture on the GPU.","sig":null,"attributes":[{"value":"/ Handle to a texture on the GPU.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21576,"byte_end":21611,"line_start":639,"line_end":639,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21612,"byte_end":21615,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ Created by calling [`Device::create_texture`]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21616,"byte_end":21665,"line_start":641,"line_end":641,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1619},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21966,"byte_end":21977,"line_start":654,"line_end":654,"column_start":12,"column_end":23},"name":"TextureView","qualname":"::TextureView","value":"TextureView {  }","parent":null,"children":[{"krate":0,"index":1620},{"krate":0,"index":1621}],"decl_id":null,"docs":" Handle to a texture view.","sig":null,"attributes":[{"value":"/ Handle to a texture view.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21780,"byte_end":21809,"line_start":649,"line_end":649,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21810,"byte_end":21813,"line_start":650,"line_end":650,"column_start":1,"column_end":4}},{"value":"/ A `TextureView` object describes a texture and associated metadata needed by a","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21814,"byte_end":21896,"line_start":651,"line_end":651,"column_start":1,"column_end":83}},{"value":"/ [`RenderPipeline`] or [`BindGroup`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":21897,"byte_end":21937,"line_start":652,"line_end":652,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":1624},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22363,"byte_end":22370,"line_start":665,"line_end":665,"column_start":12,"column_end":19},"name":"Sampler","qualname":"::Sampler","value":"Sampler {  }","parent":null,"children":[{"krate":0,"index":1625},{"krate":0,"index":1626}],"decl_id":null,"docs":" Handle to a sampler.","sig":null,"attributes":[{"value":"/ Handle to a sampler.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22043,"byte_end":22067,"line_start":659,"line_end":659,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22068,"byte_end":22071,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ A `Sampler` object defines how a pipeline will sample from a [`TextureView`]. Samplers define","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22072,"byte_end":22169,"line_start":661,"line_end":661,"column_start":1,"column_end":98}},{"value":"/ image filters (including anisotropy) and address (wrapping) modes, among other things. See","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22170,"byte_end":22264,"line_start":662,"line_end":662,"column_start":1,"column_end":95}},{"value":"/ the documentation for [`SamplerDescriptor`] for more information.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22265,"byte_end":22334,"line_start":663,"line_end":663,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1629},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22854,"byte_end":22861,"line_start":683,"line_end":683,"column_start":12,"column_end":19},"name":"Surface","qualname":"::Surface","value":"Surface {  }","parent":null,"children":[{"krate":0,"index":1630},{"krate":0,"index":1631}],"decl_id":null,"docs":" Handle to a presentable surface.","sig":null,"attributes":[{"value":"/ Handle to a presentable surface.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22583,"byte_end":22619,"line_start":678,"line_end":678,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22620,"byte_end":22623,"line_start":679,"line_end":679,"column_start":1,"column_end":4}},{"value":"/ A `Surface` represents a platform-specific surface (e.g. a window) onto which rendered images may","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22624,"byte_end":22725,"line_start":680,"line_end":680,"column_start":1,"column_end":102}},{"value":"/ be presented. A `Surface` may be created with the unsafe function [`Instance::create_surface`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22726,"byte_end":22825,"line_start":681,"line_end":681,"column_start":1,"column_end":100}}]},{"kind":"Struct","id":{"krate":0,"index":1634},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":23528,"byte_end":23543,"line_start":703,"line_end":703,"column_start":12,"column_end":27},"name":"BindGroupLayout","qualname":"::BindGroupLayout","value":"BindGroupLayout {  }","parent":null,"children":[{"krate":0,"index":1635},{"krate":0,"index":1636}],"decl_id":null,"docs":" Handle to a binding group layout.","sig":null,"attributes":[{"value":"/ Handle to a binding group layout.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":23073,"byte_end":23110,"line_start":696,"line_end":696,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":23111,"byte_end":23114,"line_start":697,"line_end":697,"column_start":1,"column_end":4}},{"value":"/ A `BindGroupLayout` is a handle to the GPU-side layout of a binding group. It can be used to","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":23115,"byte_end":23211,"line_start":698,"line_end":698,"column_start":1,"column_end":97}},{"value":"/ create a [`BindGroupDescriptor`] object, which in turn can be used to create a [`BindGroup`]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":23212,"byte_end":23308,"line_start":699,"line_end":699,"column_start":1,"column_end":97}},{"value":"/ object with [`Device::create_bind_group`]. A series of `BindGroupLayout`s can also be used to","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":23309,"byte_end":23406,"line_start":700,"line_end":700,"column_start":1,"column_end":98}},{"value":"/ create a [`PipelineLayoutDescriptor`], which can be used to create a [`PipelineLayout`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":23407,"byte_end":23499,"line_start":701,"line_end":701,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":1639},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24176,"byte_end":24185,"line_start":723,"line_end":723,"column_start":12,"column_end":21},"name":"BindGroup","qualname":"::BindGroup","value":"BindGroup {  }","parent":null,"children":[{"krate":0,"index":1640},{"krate":0,"index":1641}],"decl_id":null,"docs":" Handle to a binding group.","sig":null,"attributes":[{"value":"/ Handle to a binding group.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":23782,"byte_end":23812,"line_start":716,"line_end":716,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":23813,"byte_end":23816,"line_start":717,"line_end":717,"column_start":1,"column_end":4}},{"value":"/ A `BindGroup` represents the set of resources bound to the bindings described by a","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":23817,"byte_end":23903,"line_start":718,"line_end":718,"column_start":1,"column_end":87}},{"value":"/ [`BindGroupLayout`]. It can be created with [`Device::create_bind_group`]. A `BindGroup` can","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":23904,"byte_end":24000,"line_start":719,"line_end":719,"column_start":1,"column_end":97}},{"value":"/ be bound to a particular [`RenderPass`] with [`RenderPass::set_bind_group`], or to a","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24001,"byte_end":24089,"line_start":720,"line_end":720,"column_start":1,"column_end":89}},{"value":"/ [`ComputePass`] with [`ComputePass::set_bind_group`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24090,"byte_end":24147,"line_start":721,"line_end":721,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":1644},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24714,"byte_end":24726,"line_start":742,"line_end":742,"column_start":12,"column_end":24},"name":"ShaderModule","qualname":"::ShaderModule","value":"ShaderModule {  }","parent":null,"children":[{"krate":0,"index":1645},{"krate":0,"index":1646}],"decl_id":null,"docs":" Handle to a compiled shader module.","sig":null,"attributes":[{"value":"/ Handle to a compiled shader module.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24405,"byte_end":24444,"line_start":736,"line_end":736,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24445,"byte_end":24448,"line_start":737,"line_end":737,"column_start":1,"column_end":4}},{"value":"/ A `ShaderModule` represents a compiled shader module on the GPU. It can be created by passing","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24449,"byte_end":24546,"line_start":738,"line_end":738,"column_start":1,"column_end":98}},{"value":"/ valid SPIR-V source code to [`Device::create_shader_module`]. Shader modules are used to define","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24547,"byte_end":24646,"line_start":739,"line_end":739,"column_start":1,"column_end":100}},{"value":"/ programmable stages of a pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24647,"byte_end":24685,"line_start":740,"line_end":740,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":25252,"byte_end":25257,"line_start":762,"line_end":762,"column_start":5,"column_end":10},"name":"SpirV","qualname":"::ShaderSource::SpirV","value":"ShaderSource::SpirV(Cow)","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":" SPIR-V module represented as a slice of words.","sig":null,"attributes":[{"value":"/ SPIR-V module represented as a slice of words.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":25018,"byte_end":25068,"line_start":757,"line_end":757,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":25073,"byte_end":25076,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ wgpu will attempt to parse and validate it, but the original binary","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":25081,"byte_end":25152,"line_start":759,"line_end":759,"column_start":5,"column_end":76}},{"value":"/ is passed to `gfx-rs` and `spirv_cross` for translation.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":25157,"byte_end":25217,"line_start":760,"line_end":760,"column_start":5,"column_end":65}},{"value":"cfg(feature = \"spirv\")","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":25222,"byte_end":25247,"line_start":761,"line_end":761,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26144,"byte_end":26148,"line_start":784,"line_end":784,"column_start":5,"column_end":9},"name":"Wgsl","qualname":"::ShaderSource::Wgsl","value":"ShaderSource::Wgsl(Cow)","parent":{"krate":0,"index":1158},"children":[],"decl_id":null,"docs":" WGSL module as a string slice.","sig":null,"attributes":[{"value":"/ WGSL module as a string slice.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":25902,"byte_end":25936,"line_start":778,"line_end":778,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":25941,"byte_end":25944,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ wgpu-rs will parse it and use for validation. It will attempt","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":25949,"byte_end":26014,"line_start":780,"line_end":780,"column_start":5,"column_end":70}},{"value":"/ to build a SPIR-V module internally and panic otherwise.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26019,"byte_end":26079,"line_start":781,"line_end":781,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26084,"byte_end":26087,"line_start":782,"line_end":782,"column_start":5,"column_end":8}},{"value":"/ Note: WGSL is not yet supported on the Web.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26092,"byte_end":26139,"line_start":783,"line_end":783,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24995,"byte_end":25007,"line_start":756,"line_end":756,"column_start":10,"column_end":22},"name":"ShaderSource","qualname":"::ShaderSource","value":"pub enum ShaderSource<'a> { SpirV(Cow), Wgsl(Cow), }","parent":null,"children":[{"krate":0,"index":1160},{"krate":0,"index":1163}],"decl_id":null,"docs":" Source of a shader module.\n","sig":null,"attributes":[{"value":"/ Source of a shader module.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24955,"byte_end":24985,"line_start":755,"line_end":755,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26214,"byte_end":26236,"line_start":788,"line_end":788,"column_start":12,"column_end":34},"name":"ShaderModuleDescriptor","qualname":"::ShaderModuleDescriptor","value":"ShaderModuleDescriptor { label, source }","parent":null,"children":[{"krate":0,"index":1168},{"krate":0,"index":1169}],"decl_id":null,"docs":" Descriptor for a shader module.\n","sig":null,"attributes":[{"value":"/ Descriptor for a shader module.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26167,"byte_end":26202,"line_start":787,"line_end":787,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":1168},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26358,"byte_end":26363,"line_start":790,"line_end":790,"column_start":9,"column_end":14},"name":"label","qualname":"::ShaderModuleDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1166},"children":[],"decl_id":null,"docs":" Debug label of the shader module. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the shader module. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26247,"byte_end":26349,"line_start":789,"line_end":789,"column_start":5,"column_end":107}}]},{"kind":"Field","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26420,"byte_end":26426,"line_start":792,"line_end":792,"column_start":9,"column_end":15},"name":"source","qualname":"::ShaderModuleDescriptor::source","value":"ShaderSource<'a>","parent":{"krate":0,"index":1166},"children":[],"decl_id":null,"docs":" Source code for the shader.\n","sig":null,"attributes":[{"value":"/ Source code for the shader.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26380,"byte_end":26411,"line_start":791,"line_end":791,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26519,"byte_end":26546,"line_start":796,"line_end":796,"column_start":12,"column_end":39},"name":"ShaderModuleDescriptorSpirV","qualname":"::ShaderModuleDescriptorSpirV","value":"ShaderModuleDescriptorSpirV { label, source }","parent":null,"children":[{"krate":0,"index":1172},{"krate":0,"index":1173}],"decl_id":null,"docs":" Descriptor for a shader module given by SPIR-V binary.\n","sig":null,"attributes":[{"value":"/ Descriptor for a shader module given by SPIR-V binary.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26449,"byte_end":26507,"line_start":795,"line_end":795,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1172},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26668,"byte_end":26673,"line_start":798,"line_end":798,"column_start":9,"column_end":14},"name":"label","qualname":"::ShaderModuleDescriptorSpirV::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1170},"children":[],"decl_id":null,"docs":" Debug label of the shader module. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the shader module. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26557,"byte_end":26659,"line_start":797,"line_end":797,"column_start":5,"column_end":107}}]},{"kind":"Field","id":{"krate":0,"index":1173},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26739,"byte_end":26745,"line_start":800,"line_end":800,"column_start":9,"column_end":15},"name":"source","qualname":"::ShaderModuleDescriptorSpirV::source","value":"std::borrow::Cow<'a, [u32]>","parent":{"krate":0,"index":1170},"children":[],"decl_id":null,"docs":" Binary SPIR-V data, in 4-byte words.\n","sig":null,"attributes":[{"value":"/ Binary SPIR-V data, in 4-byte words.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26690,"byte_end":26730,"line_start":799,"line_end":799,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1649},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26915,"byte_end":26929,"line_start":807,"line_end":807,"column_start":12,"column_end":26},"name":"PipelineLayout","qualname":"::PipelineLayout","value":"PipelineLayout {  }","parent":null,"children":[{"krate":0,"index":1650},{"krate":0,"index":1651}],"decl_id":null,"docs":" Handle to a pipeline layout.","sig":null,"attributes":[{"value":"/ Handle to a pipeline layout.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26766,"byte_end":26798,"line_start":803,"line_end":803,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26799,"byte_end":26802,"line_start":804,"line_end":804,"column_start":1,"column_end":4}},{"value":"/ A `PipelineLayout` object describes the available binding groups of a pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":26803,"byte_end":26886,"line_start":805,"line_end":805,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":1654},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":27437,"byte_end":27451,"line_start":825,"line_end":825,"column_start":12,"column_end":26},"name":"RenderPipeline","qualname":"::RenderPipeline","value":"RenderPipeline {  }","parent":null,"children":[{"krate":0,"index":1655},{"krate":0,"index":1656}],"decl_id":null,"docs":" Handle to a rendering (graphics) pipeline.","sig":null,"attributes":[{"value":"/ Handle to a rendering (graphics) pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":27164,"byte_end":27210,"line_start":820,"line_end":820,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":27211,"byte_end":27214,"line_start":821,"line_end":821,"column_start":1,"column_end":4}},{"value":"/ A `RenderPipeline` object represents a graphics pipeline and its stages, bindings, vertex","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":27215,"byte_end":27308,"line_start":822,"line_end":822,"column_start":1,"column_end":94}},{"value":"/ buffers and targets. A `RenderPipeline` may be created with [`Device::create_render_pipeline`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":27309,"byte_end":27408,"line_start":823,"line_end":823,"column_start":1,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":27794,"byte_end":27815,"line_start":840,"line_end":840,"column_start":12,"column_end":33},"name":"get_bind_group_layout","qualname":"<RenderPipeline>::get_bind_group_layout","value":"pub fn get_bind_group_layout(&Self, u32) -> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Get an object representing the bind group layout at a given index.\n","sig":null,"attributes":[{"value":"/ Get an object representing the bind group layout at a given index.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":27712,"byte_end":27782,"line_start":839,"line_end":839,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1659},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":28327,"byte_end":28342,"line_start":856,"line_end":856,"column_start":12,"column_end":27},"name":"ComputePipeline","qualname":"::ComputePipeline","value":"ComputePipeline {  }","parent":null,"children":[{"krate":0,"index":1660},{"krate":0,"index":1661}],"decl_id":null,"docs":" Handle to a compute pipeline.","sig":null,"attributes":[{"value":"/ Handle to a compute pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":28090,"byte_end":28123,"line_start":851,"line_end":851,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":28124,"byte_end":28127,"line_start":852,"line_end":852,"column_start":1,"column_end":4}},{"value":"/ A `ComputePipeline` object represents a compute pipeline and its single shader stage.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":28128,"byte_end":28217,"line_start":853,"line_end":853,"column_start":1,"column_end":90}},{"value":"/ A `ComputePipeline` may be created with [`Device::create_compute_pipeline`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":28218,"byte_end":28298,"line_start":854,"line_end":854,"column_start":1,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":28689,"byte_end":28710,"line_start":871,"line_end":871,"column_start":12,"column_end":33},"name":"get_bind_group_layout","qualname":"<ComputePipeline>::get_bind_group_layout","value":"pub fn get_bind_group_layout(&Self, u32) -> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Get an object representing the bind group layout at a given index.\n","sig":null,"attributes":[{"value":"/ Get an object representing the bind group layout at a given index.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":28607,"byte_end":28677,"line_start":870,"line_end":870,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":1664},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29332,"byte_end":29345,"line_start":888,"line_end":888,"column_start":12,"column_end":25},"name":"CommandBuffer","qualname":"::CommandBuffer","value":"CommandBuffer {  }","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666}],"decl_id":null,"docs":" Handle to a command buffer on the GPU.","sig":null,"attributes":[{"value":"/ Handle to a command buffer on the GPU.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":28986,"byte_end":29028,"line_start":882,"line_end":882,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29029,"byte_end":29032,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ A `CommandBuffer` represents a complete sequence of commands that may be submitted to a command","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29033,"byte_end":29132,"line_start":884,"line_end":884,"column_start":1,"column_end":100}},{"value":"/ queue with [`Queue::submit`]. A `CommandBuffer` is obtained by recording a series of commands to","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29133,"byte_end":29233,"line_start":885,"line_end":885,"column_start":1,"column_end":101}},{"value":"/ a [`CommandEncoder`] and then calling [`CommandEncoder::finish`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29234,"byte_end":29303,"line_start":886,"line_end":886,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":1669},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":30016,"byte_end":30030,"line_start":911,"line_end":911,"column_start":12,"column_end":26},"name":"CommandEncoder","qualname":"::CommandEncoder","value":"CommandEncoder {  }","parent":null,"children":[{"krate":0,"index":1670},{"krate":0,"index":1671}],"decl_id":null,"docs":" Encodes a series of GPU operations.","sig":null,"attributes":[{"value":"/ Encodes a series of GPU operations.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29641,"byte_end":29680,"line_start":903,"line_end":903,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29681,"byte_end":29684,"line_start":904,"line_end":904,"column_start":1,"column_end":4}},{"value":"/ A command encoder can record [`RenderPass`]es, [`ComputePass`]es,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29685,"byte_end":29754,"line_start":905,"line_end":905,"column_start":1,"column_end":70}},{"value":"/ and transfer operations between driver-managed resources like [`Buffer`]s and [`Texture`]s.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29755,"byte_end":29850,"line_start":906,"line_end":906,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29851,"byte_end":29854,"line_start":907,"line_end":907,"column_start":1,"column_end":4}},{"value":"/ When finished recording, call [`CommandEncoder::finish`] to obtain a [`CommandBuffer`] which may","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29855,"byte_end":29955,"line_start":908,"line_end":908,"column_start":1,"column_end":101}},{"value":"/ be submitted for execution.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29956,"byte_end":29987,"line_start":909,"line_end":909,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":1674},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":30405,"byte_end":30415,"line_start":928,"line_end":928,"column_start":12,"column_end":22},"name":"RenderPass","qualname":"::RenderPass","value":"RenderPass {  }","parent":null,"children":[{"krate":0,"index":1676},{"krate":0,"index":1677}],"decl_id":null,"docs":" In-progress recording of a render pass.\n","sig":null,"attributes":[{"value":"/ In-progress recording of a render pass.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":30333,"byte_end":30376,"line_start":926,"line_end":926,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":1681},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":30572,"byte_end":30583,"line_start":935,"line_end":935,"column_start":12,"column_end":23},"name":"ComputePass","qualname":"::ComputePass","value":"ComputePass {  }","parent":null,"children":[{"krate":0,"index":1683},{"krate":0,"index":1684}],"decl_id":null,"docs":" In-progress recording of a compute pass.\n","sig":null,"attributes":[{"value":"/ In-progress recording of a compute pass.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":30499,"byte_end":30543,"line_start":933,"line_end":933,"column_start":1,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1688},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":31062,"byte_end":31081,"line_start":947,"line_end":947,"column_start":12,"column_end":31},"name":"RenderBundleEncoder","qualname":"::RenderBundleEncoder","value":"RenderBundleEncoder {  }","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693}],"decl_id":null,"docs":" Encodes a series of GPU operations into a reusable \"render bundle\".","sig":null,"attributes":[{"value":"/ Encodes a series of GPU operations into a reusable \"render bundle\".","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":30668,"byte_end":30739,"line_start":940,"line_end":940,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":30740,"byte_end":30743,"line_start":941,"line_end":941,"column_start":1,"column_end":4}},{"value":"/ It only supports a handful of render commands, but it makes them reusable. [`RenderBundle`]s","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":30744,"byte_end":30840,"line_start":942,"line_end":942,"column_start":1,"column_end":97}},{"value":"/ can be executed onto a [`CommandEncoder`] using [`RenderPass::execute_bundles`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":30841,"byte_end":30925,"line_start":943,"line_end":943,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":30926,"byte_end":30929,"line_start":944,"line_end":944,"column_start":1,"column_end":4}},{"value":"/ Executing a [`RenderBundle`] is often more efficient then issuing the underlying commands manually.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":30930,"byte_end":31033,"line_start":945,"line_end":945,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1697},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":31708,"byte_end":31720,"line_start":963,"line_end":963,"column_start":12,"column_end":24},"name":"RenderBundle","qualname":"::RenderBundle","value":"RenderBundle {  }","parent":null,"children":[{"krate":0,"index":1698},{"krate":0,"index":1699}],"decl_id":null,"docs":" Pre-prepared reusable bundle of GPU operations.","sig":null,"attributes":[{"value":"/ Pre-prepared reusable bundle of GPU operations.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":31334,"byte_end":31385,"line_start":956,"line_end":956,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":31386,"byte_end":31389,"line_start":957,"line_end":957,"column_start":1,"column_end":4}},{"value":"/ It only supports a handful of render commands, but it makes them reusable. [`RenderBundle`]s","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":31390,"byte_end":31486,"line_start":958,"line_end":958,"column_start":1,"column_end":97}},{"value":"/ can be executed onto a [`CommandEncoder`] using [`RenderPass::execute_bundles`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":31487,"byte_end":31571,"line_start":959,"line_end":959,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":31572,"byte_end":31575,"line_start":960,"line_end":960,"column_start":1,"column_end":4}},{"value":"/ Executing a [`RenderBundle`] is often more efficient then issuing the underlying commands manually.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":31576,"byte_end":31679,"line_start":961,"line_end":961,"column_start":1,"column_end":104}}]},{"kind":"Struct","id":{"krate":0,"index":1190},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":31987,"byte_end":31995,"line_start":977,"line_end":977,"column_start":12,"column_end":20},"name":"QuerySet","qualname":"::QuerySet","value":"QuerySet {  }","parent":null,"children":[{"krate":0,"index":1191},{"krate":0,"index":1192}],"decl_id":null,"docs":" Handle to a query set.\n","sig":null,"attributes":[{"value":"/ Handle to a query set.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":31949,"byte_end":31975,"line_start":976,"line_end":976,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":1702},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32466,"byte_end":32471,"line_start":995,"line_end":995,"column_start":12,"column_end":17},"name":"Queue","qualname":"::Queue","value":"Queue {  }","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1704}],"decl_id":null,"docs":" Handle to a command queue on a device.","sig":null,"attributes":[{"value":"/ Handle to a command queue on a device.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32212,"byte_end":32254,"line_start":990,"line_end":990,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32255,"byte_end":32258,"line_start":991,"line_end":991,"column_start":1,"column_end":4}},{"value":"/ A `Queue` executes recorded [`CommandBuffer`] objects and provides convenience methods","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32259,"byte_end":32349,"line_start":992,"line_end":992,"column_start":1,"column_end":91}},{"value":"/ for writing to [buffers](Queue::write_buffer) and [textures](Queue::write_texture).","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32350,"byte_end":32437,"line_start":993,"line_end":993,"column_start":1,"column_end":88}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1709},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32858,"byte_end":32864,"line_start":1008,"line_end":1008,"column_start":5,"column_end":11},"name":"Buffer","qualname":"::BindingResource::Buffer","value":"BindingResource::Buffer(BufferBinding)","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" Binding is backed by a buffer.","sig":null,"attributes":[{"value":"/ Binding is backed by a buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32654,"byte_end":32688,"line_start":1004,"line_end":1004,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32693,"byte_end":32696,"line_start":1005,"line_end":1005,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BufferBindingType::Uniform`] and [`wgt::BufferBindingType::Storage`]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32701,"byte_end":32795,"line_start":1006,"line_end":1006,"column_start":5,"column_end":99}},{"value":"/ with [`BindGroupLayoutEntry::count`] set to None.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32800,"byte_end":32853,"line_start":1007,"line_end":1007,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1712},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33194,"byte_end":33205,"line_start":1015,"line_end":1015,"column_start":5,"column_end":16},"name":"BufferArray","qualname":"::BindingResource::BufferArray","value":"BindingResource::BufferArray(&'a [BufferBinding])","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" Binding is backed by an array of buffers.","sig":null,"attributes":[{"value":"/ Binding is backed by an array of buffers.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32889,"byte_end":32934,"line_start":1009,"line_end":1009,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32939,"byte_end":32942,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ [`Features::BUFFER_BINDING_ARRAY`] must be supported to use this feature.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32947,"byte_end":33024,"line_start":1011,"line_end":1011,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33029,"byte_end":33032,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BufferBindingType::Uniform`] and [`wgt::BufferBindingType::Storage`]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33037,"byte_end":33131,"line_start":1013,"line_end":1013,"column_start":5,"column_end":99}},{"value":"/ with [`BindGroupLayoutEntry::count`] set to Some.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33136,"byte_end":33189,"line_start":1014,"line_end":1014,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1715},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33377,"byte_end":33384,"line_start":1019,"line_end":1019,"column_start":5,"column_end":12},"name":"Sampler","qualname":"::BindingResource::Sampler","value":"BindingResource::Sampler(&'a Sampler)","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" Binding is a sampler.","sig":null,"attributes":[{"value":"/ Binding is a sampler.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33236,"byte_end":33261,"line_start":1016,"line_end":1016,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33266,"byte_end":33269,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BindingType::Sampler`] with [`BindGroupLayoutEntry::count`] set to None.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33274,"byte_end":33372,"line_start":1018,"line_end":1018,"column_start":5,"column_end":103}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1718},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33664,"byte_end":33676,"line_start":1026,"line_end":1026,"column_start":5,"column_end":17},"name":"SamplerArray","qualname":"::BindingResource::SamplerArray","value":"BindingResource::SamplerArray(&'a [&'a Sampler])","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" Binding is backed by an array of samplers.","sig":null,"attributes":[{"value":"/ Binding is backed by an array of samplers.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33403,"byte_end":33449,"line_start":1020,"line_end":1020,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33454,"byte_end":33457,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ [`Features::TEXTURE_BINDING_ARRAY`] must be supported to use this feature.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33462,"byte_end":33540,"line_start":1022,"line_end":1022,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33545,"byte_end":33548,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BindingType::Sampler`] with [`BindGroupLayoutEntry::count`] set","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33553,"byte_end":33642,"line_start":1024,"line_end":1024,"column_start":5,"column_end":94}},{"value":"/ to Some.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33647,"byte_end":33659,"line_start":1025,"line_end":1025,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1721},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33901,"byte_end":33912,"line_start":1031,"line_end":1031,"column_start":5,"column_end":16},"name":"TextureView","qualname":"::BindingResource::TextureView","value":"BindingResource::TextureView(&'a TextureView)","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" Binding is backed by a texture.","sig":null,"attributes":[{"value":"/ Binding is backed by a texture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33701,"byte_end":33736,"line_start":1027,"line_end":1027,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33741,"byte_end":33744,"line_start":1028,"line_end":1028,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BindingType::Texture`] and [`wgt::BindingType::StorageTexture`] with","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33749,"byte_end":33843,"line_start":1029,"line_end":1029,"column_start":5,"column_end":99}},{"value":"/ [`BindGroupLayoutEntry::count`] set to None.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33848,"byte_end":33896,"line_start":1030,"line_end":1030,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1724},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34237,"byte_end":34253,"line_start":1038,"line_end":1038,"column_start":5,"column_end":21},"name":"TextureViewArray","qualname":"::BindingResource::TextureViewArray","value":"BindingResource::TextureViewArray(&'a [&'a TextureView])","parent":{"krate":0,"index":1707},"children":[],"decl_id":null,"docs":" Binding is backed by an array of textures.","sig":null,"attributes":[{"value":"/ Binding is backed by an array of textures.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33935,"byte_end":33981,"line_start":1032,"line_end":1032,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33986,"byte_end":33989,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ [`Features::TEXTURE_BINDING_ARRAY`] must be supported to use this feature.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":33994,"byte_end":34072,"line_start":1034,"line_end":1034,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34077,"byte_end":34080,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ Corresponds to [`wgt::BindingType::Texture`] and [`wgt::BindingType::StorageTexture`] with","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34085,"byte_end":34179,"line_start":1036,"line_end":1036,"column_start":5,"column_end":99}},{"value":"/ [`BindGroupLayoutEntry::count`] set to Some.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34184,"byte_end":34232,"line_start":1037,"line_end":1037,"column_start":5,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":1707},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32628,"byte_end":32643,"line_start":1003,"line_end":1003,"column_start":10,"column_end":25},"name":"BindingResource","qualname":"::BindingResource","value":"pub enum BindingResource<'a> {\n    Buffer(BufferBinding),\n    BufferArray(&'a [BufferBinding]),\n    Sampler(&'a Sampler),\n    SamplerArray(&'a [&'a Sampler]),\n    TextureView(&'a TextureView),\n    TextureViewArray(&'a [&'a TextureView]),\n}","parent":null,"children":[{"krate":0,"index":1709},{"krate":0,"index":1712},{"krate":0,"index":1715},{"krate":0,"index":1718},{"krate":0,"index":1721},{"krate":0,"index":1724}],"decl_id":null,"docs":" Resource that can be bound to a pipeline.\n","sig":null,"attributes":[{"value":"/ Resource that can be bound to a pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32531,"byte_end":32576,"line_start":1000,"line_end":1000,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32577,"byte_end":32594,"line_start":1001,"line_end":1001,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":1733},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34363,"byte_end":34376,"line_start":1043,"line_end":1043,"column_start":12,"column_end":25},"name":"BufferBinding","qualname":"::BufferBinding","value":"BufferBinding { buffer, offset, size }","parent":null,"children":[{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737}],"decl_id":null,"docs":" Describes the segment of a buffer to bind.\n","sig":null,"attributes":[{"value":"/ Describes the segment of a buffer to bind.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34281,"byte_end":34327,"line_start":1041,"line_end":1041,"column_start":1,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":1735},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34419,"byte_end":34425,"line_start":1045,"line_end":1045,"column_start":9,"column_end":15},"name":"buffer","qualname":"::BufferBinding::buffer","value":"&'a Buffer","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" The buffer to bind.\n","sig":null,"attributes":[{"value":"/ The buffer to bind.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34387,"byte_end":34410,"line_start":1044,"line_end":1044,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1736},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34789,"byte_end":34795,"line_start":1051,"line_end":1051,"column_start":9,"column_end":15},"name":"offset","qualname":"::BufferBinding::offset","value":"u64","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Base offset of the buffer. For bindings with `dynamic == true`, this offset\n will be added to the dynamic offset provided in [`RenderPass::set_bind_group`].","sig":null,"attributes":[{"value":"/ Base offset of the buffer. For bindings with `dynamic == true`, this offset","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34443,"byte_end":34522,"line_start":1046,"line_end":1046,"column_start":5,"column_end":84}},{"value":"/ will be added to the dynamic offset provided in [`RenderPass::set_bind_group`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34527,"byte_end":34610,"line_start":1047,"line_end":1047,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34615,"byte_end":34618,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ The offset has to be aligned to [`Limits::min_uniform_buffer_offset_alignment`]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34623,"byte_end":34706,"line_start":1049,"line_end":1049,"column_start":5,"column_end":88}},{"value":"/ or [`Limits::min_storage_buffer_offset_alignment`] appropriately.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34711,"byte_end":34780,"line_start":1050,"line_end":1050,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1737},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34893,"byte_end":34897,"line_start":1053,"line_end":1053,"column_start":9,"column_end":13},"name":"size","qualname":"::BufferBinding::size","value":"std::option::Option<std::num::NonZeroU64>","parent":{"krate":0,"index":1733},"children":[],"decl_id":null,"docs":" Size of the binding, or `None` for using the rest of the buffer.\n","sig":null,"attributes":[{"value":"/ Size of the binding, or `None` for using the rest of the buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34816,"byte_end":34884,"line_start":1052,"line_end":1052,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1746},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35319,"byte_end":35324,"line_start":1064,"line_end":1064,"column_start":5,"column_end":10},"name":"Clear","qualname":"::LoadOp::Clear","value":"LoadOp::Clear(V)","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Clear with a specified value.\n","sig":null,"attributes":[{"value":"/ Clear with a specified value.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35281,"byte_end":35314,"line_start":1063,"line_end":1063,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1749},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35359,"byte_end":35363,"line_start":1066,"line_end":1066,"column_start":5,"column_end":9},"name":"Load","qualname":"::LoadOp::Load","value":"LoadOp::Load","parent":{"krate":0,"index":1744},"children":[],"decl_id":null,"docs":" Load from memory.\n","sig":null,"attributes":[{"value":"/ Load from memory.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35333,"byte_end":35354,"line_start":1065,"line_end":1065,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":1744},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35265,"byte_end":35271,"line_start":1062,"line_end":1062,"column_start":10,"column_end":16},"name":"LoadOp","qualname":"::LoadOp","value":"pub enum LoadOp<V> { Clear(V), Load, }","parent":null,"children":[{"krate":0,"index":1746},{"krate":0,"index":1749}],"decl_id":null,"docs":" Operation to perform to the output attachment at the start of a renderpass.","sig":null,"attributes":[{"value":"/ Operation to perform to the output attachment at the start of a renderpass.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":34922,"byte_end":35001,"line_start":1056,"line_end":1056,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35002,"byte_end":35005,"line_start":1057,"line_end":1057,"column_start":1,"column_end":4}},{"value":"/ The render target must be cleared at least once before its content is loaded.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35006,"byte_end":35087,"line_start":1058,"line_end":1058,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":1774},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35728,"byte_end":35738,"line_start":1079,"line_end":1079,"column_start":12,"column_end":22},"name":"Operations","qualname":"::Operations","value":"Operations { load, store }","parent":null,"children":[{"krate":0,"index":1776},{"krate":0,"index":1777}],"decl_id":null,"docs":" Pair of load and store operations for an attachment aspect.\n","sig":null,"attributes":[{"value":"/ Pair of load and store operations for an attachment aspect.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35485,"byte_end":35548,"line_start":1075,"line_end":1075,"column_start":1,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":1776},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35809,"byte_end":35813,"line_start":1081,"line_end":1081,"column_start":9,"column_end":13},"name":"load","qualname":"::Operations::load","value":"LoadOp<V>","parent":{"krate":0,"index":1774},"children":[],"decl_id":null,"docs":" How data should be read through this attachment.\n","sig":null,"attributes":[{"value":"/ How data should be read through this attachment.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35748,"byte_end":35800,"line_start":1080,"line_end":1080,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1777},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35899,"byte_end":35904,"line_start":1083,"line_end":1083,"column_start":9,"column_end":14},"name":"store","qualname":"::Operations::store","value":"bool","parent":{"krate":0,"index":1774},"children":[],"decl_id":null,"docs":" Whether data will be written to through this attachment.\n","sig":null,"attributes":[{"value":"/ Whether data will be written to through this attachment.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35830,"byte_end":35890,"line_start":1082,"line_end":1082,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1801},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36173,"byte_end":36198,"line_start":1097,"line_end":1097,"column_start":12,"column_end":37},"name":"RenderPassColorAttachment","qualname":"::RenderPassColorAttachment","value":"RenderPassColorAttachment { view, resolve_target, ops }","parent":null,"children":[{"krate":0,"index":1803},{"krate":0,"index":1804},{"krate":0,"index":1805}],"decl_id":null,"docs":" Describes a color attachment to a [`RenderPass`].\n","sig":null,"attributes":[{"value":"/ Describes a color attachment to a [`RenderPass`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36084,"byte_end":36137,"line_start":1095,"line_end":1095,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":1803},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36255,"byte_end":36259,"line_start":1099,"line_end":1099,"column_start":9,"column_end":13},"name":"view","qualname":"::RenderPassColorAttachment::view","value":"&'a TextureView","parent":{"krate":0,"index":1801},"children":[],"decl_id":null,"docs":" The view to use as an attachment.\n","sig":null,"attributes":[{"value":"/ The view to use as an attachment.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36209,"byte_end":36246,"line_start":1098,"line_end":1098,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1804},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36367,"byte_end":36381,"line_start":1101,"line_end":1101,"column_start":9,"column_end":23},"name":"resolve_target","qualname":"::RenderPassColorAttachment::resolve_target","value":"std::option::Option<&'a TextureView>","parent":{"krate":0,"index":1801},"children":[],"decl_id":null,"docs":" The view that will receive the resolved output if multisampling is used.\n","sig":null,"attributes":[{"value":"/ The view that will receive the resolved output if multisampling is used.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36282,"byte_end":36358,"line_start":1100,"line_end":1100,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1805},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36484,"byte_end":36487,"line_start":1103,"line_end":1103,"column_start":9,"column_end":12},"name":"ops","qualname":"::RenderPassColorAttachment::ops","value":"Operations<wgpu_types::Color>","parent":{"krate":0,"index":1801},"children":[],"decl_id":null,"docs":" What operations will be performed on this color attachment.\n","sig":null,"attributes":[{"value":"/ What operations will be performed on this color attachment.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36412,"byte_end":36475,"line_start":1102,"line_end":1102,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":1812},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36608,"byte_end":36640,"line_start":1108,"line_end":1108,"column_start":12,"column_end":44},"name":"RenderPassDepthStencilAttachment","qualname":"::RenderPassDepthStencilAttachment","value":"RenderPassDepthStencilAttachment { view, depth_ops, stencil_ops }","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816}],"decl_id":null,"docs":" Describes a depth/stencil attachment to a [`RenderPass`].\n","sig":null,"attributes":[{"value":"/ Describes a depth/stencil attachment to a [`RenderPass`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36511,"byte_end":36572,"line_start":1106,"line_end":1106,"column_start":1,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1814},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36697,"byte_end":36701,"line_start":1110,"line_end":1110,"column_start":9,"column_end":13},"name":"view","qualname":"::RenderPassDepthStencilAttachment::view","value":"&'a TextureView","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" The view to use as an attachment.\n","sig":null,"attributes":[{"value":"/ The view to use as an attachment.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36651,"byte_end":36688,"line_start":1109,"line_end":1109,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1815},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36807,"byte_end":36816,"line_start":1112,"line_end":1112,"column_start":9,"column_end":18},"name":"depth_ops","qualname":"::RenderPassDepthStencilAttachment::depth_ops","value":"std::option::Option<Operations<f32>>","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" What operations will be performed on the depth part of the attachment.\n","sig":null,"attributes":[{"value":"/ What operations will be performed on the depth part of the attachment.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36724,"byte_end":36798,"line_start":1111,"line_end":1111,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1816},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36932,"byte_end":36943,"line_start":1114,"line_end":1114,"column_start":9,"column_end":20},"name":"stencil_ops","qualname":"::RenderPassDepthStencilAttachment::stencil_ops","value":"std::option::Option<Operations<u32>>","parent":{"krate":0,"index":1812},"children":[],"decl_id":null,"docs":" What operations will be performed on the stencil part of the attachment.\n","sig":null,"attributes":[{"value":"/ What operations will be performed on the stencil part of the attachment.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":36847,"byte_end":36923,"line_start":1113,"line_end":1113,"column_start":5,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":1201},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37083,"byte_end":37088,"line_start":1120,"line_end":1120,"column_start":10,"column_end":15},"name":"Label","qualname":"::Label","value":"Option<&'a str>","parent":null,"children":[],"decl_id":null,"docs":" Object label.\n","sig":null,"attributes":[{"value":"/ Object label.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37056,"byte_end":37073,"line_start":1119,"line_end":1119,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":1206},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37250,"byte_end":37271,"line_start":1123,"line_end":1123,"column_start":10,"column_end":31},"name":"RequestAdapterOptions","qualname":"::RequestAdapterOptions","value":"RequestAdapterOptionsBase<&'a Surface>","parent":null,"children":[],"decl_id":null,"docs":" Additional information required when requesting an adapter.\n","sig":null,"attributes":[{"value":"/ Additional information required when requesting an adapter.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37177,"byte_end":37240,"line_start":1122,"line_end":1122,"column_start":1,"column_end":64}}]},{"kind":"Type","id":{"krate":0,"index":1208},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37355,"byte_end":37371,"line_start":1125,"line_end":1125,"column_start":10,"column_end":26},"name":"DeviceDescriptor","qualname":"::DeviceDescriptor","value":"wgt::DeviceDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`Device`].\n","sig":null,"attributes":[{"value":"/ Describes a [`Device`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37318,"byte_end":37345,"line_start":1124,"line_end":1124,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1210},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37449,"byte_end":37465,"line_start":1127,"line_end":1127,"column_start":10,"column_end":26},"name":"BufferDescriptor","qualname":"::BufferDescriptor","value":"wgt::BufferDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`Buffer`].\n","sig":null,"attributes":[{"value":"/ Describes a [`Buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37412,"byte_end":37439,"line_start":1126,"line_end":1126,"column_start":1,"column_end":28}}]},{"kind":"Type","id":{"krate":0,"index":1212},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37551,"byte_end":37575,"line_start":1129,"line_end":1129,"column_start":10,"column_end":34},"name":"CommandEncoderDescriptor","qualname":"::CommandEncoderDescriptor","value":"wgt::CommandEncoderDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`CommandEncoder`].\n","sig":null,"attributes":[{"value":"/ Describes a [`CommandEncoder`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37506,"byte_end":37541,"line_start":1128,"line_end":1128,"column_start":1,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":1214},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37667,"byte_end":37689,"line_start":1131,"line_end":1131,"column_start":10,"column_end":32},"name":"RenderBundleDescriptor","qualname":"::RenderBundleDescriptor","value":"wgt::RenderBundleDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`RenderBundle`].\n","sig":null,"attributes":[{"value":"/ Describes a [`RenderBundle`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37624,"byte_end":37657,"line_start":1130,"line_end":1130,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":1216},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37774,"byte_end":37791,"line_start":1133,"line_end":1133,"column_start":10,"column_end":27},"name":"TextureDescriptor","qualname":"::TextureDescriptor","value":"wgt::TextureDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`Texture`].\n","sig":null,"attributes":[{"value":"/ Describes a [`Texture`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37736,"byte_end":37764,"line_start":1132,"line_end":1132,"column_start":1,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":1218},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37872,"byte_end":37890,"line_start":1135,"line_end":1135,"column_start":10,"column_end":28},"name":"QuerySetDescriptor","qualname":"::QuerySetDescriptor","value":"wgt::QuerySetDescriptor<Label>","parent":null,"children":[],"decl_id":null,"docs":" Describes a [`QuerySet`].\n","sig":null,"attributes":[{"value":"/ Describes a [`QuerySet`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37833,"byte_end":37862,"line_start":1134,"line_end":1134,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":1823},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38022,"byte_end":38043,"line_start":1139,"line_end":1139,"column_start":12,"column_end":33},"name":"TextureViewDescriptor","qualname":"::TextureViewDescriptor","value":"TextureViewDescriptor { label, format, dimension, aspect, base_mip_level, mip_level_count, base_array_layer, array_layer_count }","parent":null,"children":[{"krate":0,"index":1825},{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832}],"decl_id":null,"docs":" Describes a [`TextureView`].\n","sig":null,"attributes":[{"value":"/ Describes a [`TextureView`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":37934,"byte_end":37966,"line_start":1137,"line_end":1137,"column_start":1,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":1825},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38164,"byte_end":38169,"line_start":1141,"line_end":1141,"column_start":9,"column_end":14},"name":"label","qualname":"::TextureViewDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":" Debug label of the texture view. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the texture view. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38054,"byte_end":38155,"line_start":1140,"line_end":1140,"column_start":5,"column_end":106}}]},{"kind":"Field","id":{"krate":0,"index":1826},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38301,"byte_end":38307,"line_start":1143,"line_end":1143,"column_start":9,"column_end":15},"name":"format","qualname":"::TextureViewDescriptor::format","value":"std::option::Option<wgpu_types::TextureFormat>","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":" Format of the texture view. At this time, it must be the same as the underlying format of the texture.\n","sig":null,"attributes":[{"value":"/ Format of the texture view. At this time, it must be the same as the underlying format of the texture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38186,"byte_end":38292,"line_start":1142,"line_end":1142,"column_start":5,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":1827},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38535,"byte_end":38544,"line_start":1146,"line_end":1146,"column_start":9,"column_end":18},"name":"dimension","qualname":"::TextureViewDescriptor::dimension","value":"std::option::Option<wgpu_types::TextureViewDimension>","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":" The dimension of the texture view. For 1D textures, this must be `1D`. For 2D textures it must be one of\n `D2`, `D2Array`, `Cube`, and `CubeArray`. For 3D textures it must be `3D`\n","sig":null,"attributes":[{"value":"/ The dimension of the texture view. For 1D textures, this must be `1D`. For 2D textures it must be one of","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38336,"byte_end":38444,"line_start":1144,"line_end":1144,"column_start":5,"column_end":113}},{"value":"/ `D2`, `D2Array`, `Cube`, and `CubeArray`. For 3D textures it must be `3D`","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38449,"byte_end":38526,"line_start":1145,"line_end":1145,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1828},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38662,"byte_end":38668,"line_start":1148,"line_end":1148,"column_start":9,"column_end":15},"name":"aspect","qualname":"::TextureViewDescriptor::aspect","value":"wgpu_types::TextureAspect","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":" Aspect of the texture. Color textures must be [`TextureAspect::All`].\n","sig":null,"attributes":[{"value":"/ Aspect of the texture. Color textures must be [`TextureAspect::All`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38580,"byte_end":38653,"line_start":1147,"line_end":1147,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1829},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38717,"byte_end":38731,"line_start":1150,"line_end":1150,"column_start":9,"column_end":23},"name":"base_mip_level","qualname":"::TextureViewDescriptor::base_mip_level","value":"u32","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":" Base mip level.\n","sig":null,"attributes":[{"value":"/ Base mip level.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38689,"byte_end":38708,"line_start":1149,"line_end":1149,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":1830},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38974,"byte_end":38989,"line_start":1154,"line_end":1154,"column_start":9,"column_end":24},"name":"mip_level_count","qualname":"::TextureViewDescriptor::mip_level_count","value":"std::option::Option<std::num::NonZeroU32>","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":" Mip level count.\n If `Some(count)`, `base_mip_level + count` must be less or equal to underlying texture mip count.\n If `None`, considered to include the rest of the mipmap levels, but at least 1 in total.\n","sig":null,"attributes":[{"value":"/ Mip level count.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38742,"byte_end":38762,"line_start":1151,"line_end":1151,"column_start":5,"column_end":25}},{"value":"/ If `Some(count)`, `base_mip_level + count` must be less or equal to underlying texture mip count.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38767,"byte_end":38868,"line_start":1152,"line_end":1152,"column_start":5,"column_end":106}},{"value":"/ If `None`, considered to include the rest of the mipmap levels, but at least 1 in total.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":38873,"byte_end":38965,"line_start":1153,"line_end":1153,"column_start":5,"column_end":97}}]},{"kind":"Field","id":{"krate":0,"index":1831},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39045,"byte_end":39061,"line_start":1156,"line_end":1156,"column_start":9,"column_end":25},"name":"base_array_layer","qualname":"::TextureViewDescriptor::base_array_layer","value":"u32","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":" Base array layer.\n","sig":null,"attributes":[{"value":"/ Base array layer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39015,"byte_end":39036,"line_start":1155,"line_end":1155,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":1832},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39299,"byte_end":39316,"line_start":1160,"line_end":1160,"column_start":9,"column_end":26},"name":"array_layer_count","qualname":"::TextureViewDescriptor::array_layer_count","value":"std::option::Option<std::num::NonZeroU32>","parent":{"krate":0,"index":1823},"children":[],"decl_id":null,"docs":" Layer count.\n If `Some(count)`, `base_array_layer + count` must be less or equal to the underlying array count.\n If `None`, considered to include the rest of the array layers, but at least 1 in total.\n","sig":null,"attributes":[{"value":"/ Layer count.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39072,"byte_end":39088,"line_start":1157,"line_end":1157,"column_start":5,"column_end":21}},{"value":"/ If `Some(count)`, `base_array_layer + count` must be less or equal to the underlying array count.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39093,"byte_end":39194,"line_start":1158,"line_end":1158,"column_start":5,"column_end":106}},{"value":"/ If `None`, considered to include the rest of the array layers, but at least 1 in total.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39199,"byte_end":39290,"line_start":1159,"line_end":1159,"column_start":5,"column_end":96}}]},{"kind":"Struct","id":{"krate":0,"index":1848},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39496,"byte_end":39520,"line_start":1167,"line_end":1167,"column_start":12,"column_end":36},"name":"PipelineLayoutDescriptor","qualname":"::PipelineLayoutDescriptor","value":"PipelineLayoutDescriptor { label, bind_group_layouts, push_constant_ranges }","parent":null,"children":[{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852}],"decl_id":null,"docs":" Describes a pipeline layout.","sig":null,"attributes":[{"value":"/ Describes a pipeline layout.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39341,"byte_end":39373,"line_start":1163,"line_end":1163,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39374,"byte_end":39377,"line_start":1164,"line_end":1164,"column_start":1,"column_end":4}},{"value":"/ A `PipelineLayoutDescriptor` can be used to create a pipeline layout.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39378,"byte_end":39451,"line_start":1165,"line_end":1165,"column_start":1,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":1850},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39644,"byte_end":39649,"line_start":1169,"line_end":1169,"column_start":9,"column_end":14},"name":"label","qualname":"::PipelineLayoutDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" Debug label of the pipeline layout. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the pipeline layout. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39531,"byte_end":39635,"line_start":1168,"line_end":1168,"column_start":5,"column_end":109}}]},{"kind":"Field","id":{"krate":0,"index":1851},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39846,"byte_end":39864,"line_start":1172,"line_end":1172,"column_start":9,"column_end":27},"name":"bind_group_layouts","qualname":"::PipelineLayoutDescriptor::bind_group_layouts","value":"&'a [&'a BindGroupLayout]","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" Bind groups that this pipeline uses. The first entry will provide all the bindings for\n \"set = 0\", second entry will provide all the bindings for \"set = 1\" etc.\n","sig":null,"attributes":[{"value":"/ Bind groups that this pipeline uses. The first entry will provide all the bindings for","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39666,"byte_end":39756,"line_start":1170,"line_end":1170,"column_start":5,"column_end":95}},{"value":"/ \"set = 0\", second entry will provide all the bindings for \"set = 1\" etc.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39761,"byte_end":39837,"line_start":1171,"line_end":1171,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1852},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40226,"byte_end":40246,"line_start":1178,"line_end":1178,"column_start":9,"column_end":29},"name":"push_constant_ranges","qualname":"::PipelineLayoutDescriptor::push_constant_ranges","value":"&'a [wgpu_types::PushConstantRange]","parent":{"krate":0,"index":1848},"children":[],"decl_id":null,"docs":" Set of push constant ranges this pipeline uses. Each shader stage that uses push constants\n must define the range in push constant memory that corresponds to its single `layout(push_constant)`\n uniform block.","sig":null,"attributes":[{"value":"/ Set of push constant ranges this pipeline uses. Each shader stage that uses push constants","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39897,"byte_end":39991,"line_start":1173,"line_end":1173,"column_start":5,"column_end":99}},{"value":"/ must define the range in push constant memory that corresponds to its single `layout(push_constant)`","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":39996,"byte_end":40100,"line_start":1174,"line_end":1174,"column_start":5,"column_end":109}},{"value":"/ uniform block.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40105,"byte_end":40123,"line_start":1175,"line_end":1175,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40128,"byte_end":40131,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ If this array is non-empty, the [`Features::PUSH_CONSTANTS`] must be enabled.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40136,"byte_end":40217,"line_start":1177,"line_end":1177,"column_start":5,"column_end":86}}]},{"kind":"Struct","id":{"krate":0,"index":1862},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40350,"byte_end":40367,"line_start":1183,"line_end":1183,"column_start":12,"column_end":29},"name":"SamplerDescriptor","qualname":"::SamplerDescriptor","value":"SamplerDescriptor { label, address_mode_u, address_mode_v, address_mode_w, mag_filter, min_filter, mipmap_filter, lod_min_clamp, lod_max_clamp, compare, anisotropy_clamp, border_color }","parent":null,"children":[{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869},{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875}],"decl_id":null,"docs":" Describes a [`Sampler`]\n","sig":null,"attributes":[{"value":"/ Describes a [`Sampler`]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40276,"byte_end":40303,"line_start":1181,"line_end":1181,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":1864},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40483,"byte_end":40488,"line_start":1185,"line_end":1185,"column_start":9,"column_end":14},"name":"label","qualname":"::SamplerDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" Debug label of the sampler. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the sampler. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40378,"byte_end":40474,"line_start":1184,"line_end":1184,"column_start":5,"column_end":101}}]},{"kind":"Field","id":{"krate":0,"index":1865},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40585,"byte_end":40599,"line_start":1187,"line_end":1187,"column_start":9,"column_end":23},"name":"address_mode_u","qualname":"::SamplerDescriptor::address_mode_u","value":"wgpu_types::AddressMode","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" How to deal with out of bounds accesses in the u (i.e. x) direction\n","sig":null,"attributes":[{"value":"/ How to deal with out of bounds accesses in the u (i.e. x) direction","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40505,"byte_end":40576,"line_start":1186,"line_end":1186,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1866},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40698,"byte_end":40712,"line_start":1189,"line_end":1189,"column_start":9,"column_end":23},"name":"address_mode_v","qualname":"::SamplerDescriptor::address_mode_v","value":"wgpu_types::AddressMode","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" How to deal with out of bounds accesses in the v (i.e. y) direction\n","sig":null,"attributes":[{"value":"/ How to deal with out of bounds accesses in the v (i.e. y) direction","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40618,"byte_end":40689,"line_start":1188,"line_end":1188,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1867},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40811,"byte_end":40825,"line_start":1191,"line_end":1191,"column_start":9,"column_end":23},"name":"address_mode_w","qualname":"::SamplerDescriptor::address_mode_w","value":"wgpu_types::AddressMode","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" How to deal with out of bounds accesses in the w (i.e. z) direction\n","sig":null,"attributes":[{"value":"/ How to deal with out of bounds accesses in the w (i.e. z) direction","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40731,"byte_end":40802,"line_start":1190,"line_end":1190,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40926,"byte_end":40936,"line_start":1193,"line_end":1193,"column_start":9,"column_end":19},"name":"mag_filter","qualname":"::SamplerDescriptor::mag_filter","value":"wgpu_types::FilterMode","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" How to filter the texture when it needs to be magnified (made larger)\n","sig":null,"attributes":[{"value":"/ How to filter the texture when it needs to be magnified (made larger)","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40844,"byte_end":40917,"line_start":1192,"line_end":1192,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1869},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41036,"byte_end":41046,"line_start":1195,"line_end":1195,"column_start":9,"column_end":19},"name":"min_filter","qualname":"::SamplerDescriptor::min_filter","value":"wgpu_types::FilterMode","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" How to filter the texture when it needs to be minified (made smaller)\n","sig":null,"attributes":[{"value":"/ How to filter the texture when it needs to be minified (made smaller)","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":40954,"byte_end":41027,"line_start":1194,"line_end":1194,"column_start":5,"column_end":78}}]},{"kind":"Field","id":{"krate":0,"index":1870},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41113,"byte_end":41126,"line_start":1197,"line_end":1197,"column_start":9,"column_end":22},"name":"mipmap_filter","qualname":"::SamplerDescriptor::mipmap_filter","value":"wgpu_types::FilterMode","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" How to filter between mip map levels\n","sig":null,"attributes":[{"value":"/ How to filter between mip map levels","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41064,"byte_end":41104,"line_start":1196,"line_end":1196,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":1871},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41204,"byte_end":41217,"line_start":1199,"line_end":1199,"column_start":9,"column_end":22},"name":"lod_min_clamp","qualname":"::SamplerDescriptor::lod_min_clamp","value":"f32","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" Minimum level of detail (i.e. mip level) to use\n","sig":null,"attributes":[{"value":"/ Minimum level of detail (i.e. mip level) to use","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41144,"byte_end":41195,"line_start":1198,"line_end":1198,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1872},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41288,"byte_end":41301,"line_start":1201,"line_end":1201,"column_start":9,"column_end":22},"name":"lod_max_clamp","qualname":"::SamplerDescriptor::lod_max_clamp","value":"f32","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" Maximum level of detail (i.e. mip level) to use\n","sig":null,"attributes":[{"value":"/ Maximum level of detail (i.e. mip level) to use","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41228,"byte_end":41279,"line_start":1200,"line_end":1200,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1873},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41410,"byte_end":41417,"line_start":1203,"line_end":1203,"column_start":9,"column_end":16},"name":"compare","qualname":"::SamplerDescriptor::compare","value":"std::option::Option<wgpu_types::CompareFunction>","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" If this is enabled, this is a comparison sampler using the given comparison function.\n","sig":null,"attributes":[{"value":"/ If this is enabled, this is a comparison sampler using the given comparison function.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41312,"byte_end":41401,"line_start":1202,"line_end":1202,"column_start":5,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":1874},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41494,"byte_end":41510,"line_start":1205,"line_end":1205,"column_start":9,"column_end":25},"name":"anisotropy_clamp","qualname":"::SamplerDescriptor::anisotropy_clamp","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" Valid values: 1, 2, 4, 8, and 16.\n","sig":null,"attributes":[{"value":"/ Valid values: 1, 2, 4, 8, and 16.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41448,"byte_end":41485,"line_start":1204,"line_end":1204,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":1875},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41619,"byte_end":41631,"line_start":1207,"line_end":1207,"column_start":9,"column_end":21},"name":"border_color","qualname":"::SamplerDescriptor::border_color","value":"std::option::Option<wgpu_types::SamplerBorderColor>","parent":{"krate":0,"index":1862},"children":[],"decl_id":null,"docs":" Border color to use when address_mode is [`AddressMode::ClampToBorder`]\n","sig":null,"attributes":[{"value":"/ Border color to use when address_mode is [`AddressMode::ClampToBorder`]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41535,"byte_end":41610,"line_start":1206,"line_end":1206,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":1888},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42324,"byte_end":42338,"line_start":1231,"line_end":1231,"column_start":12,"column_end":26},"name":"BindGroupEntry","qualname":"::BindGroupEntry","value":"BindGroupEntry { binding, resource }","parent":null,"children":[{"krate":0,"index":1890},{"krate":0,"index":1891}],"decl_id":null,"docs":" Bindable resource and the slot to bind it to.\n","sig":null,"attributes":[{"value":"/ Bindable resource and the slot to bind it to.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42239,"byte_end":42288,"line_start":1229,"line_end":1229,"column_start":1,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1890},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42499,"byte_end":42506,"line_start":1234,"line_end":1234,"column_start":9,"column_end":16},"name":"binding","qualname":"::BindGroupEntry::binding","value":"u32","parent":{"krate":0,"index":1888},"children":[],"decl_id":null,"docs":" Slot for which binding provides resource. Corresponds to an entry of the same\n binding index in the [`BindGroupLayoutDescriptor`].\n","sig":null,"attributes":[{"value":"/ Slot for which binding provides resource. Corresponds to an entry of the same","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42349,"byte_end":42430,"line_start":1232,"line_end":1232,"column_start":5,"column_end":86}},{"value":"/ binding index in the [`BindGroupLayoutDescriptor`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42435,"byte_end":42490,"line_start":1233,"line_end":1233,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42563,"byte_end":42571,"line_start":1236,"line_end":1236,"column_start":9,"column_end":17},"name":"resource","qualname":"::BindGroupEntry::resource","value":"BindingResource<'a>","parent":{"krate":0,"index":1888},"children":[],"decl_id":null,"docs":" Resource to attach to the binding\n","sig":null,"attributes":[{"value":"/ Resource to attach to the binding","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42517,"byte_end":42554,"line_start":1235,"line_end":1235,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1898},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42697,"byte_end":42716,"line_start":1241,"line_end":1241,"column_start":12,"column_end":31},"name":"BindGroupDescriptor","qualname":"::BindGroupDescriptor","value":"BindGroupDescriptor { label, layout, entries }","parent":null,"children":[{"krate":0,"index":1900},{"krate":0,"index":1901},{"krate":0,"index":1902}],"decl_id":null,"docs":" Describes a group of bindings and the resources to be bound.\n","sig":null,"attributes":[{"value":"/ Describes a group of bindings and the resources to be bound.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42597,"byte_end":42661,"line_start":1239,"line_end":1239,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":1900},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42835,"byte_end":42840,"line_start":1243,"line_end":1243,"column_start":9,"column_end":14},"name":"label","qualname":"::BindGroupDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1898},"children":[],"decl_id":null,"docs":" Debug label of the bind group. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the bind group. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42727,"byte_end":42826,"line_start":1242,"line_end":1242,"column_start":5,"column_end":104}}]},{"kind":"Field","id":{"krate":0,"index":1901},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42930,"byte_end":42936,"line_start":1245,"line_end":1245,"column_start":9,"column_end":15},"name":"layout","qualname":"::BindGroupDescriptor::layout","value":"&'a BindGroupLayout","parent":{"krate":0,"index":1898},"children":[],"decl_id":null,"docs":" The [`BindGroupLayout`] that corresponds to this bind group.\n","sig":null,"attributes":[{"value":"/ The [`BindGroupLayout`] that corresponds to this bind group.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42857,"byte_end":42921,"line_start":1244,"line_end":1244,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1902},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43017,"byte_end":43024,"line_start":1247,"line_end":1247,"column_start":9,"column_end":16},"name":"entries","qualname":"::BindGroupDescriptor::entries","value":"&'a [BindGroupEntry<'a>]","parent":{"krate":0,"index":1898},"children":[],"decl_id":null,"docs":" The resources to bind to this bind group.\n","sig":null,"attributes":[{"value":"/ The resources to bind to this bind group.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":42963,"byte_end":43008,"line_start":1246,"line_end":1246,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":1909},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43298,"byte_end":43318,"line_start":1255,"line_end":1255,"column_start":12,"column_end":32},"name":"RenderPassDescriptor","qualname":"::RenderPassDescriptor","value":"RenderPassDescriptor { label, color_attachments, depth_stencil_attachment }","parent":null,"children":[{"krate":0,"index":1912},{"krate":0,"index":1913},{"krate":0,"index":1914}],"decl_id":null,"docs":" Describes the attachments of a render pass.","sig":null,"attributes":[{"value":"/ Describes the attachments of a render pass.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43055,"byte_end":43102,"line_start":1250,"line_end":1250,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43103,"byte_end":43106,"line_start":1251,"line_end":1251,"column_start":1,"column_end":4}},{"value":"/ Note: separate lifetimes are needed because the texture views","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43107,"byte_end":43172,"line_start":1252,"line_end":1252,"column_start":1,"column_end":66}},{"value":"/ have to live as long as the pass is recorded, while everything else doesn't.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43173,"byte_end":43253,"line_start":1253,"line_end":1253,"column_start":1,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":1912},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43442,"byte_end":43447,"line_start":1257,"line_end":1257,"column_start":9,"column_end":14},"name":"label","qualname":"::RenderPassDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" Debug label of the render pass. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the render pass. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43333,"byte_end":43433,"line_start":1256,"line_end":1256,"column_start":5,"column_end":105}}]},{"kind":"Field","id":{"krate":0,"index":1913},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43518,"byte_end":43535,"line_start":1259,"line_end":1259,"column_start":9,"column_end":26},"name":"color_attachments","qualname":"::RenderPassDescriptor::color_attachments","value":"&'b [RenderPassColorAttachment<'a>]","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" The color attachments of the render pass.\n","sig":null,"attributes":[{"value":"/ The color attachments of the render pass.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43464,"byte_end":43509,"line_start":1258,"line_end":1258,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":1914},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43651,"byte_end":43675,"line_start":1261,"line_end":1261,"column_start":9,"column_end":33},"name":"depth_stencil_attachment","qualname":"::RenderPassDescriptor::depth_stencil_attachment","value":"std::option::Option<RenderPassDepthStencilAttachment<'a>>","parent":{"krate":0,"index":1909},"children":[],"decl_id":null,"docs":" The depth and stencil attachment of the render pass, if any.\n","sig":null,"attributes":[{"value":"/ The depth and stencil attachment of the render pass, if any.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43578,"byte_end":43642,"line_start":1260,"line_end":1260,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1927},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43834,"byte_end":43852,"line_start":1266,"line_end":1266,"column_start":12,"column_end":30},"name":"VertexBufferLayout","qualname":"::VertexBufferLayout","value":"VertexBufferLayout { array_stride, step_mode, attributes }","parent":null,"children":[{"krate":0,"index":1929},{"krate":0,"index":1930},{"krate":0,"index":1931}],"decl_id":null,"docs":" Describes how the vertex buffer is interpreted.\n","sig":null,"attributes":[{"value":"/ Describes how the vertex buffer is interpreted.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43726,"byte_end":43777,"line_start":1264,"line_end":1264,"column_start":1,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":1929},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43930,"byte_end":43942,"line_start":1268,"line_end":1268,"column_start":9,"column_end":21},"name":"array_stride","qualname":"::VertexBufferLayout::array_stride","value":"u64","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The stride, in bytes, between elements of this buffer.\n","sig":null,"attributes":[{"value":"/ The stride, in bytes, between elements of this buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43863,"byte_end":43921,"line_start":1267,"line_end":1267,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":1930},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44026,"byte_end":44035,"line_start":1270,"line_end":1270,"column_start":9,"column_end":18},"name":"step_mode","qualname":"::VertexBufferLayout::step_mode","value":"wgpu_types::VertexStepMode","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" How often this vertex buffer is \"stepped\" forward.\n","sig":null,"attributes":[{"value":"/ How often this vertex buffer is \"stepped\" forward.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":43963,"byte_end":44017,"line_start":1269,"line_end":1269,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":1931},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44124,"byte_end":44134,"line_start":1272,"line_end":1272,"column_start":9,"column_end":19},"name":"attributes","qualname":"::VertexBufferLayout::attributes","value":"&'a [wgpu_types::VertexAttribute]","parent":{"krate":0,"index":1927},"children":[],"decl_id":null,"docs":" The list of attributes which comprise a single vertex.\n","sig":null,"attributes":[{"value":"/ The list of attributes which comprise a single vertex.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44057,"byte_end":44115,"line_start":1271,"line_end":1271,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":1953},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44252,"byte_end":44263,"line_start":1277,"line_end":1277,"column_start":12,"column_end":23},"name":"VertexState","qualname":"::VertexState","value":"VertexState { module, entry_point, buffers }","parent":null,"children":[{"krate":0,"index":1955},{"krate":0,"index":1956},{"krate":0,"index":1957}],"decl_id":null,"docs":" Describes the vertex process in a render pipeline.\n","sig":null,"attributes":[{"value":"/ Describes the vertex process in a render pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44162,"byte_end":44216,"line_start":1275,"line_end":1275,"column_start":1,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1955},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44329,"byte_end":44335,"line_start":1279,"line_end":1279,"column_start":9,"column_end":15},"name":"module","qualname":"::VertexState::module","value":"&'a ShaderModule","parent":{"krate":0,"index":1953},"children":[],"decl_id":null,"docs":" The compiled shader module for this stage.\n","sig":null,"attributes":[{"value":"/ The compiled shader module for this stage.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44274,"byte_end":44320,"line_start":1278,"line_end":1278,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1956},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44504,"byte_end":44515,"line_start":1282,"line_end":1282,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::VertexState::entry_point","value":"&'a str","parent":{"krate":0,"index":1953},"children":[],"decl_id":null,"docs":" The name of the entry point in the compiled shader. There must be a function that returns\n void with this name in the shader.\n","sig":null,"attributes":[{"value":"/ The name of the entry point in the compiled shader. There must be a function that returns","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44359,"byte_end":44452,"line_start":1280,"line_end":1280,"column_start":5,"column_end":98}},{"value":"/ void with this name in the shader.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44457,"byte_end":44495,"line_start":1281,"line_end":1281,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1957},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44600,"byte_end":44607,"line_start":1284,"line_end":1284,"column_start":9,"column_end":16},"name":"buffers","qualname":"::VertexState::buffers","value":"&'a [VertexBufferLayout<'a>]","parent":{"krate":0,"index":1953},"children":[],"decl_id":null,"docs":" The format of any vertex buffers used with this pipeline.\n","sig":null,"attributes":[{"value":"/ The format of any vertex buffers used with this pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44530,"byte_end":44591,"line_start":1283,"line_end":1283,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":1964},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44734,"byte_end":44747,"line_start":1289,"line_end":1289,"column_start":12,"column_end":25},"name":"FragmentState","qualname":"::FragmentState","value":"FragmentState { module, entry_point, targets }","parent":null,"children":[{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968}],"decl_id":null,"docs":" Describes the fragment process in a render pipeline.\n","sig":null,"attributes":[{"value":"/ Describes the fragment process in a render pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44642,"byte_end":44698,"line_start":1287,"line_end":1287,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":1966},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44813,"byte_end":44819,"line_start":1291,"line_end":1291,"column_start":9,"column_end":15},"name":"module","qualname":"::FragmentState::module","value":"&'a ShaderModule","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" The compiled shader module for this stage.\n","sig":null,"attributes":[{"value":"/ The compiled shader module for this stage.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44758,"byte_end":44804,"line_start":1290,"line_end":1290,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1967},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44988,"byte_end":44999,"line_start":1294,"line_end":1294,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::FragmentState::entry_point","value":"&'a str","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" The name of the entry point in the compiled shader. There must be a function that returns\n void with this name in the shader.\n","sig":null,"attributes":[{"value":"/ The name of the entry point in the compiled shader. There must be a function that returns","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44843,"byte_end":44936,"line_start":1292,"line_end":1292,"column_start":5,"column_end":98}},{"value":"/ void with this name in the shader.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":44941,"byte_end":44979,"line_start":1293,"line_end":1293,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":1968},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45065,"byte_end":45072,"line_start":1296,"line_end":1296,"column_start":9,"column_end":16},"name":"targets","qualname":"::FragmentState::targets","value":"&'a [wgpu_types::ColorTargetState]","parent":{"krate":0,"index":1964},"children":[],"decl_id":null,"docs":" The color state of the render targets.\n","sig":null,"attributes":[{"value":"/ The color state of the render targets.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45014,"byte_end":45056,"line_start":1295,"line_end":1295,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":1975},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45180,"byte_end":45204,"line_start":1301,"line_end":1301,"column_start":12,"column_end":36},"name":"RenderPipelineDescriptor","qualname":"::RenderPipelineDescriptor","value":"RenderPipelineDescriptor { label, layout, vertex, primitive, depth_stencil, multisample, fragment, multiview }","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984}],"decl_id":null,"docs":" Describes a render (graphics) pipeline.\n","sig":null,"attributes":[{"value":"/ Describes a render (graphics) pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45101,"byte_end":45144,"line_start":1299,"line_end":1299,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":1977},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45321,"byte_end":45326,"line_start":1303,"line_end":1303,"column_start":9,"column_end":14},"name":"label","qualname":"::RenderPipelineDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" Debug label of the pipeline. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the pipeline. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45215,"byte_end":45312,"line_start":1302,"line_end":1302,"column_start":5,"column_end":102}}]},{"kind":"Field","id":{"krate":0,"index":1978},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45400,"byte_end":45406,"line_start":1305,"line_end":1305,"column_start":9,"column_end":15},"name":"layout","qualname":"::RenderPipelineDescriptor::layout","value":"std::option::Option<&'a PipelineLayout>","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" The layout of bind groups for this pipeline.\n","sig":null,"attributes":[{"value":"/ The layout of bind groups for this pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45343,"byte_end":45391,"line_start":1304,"line_end":1304,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1979},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45526,"byte_end":45532,"line_start":1307,"line_end":1307,"column_start":9,"column_end":15},"name":"vertex","qualname":"::RenderPipelineDescriptor::vertex","value":"VertexState<'a>","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" The compiled vertex stage, its entry point, and the input buffers layout.\n","sig":null,"attributes":[{"value":"/ The compiled vertex stage, its entry point, and the input buffers layout.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45440,"byte_end":45517,"line_start":1306,"line_end":1306,"column_start":5,"column_end":82}}]},{"kind":"Field","id":{"krate":0,"index":1980},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45649,"byte_end":45658,"line_start":1309,"line_end":1309,"column_start":9,"column_end":18},"name":"primitive","qualname":"::RenderPipelineDescriptor::primitive","value":"wgpu_types::PrimitiveState","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" The properties of the pipeline at the primitive assembly and rasterization level.\n","sig":null,"attributes":[{"value":"/ The properties of the pipeline at the primitive assembly and rasterization level.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45555,"byte_end":45640,"line_start":1308,"line_end":1308,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":1981},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45780,"byte_end":45793,"line_start":1311,"line_end":1311,"column_start":9,"column_end":22},"name":"depth_stencil","qualname":"::RenderPipelineDescriptor::depth_stencil","value":"std::option::Option<wgpu_types::DepthStencilState>","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" The effect of draw calls on the depth and stencil aspects of the output target, if any.\n","sig":null,"attributes":[{"value":"/ The effect of draw calls on the depth and stencil aspects of the output target, if any.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45680,"byte_end":45771,"line_start":1310,"line_end":1310,"column_start":5,"column_end":96}}]},{"kind":"Field","id":{"krate":0,"index":1982},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45885,"byte_end":45896,"line_start":1313,"line_end":1313,"column_start":9,"column_end":20},"name":"multisample","qualname":"::RenderPipelineDescriptor::multisample","value":"wgpu_types::MultisampleState","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" The multi-sampling properties of the pipeline.\n","sig":null,"attributes":[{"value":"/ The multi-sampling properties of the pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45826,"byte_end":45876,"line_start":1312,"line_end":1312,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":1983},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46001,"byte_end":46009,"line_start":1315,"line_end":1315,"column_start":9,"column_end":17},"name":"fragment","qualname":"::RenderPipelineDescriptor::fragment","value":"std::option::Option<FragmentState<'a>>","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" The compiled fragment stage, its entry point, and the color targets.\n","sig":null,"attributes":[{"value":"/ The compiled fragment stage, its entry point, and the color targets.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":45920,"byte_end":45992,"line_start":1314,"line_end":1314,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":1984},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46185,"byte_end":46194,"line_start":1318,"line_end":1318,"column_start":9,"column_end":18},"name":"multiview","qualname":"::RenderPipelineDescriptor::multiview","value":"std::option::Option<std::num::NonZeroU32>","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" If the pipeline will be used with a multiview render pass, this indicates how many array\n layers the attachments will have.\n","sig":null,"attributes":[{"value":"/ If the pipeline will be used with a multiview render pass, this indicates how many array","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46042,"byte_end":46134,"line_start":1316,"line_end":1316,"column_start":5,"column_end":97}},{"value":"/ layers the attachments will have.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46139,"byte_end":46176,"line_start":1317,"line_end":1317,"column_start":5,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1991},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46312,"byte_end":46333,"line_start":1323,"line_end":1323,"column_start":12,"column_end":33},"name":"ComputePassDescriptor","qualname":"::ComputePassDescriptor","value":"ComputePassDescriptor { label }","parent":null,"children":[{"krate":0,"index":1993}],"decl_id":null,"docs":" Describes the attachments of a compute pass.\n","sig":null,"attributes":[{"value":"/ Describes the attachments of a compute pass.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46219,"byte_end":46267,"line_start":1321,"line_end":1321,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1993},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46454,"byte_end":46459,"line_start":1325,"line_end":1325,"column_start":9,"column_end":14},"name":"label","qualname":"::ComputePassDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":1991},"children":[],"decl_id":null,"docs":" Debug label of the compute pass. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the compute pass. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46344,"byte_end":46445,"line_start":1324,"line_end":1324,"column_start":5,"column_end":106}}]},{"kind":"Struct","id":{"krate":0,"index":2003},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46544,"byte_end":46569,"line_start":1330,"line_end":1330,"column_start":12,"column_end":37},"name":"ComputePipelineDescriptor","qualname":"::ComputePipelineDescriptor","value":"ComputePipelineDescriptor { label, layout, module, entry_point }","parent":null,"children":[{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":2008}],"decl_id":null,"docs":" Describes a compute pipeline.\n","sig":null,"attributes":[{"value":"/ Describes a compute pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46475,"byte_end":46508,"line_start":1328,"line_end":1328,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2005},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46686,"byte_end":46691,"line_start":1332,"line_end":1332,"column_start":9,"column_end":14},"name":"label","qualname":"::ComputePipelineDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":" Debug label of the pipeline. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the pipeline. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46580,"byte_end":46677,"line_start":1331,"line_end":1331,"column_start":5,"column_end":102}}]},{"kind":"Field","id":{"krate":0,"index":2006},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46765,"byte_end":46771,"line_start":1334,"line_end":1334,"column_start":9,"column_end":15},"name":"layout","qualname":"::ComputePipelineDescriptor::layout","value":"std::option::Option<&'a PipelineLayout>","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":" The layout of bind groups for this pipeline.\n","sig":null,"attributes":[{"value":"/ The layout of bind groups for this pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46708,"byte_end":46756,"line_start":1333,"line_end":1333,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2007},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46860,"byte_end":46866,"line_start":1336,"line_end":1336,"column_start":9,"column_end":15},"name":"module","qualname":"::ComputePipelineDescriptor::module","value":"&'a ShaderModule","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":" The compiled shader module for this stage.\n","sig":null,"attributes":[{"value":"/ The compiled shader module for this stage.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46805,"byte_end":46851,"line_start":1335,"line_end":1335,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47035,"byte_end":47046,"line_start":1339,"line_end":1339,"column_start":9,"column_end":20},"name":"entry_point","qualname":"::ComputePipelineDescriptor::entry_point","value":"&'a str","parent":{"krate":0,"index":2003},"children":[],"decl_id":null,"docs":" The name of the entry point in the compiled shader. There must be a function that returns\n void with this name in the shader.\n","sig":null,"attributes":[{"value":"/ The name of the entry point in the compiled shader. There must be a function that returns","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46890,"byte_end":46983,"line_start":1337,"line_end":1337,"column_start":5,"column_end":98}},{"value":"/ void with this name in the shader.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":46988,"byte_end":47026,"line_start":1338,"line_end":1338,"column_start":5,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":1225},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47188,"byte_end":47203,"line_start":1344,"line_end":1344,"column_start":10,"column_end":25},"name":"ImageCopyBuffer","qualname":"::ImageCopyBuffer","value":"ImageCopyBufferBase<&'a Buffer>","parent":null,"children":[],"decl_id":null,"docs":" View of a buffer which can be used to copy to/from a texture.\n","sig":null,"attributes":[{"value":"/ View of a buffer which can be used to copy to/from a texture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47113,"byte_end":47178,"line_start":1343,"line_end":1343,"column_start":1,"column_end":66}}]},{"kind":"Type","id":{"krate":0,"index":1230},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47382,"byte_end":47398,"line_start":1348,"line_end":1348,"column_start":10,"column_end":26},"name":"ImageCopyTexture","qualname":"::ImageCopyTexture","value":"ImageCopyTextureBase<&'a Texture>","parent":null,"children":[],"decl_id":null,"docs":" View of a texture which can be used to copy to/from a buffer/texture.\n","sig":null,"attributes":[{"value":"/ View of a texture which can be used to copy to/from a buffer/texture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47299,"byte_end":47372,"line_start":1347,"line_end":1347,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":2015},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47513,"byte_end":47538,"line_start":1352,"line_end":1352,"column_start":12,"column_end":37},"name":"BindGroupLayoutDescriptor","qualname":"::BindGroupLayoutDescriptor","value":"BindGroupLayoutDescriptor { label, entries }","parent":null,"children":[{"krate":0,"index":2017},{"krate":0,"index":2018}],"decl_id":null,"docs":" Describes a [`BindGroupLayout`].\n","sig":null,"attributes":[{"value":"/ Describes a [`BindGroupLayout`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47441,"byte_end":47477,"line_start":1350,"line_end":1350,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":2017},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47664,"byte_end":47669,"line_start":1354,"line_end":1354,"column_start":9,"column_end":14},"name":"label","qualname":"::BindGroupLayoutDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":2015},"children":[],"decl_id":null,"docs":" Debug label of the bind group layout. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the bind group layout. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47549,"byte_end":47655,"line_start":1353,"line_end":1353,"column_start":5,"column_end":111}}]},{"kind":"Field","id":{"krate":0,"index":2018},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47740,"byte_end":47747,"line_start":1357,"line_end":1357,"column_start":9,"column_end":16},"name":"entries","qualname":"::BindGroupLayoutDescriptor::entries","value":"&'a [wgpu_types::BindGroupLayoutEntry]","parent":{"krate":0,"index":2015},"children":[],"decl_id":null,"docs":" Array of entries in this BindGroupLayout\n","sig":null,"attributes":[{"value":"/ Array of entries in this BindGroupLayout","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47687,"byte_end":47731,"line_start":1356,"line_end":1356,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2025},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47886,"byte_end":47915,"line_start":1362,"line_end":1362,"column_start":12,"column_end":41},"name":"RenderBundleEncoderDescriptor","qualname":"::RenderBundleEncoderDescriptor","value":"RenderBundleEncoderDescriptor { label, color_formats, depth_stencil, sample_count, multiview }","parent":null,"children":[{"krate":0,"index":2027},{"krate":0,"index":2028},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031}],"decl_id":null,"docs":" Describes a [`RenderBundleEncoder`].\n","sig":null,"attributes":[{"value":"/ Describes a [`RenderBundleEncoder`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47780,"byte_end":47820,"line_start":1360,"line_end":1360,"column_start":1,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2027},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48045,"byte_end":48050,"line_start":1364,"line_end":1364,"column_start":9,"column_end":14},"name":"label","qualname":"::RenderBundleEncoderDescriptor::label","value":"std::option::Option<&'a str>","parent":{"krate":0,"index":2025},"children":[],"decl_id":null,"docs":" Debug label of the render bundle encoder. This will show up in graphics debuggers for easy identification.\n","sig":null,"attributes":[{"value":"/ Debug label of the render bundle encoder. This will show up in graphics debuggers for easy identification.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":47926,"byte_end":48036,"line_start":1363,"line_end":1363,"column_start":5,"column_end":115}}]},{"kind":"Field","id":{"krate":0,"index":2028},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48282,"byte_end":48295,"line_start":1367,"line_end":1367,"column_start":9,"column_end":22},"name":"color_formats","qualname":"::RenderBundleEncoderDescriptor::color_formats","value":"&'a [wgpu_types::TextureFormat]","parent":{"krate":0,"index":2025},"children":[],"decl_id":null,"docs":" The formats of the color attachments that this render bundle is capable to rendering to. This\n must match the formats of the color attachments in the renderpass this render bundle is executed in.\n","sig":null,"attributes":[{"value":"/ The formats of the color attachments that this render bundle is capable to rendering to. This","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48067,"byte_end":48164,"line_start":1365,"line_end":1365,"column_start":5,"column_end":102}},{"value":"/ must match the formats of the color attachments in the renderpass this render bundle is executed in.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48169,"byte_end":48273,"line_start":1366,"line_end":1366,"column_start":5,"column_end":109}}]},{"kind":"Field","id":{"krate":0,"index":2029},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48538,"byte_end":48551,"line_start":1370,"line_end":1370,"column_start":9,"column_end":22},"name":"depth_stencil","qualname":"::RenderBundleEncoderDescriptor::depth_stencil","value":"std::option::Option<wgpu_types::RenderBundleDepthStencil>","parent":{"krate":0,"index":2025},"children":[],"decl_id":null,"docs":" Information about the depth attachment that this render bundle is capable to rendering to. This\n must match the format of the depth attachments in the renderpass this render bundle is executed in.\n","sig":null,"attributes":[{"value":"/ Information about the depth attachment that this render bundle is capable to rendering to. This","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48322,"byte_end":48421,"line_start":1368,"line_end":1368,"column_start":5,"column_end":104}},{"value":"/ must match the format of the depth attachments in the renderpass this render bundle is executed in.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48426,"byte_end":48529,"line_start":1369,"line_end":1369,"column_start":5,"column_end":108}}]},{"kind":"Field","id":{"krate":0,"index":2030},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48737,"byte_end":48749,"line_start":1373,"line_end":1373,"column_start":9,"column_end":21},"name":"sample_count","qualname":"::RenderBundleEncoderDescriptor::sample_count","value":"u32","parent":{"krate":0,"index":2025},"children":[],"decl_id":null,"docs":" Sample count this render bundle is capable of rendering to. This must match the pipelines and\n the renderpasses it is used in.\n","sig":null,"attributes":[{"value":"/ Sample count this render bundle is capable of rendering to. This must match the pipelines and","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48591,"byte_end":48688,"line_start":1371,"line_end":1371,"column_start":5,"column_end":102}},{"value":"/ the renderpasses it is used in.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48693,"byte_end":48728,"line_start":1372,"line_end":1372,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2031},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48871,"byte_end":48880,"line_start":1375,"line_end":1375,"column_start":9,"column_end":18},"name":"multiview","qualname":"::RenderBundleEncoderDescriptor::multiview","value":"std::option::Option<std::num::NonZeroU32>","parent":{"krate":0,"index":2025},"children":[],"decl_id":null,"docs":" If this render bundle will rendering to multiple array layers in the attachments at the same time.\n","sig":null,"attributes":[{"value":"/ If this render bundle will rendering to multiple array layers in the attachments at the same time.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48760,"byte_end":48862,"line_start":1374,"line_end":1374,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":2056},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49047,"byte_end":49061,"line_start":1381,"line_end":1381,"column_start":12,"column_end":26},"name":"SurfaceTexture","qualname":"::SurfaceTexture","value":"SurfaceTexture { texture, suboptimal }","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060}],"decl_id":null,"docs":" Surface texture that can be rendered to.\n Result of a successful call to [`Surface::get_current_texture`].\n","sig":null,"attributes":[{"value":"/ Surface texture that can be rendered to.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48905,"byte_end":48949,"line_start":1378,"line_end":1378,"column_start":1,"column_end":45}},{"value":"/ Result of a successful call to [`Surface::get_current_texture`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":48950,"byte_end":49018,"line_start":1379,"line_end":1379,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2057},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49110,"byte_end":49117,"line_start":1383,"line_end":1383,"column_start":9,"column_end":16},"name":"texture","qualname":"::SurfaceTexture::texture","value":"Texture","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Accessible view of the frame.\n","sig":null,"attributes":[{"value":"/ Accessible view of the frame.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49068,"byte_end":49101,"line_start":1382,"line_end":1382,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2058},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49264,"byte_end":49274,"line_start":1386,"line_end":1386,"column_start":9,"column_end":19},"name":"suboptimal","qualname":"::SurfaceTexture::suboptimal","value":"bool","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" `true` if the acquired buffer can still be used for rendering,\n but should be recreated for maximum performance.\n","sig":null,"attributes":[{"value":"/ `true` if the acquired buffer can still be used for rendering,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49132,"byte_end":49198,"line_start":1384,"line_end":1384,"column_start":5,"column_end":71}},{"value":"/ but should be recreated for maximum performance.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49203,"byte_end":49255,"line_start":1385,"line_end":1385,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2064},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49568,"byte_end":49575,"line_start":1395,"line_end":1395,"column_start":5,"column_end":12},"name":"Timeout","qualname":"::SurfaceError::Timeout","value":"SurfaceError::Timeout","parent":{"krate":0,"index":2063},"children":[],"decl_id":null,"docs":" A timeout was encountered while trying to acquire the next frame.\n","sig":null,"attributes":[{"value":"/ A timeout was encountered while trying to acquire the next frame.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49494,"byte_end":49563,"line_start":1394,"line_end":1394,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2066},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49671,"byte_end":49679,"line_start":1397,"line_end":1397,"column_start":5,"column_end":13},"name":"Outdated","qualname":"::SurfaceError::Outdated","value":"SurfaceError::Outdated","parent":{"krate":0,"index":2063},"children":[],"decl_id":null,"docs":" The underlying surface has changed, and therefore the swap chain must be updated.\n","sig":null,"attributes":[{"value":"/ The underlying surface has changed, and therefore the swap chain must be updated.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49581,"byte_end":49666,"line_start":1396,"line_end":1396,"column_start":5,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49749,"byte_end":49753,"line_start":1399,"line_end":1399,"column_start":5,"column_end":9},"name":"Lost","qualname":"::SurfaceError::Lost","value":"SurfaceError::Lost","parent":{"krate":0,"index":2063},"children":[],"decl_id":null,"docs":" The swap chain has been lost and needs to be recreated.\n","sig":null,"attributes":[{"value":"/ The swap chain has been lost and needs to be recreated.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49685,"byte_end":49744,"line_start":1398,"line_end":1398,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49821,"byte_end":49832,"line_start":1401,"line_end":1401,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::SurfaceError::OutOfMemory","value":"SurfaceError::OutOfMemory","parent":{"krate":0,"index":2063},"children":[],"decl_id":null,"docs":" There is no more memory left to allocate a new frame.\n","sig":null,"attributes":[{"value":"/ There is no more memory left to allocate a new frame.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49759,"byte_end":49816,"line_start":1400,"line_end":1400,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":2063},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49475,"byte_end":49487,"line_start":1393,"line_end":1393,"column_start":10,"column_end":22},"name":"SurfaceError","qualname":"::SurfaceError","value":"pub enum SurfaceError { Timeout, Outdated, Lost, OutOfMemory, }","parent":null,"children":[{"krate":0,"index":2064},{"krate":0,"index":2066},{"krate":0,"index":2068},{"krate":0,"index":2070}],"decl_id":null,"docs":" Result of an unsuccessful call to [`Surface::get_current_texture`].\n","sig":null,"attributes":[{"value":"/ Result of an unsuccessful call to [`Surface::get_current_texture`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49355,"byte_end":49426,"line_start":1391,"line_end":1391,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50639,"byte_end":50642,"line_start":1424,"line_end":1424,"column_start":12,"column_end":15},"name":"new","qualname":"<Instance>::new","value":"pub fn new(Backends) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an new instance of wgpu.","sig":null,"attributes":[{"value":"/ Create an new instance of wgpu.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50443,"byte_end":50478,"line_start":1418,"line_end":1418,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50483,"byte_end":50486,"line_start":1419,"line_end":1419,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50491,"byte_end":50506,"line_start":1420,"line_end":1420,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50511,"byte_end":50514,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ - `backends` - Controls from which [backends][Backends] wgpu will choose","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50519,"byte_end":50595,"line_start":1422,"line_end":1422,"column_start":5,"column_end":81}},{"value":"/   during instantiation.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50600,"byte_end":50627,"line_start":1423,"line_end":1423,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":51063,"byte_end":51071,"line_start":1440,"line_end":1440,"column_start":19,"column_end":27},"name":"from_hal","qualname":"<Instance>::from_hal","value":"pub unsafe fn from_hal<A: wgc::hub::HalApi>(A::Instance) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an new instance of wgpu from a wgpu-hal instance.","sig":null,"attributes":[{"value":"/ Create an new instance of wgpu from a wgpu-hal instance.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50759,"byte_end":50819,"line_start":1430,"line_end":1430,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50824,"byte_end":50827,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50832,"byte_end":50847,"line_start":1432,"line_end":1432,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50852,"byte_end":50855,"line_start":1433,"line_end":1433,"column_start":5,"column_end":8}},{"value":"/ - `hal_instance` - wgpu-hal instance.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50860,"byte_end":50901,"line_start":1434,"line_end":1434,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50906,"byte_end":50909,"line_start":1435,"line_end":1435,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50914,"byte_end":50926,"line_start":1436,"line_end":1436,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50931,"byte_end":50934,"line_start":1437,"line_end":1437,"column_start":5,"column_end":8}},{"value":"/ Refer to the creation of wgpu-hal Instance for every backend.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50939,"byte_end":51004,"line_start":1438,"line_end":1438,"column_start":5,"column_end":70}},{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":51009,"byte_end":51044,"line_start":1439,"line_end":1439,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":51467,"byte_end":51485,"line_start":1452,"line_end":1452,"column_start":12,"column_end":30},"name":"enumerate_adapters","qualname":"<Instance>::enumerate_adapters","value":"pub fn enumerate_adapters(&Self, Backends) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Retrieves all available [`Adapter`]s that match the given [`Backends`].","sig":null,"attributes":[{"value":"/ Retrieves all available [`Adapter`]s that match the given [`Backends`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":51238,"byte_end":51313,"line_start":1446,"line_end":1446,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":51318,"byte_end":51321,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":51326,"byte_end":51341,"line_start":1448,"line_end":1448,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":51346,"byte_end":51349,"line_start":1449,"line_end":1449,"column_start":5,"column_end":8}},{"value":"/ - `backends` - Backends from which to enumerate adapters.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":51354,"byte_end":51415,"line_start":1450,"line_end":1450,"column_start":5,"column_end":66}},{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":51420,"byte_end":51455,"line_start":1451,"line_end":1451,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":52100,"byte_end":52115,"line_start":1468,"line_end":1468,"column_start":12,"column_end":27},"name":"request_adapter","qualname":"<Instance>::request_adapter","value":"pub fn request_adapter(&Self, &RequestAdapterOptions) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an [`Adapter`] which matches the given [`RequestAdapterOptions`].","sig":null,"attributes":[{"value":"/ Retrieves an [`Adapter`] which matches the given [`RequestAdapterOptions`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":51822,"byte_end":51901,"line_start":1463,"line_end":1463,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":51906,"byte_end":51909,"line_start":1464,"line_end":1464,"column_start":5,"column_end":8}},{"value":"/ Some options are \"soft\", so treated as non-mandatory. Others are \"hard\".","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":51914,"byte_end":51990,"line_start":1465,"line_end":1465,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":51995,"byte_end":51998,"line_start":1466,"line_end":1466,"column_start":5,"column_end":8}},{"value":"/ If no adapters are found that suffice all the \"hard\" options, `None` is returned.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":52003,"byte_end":52088,"line_start":1467,"line_end":1467,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1246},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":52659,"byte_end":52682,"line_start":1483,"line_end":1483,"column_start":19,"column_end":42},"name":"create_adapter_from_hal","qualname":"<Instance>::create_adapter_from_hal","value":"pub unsafe fn create_adapter_from_hal<A: wgc::hub::HalApi>(&Self,\nhal::ExposedAdapter<A>) -> Adapter","parent":null,"children":[],"decl_id":null,"docs":" Converts a wgpu-hal `ExposedAdapter` to a wgpu [`Adapter`].","sig":null,"attributes":[{"value":"/ Converts a wgpu-hal `ExposedAdapter` to a wgpu [`Adapter`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":52430,"byte_end":52493,"line_start":1477,"line_end":1477,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":52498,"byte_end":52501,"line_start":1478,"line_end":1478,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":52506,"byte_end":52518,"line_start":1479,"line_end":1479,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":52523,"byte_end":52526,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ `hal_adapter` must be created from this instance internal handle.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":52531,"byte_end":52600,"line_start":1481,"line_end":1481,"column_start":5,"column_end":74}},{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":52605,"byte_end":52640,"line_start":1482,"line_end":1482,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":53188,"byte_end":53202,"line_start":1498,"line_end":1498,"column_start":19,"column_end":33},"name":"create_surface","qualname":"<Instance>::create_surface","value":"pub unsafe fn create_surface<W: raw_window_handle::HasRawWindowHandle>(&Self,\n&W) -> Surface","parent":null,"children":[],"decl_id":null,"docs":" Creates a surface from a raw window handle.","sig":null,"attributes":[{"value":"/ Creates a surface from a raw window handle.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":52939,"byte_end":52986,"line_start":1492,"line_end":1492,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":52991,"byte_end":52994,"line_start":1493,"line_end":1493,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":52999,"byte_end":53011,"line_start":1494,"line_end":1494,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":53016,"byte_end":53019,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ - Raw Window Handle must be a valid object to create a surface upon and","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":53024,"byte_end":53099,"line_start":1496,"line_end":1496,"column_start":5,"column_end":80}},{"value":"/   must remain valid for the lifetime of the returned surface.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":53104,"byte_end":53169,"line_start":1497,"line_end":1497,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":53682,"byte_end":53722,"line_start":1514,"line_end":1514,"column_start":19,"column_end":59},"name":"create_surface_from_core_animation_layer","qualname":"<Instance>::create_surface_from_core_animation_layer","value":"pub unsafe fn create_surface_from_core_animation_layer(&Self,\n*mut std::ffi::c_void) -> Surface","parent":null,"children":[],"decl_id":null,"docs":" Creates a surface from `CoreAnimationLayer`.","sig":null,"attributes":[{"value":"/ Creates a surface from `CoreAnimationLayer`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":53461,"byte_end":53509,"line_start":1508,"line_end":1508,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":53514,"byte_end":53517,"line_start":1509,"line_end":1509,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":53522,"byte_end":53534,"line_start":1510,"line_end":1510,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":53539,"byte_end":53542,"line_start":1511,"line_end":1511,"column_start":5,"column_end":8}},{"value":"/ - layer must be a valid object to create a surface upon.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":53547,"byte_end":53607,"line_start":1512,"line_end":1512,"column_start":5,"column_end":65}},{"value":"cfg(any(target_os = \"ios\", target_os = \"macos\"))","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":53612,"byte_end":53663,"line_start":1513,"line_end":1513,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55147,"byte_end":55155,"line_start":1558,"line_end":1558,"column_start":12,"column_end":20},"name":"poll_all","qualname":"<Instance>::poll_all","value":"pub fn poll_all(&Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Polls all devices.\n If `force_wait` is true and this is not running on the web,\n then this function will block until all in-flight buffers have been mapped.\n","sig":null,"attributes":[{"value":"/ Polls all devices.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":54961,"byte_end":54983,"line_start":1555,"line_end":1555,"column_start":5,"column_end":27}},{"value":"/ If `force_wait` is true and this is not running on the web,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":54988,"byte_end":55051,"line_start":1556,"line_end":1556,"column_start":5,"column_end":68}},{"value":"/ then this function will block until all in-flight buffers have been mapped.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55056,"byte_end":55135,"line_start":1557,"line_end":1557,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55334,"byte_end":55349,"line_start":1564,"line_end":1564,"column_start":12,"column_end":27},"name":"generate_report","qualname":"<Instance>::generate_report","value":"pub fn generate_report(&Self) -> wgc::hub::GlobalReport","parent":null,"children":[],"decl_id":null,"docs":" Generates memory report.\n","sig":null,"attributes":[{"value":"/ Generates memory report.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55254,"byte_end":55282,"line_start":1562,"line_end":1562,"column_start":5,"column_end":33}},{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55287,"byte_end":55322,"line_start":1563,"line_end":1563,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":56217,"byte_end":56231,"line_start":1586,"line_end":1586,"column_start":12,"column_end":26},"name":"request_device","qualname":"<Adapter>::request_device","value":"pub fn request_device(&Self, &DeviceDescriptor, Option<&std::path::Path>)\n-> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Requests a connection to a physical device, creating a logical device.","sig":null,"attributes":[{"value":"/ Requests a connection to a physical device, creating a logical device.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55452,"byte_end":55526,"line_start":1570,"line_end":1570,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55531,"byte_end":55534,"line_start":1571,"line_end":1571,"column_start":5,"column_end":8}},{"value":"/ Returns the [`Device`] together with a [`Queue`] that executes command buffers.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55539,"byte_end":55622,"line_start":1572,"line_end":1572,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55627,"byte_end":55630,"line_start":1573,"line_end":1573,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55635,"byte_end":55650,"line_start":1574,"line_end":1574,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55655,"byte_end":55658,"line_start":1575,"line_end":1575,"column_start":5,"column_end":8}},{"value":"/ - `desc` - Description of the features and limits requested from the given device.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55663,"byte_end":55749,"line_start":1576,"line_end":1576,"column_start":5,"column_end":91}},{"value":"/ - `trace_path` - Can be used for API call tracing, if that feature is","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55754,"byte_end":55827,"line_start":1577,"line_end":1577,"column_start":5,"column_end":78}},{"value":"/   enabled in `wgpu-core`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55832,"byte_end":55861,"line_start":1578,"line_end":1578,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55866,"byte_end":55869,"line_start":1579,"line_end":1579,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55874,"byte_end":55886,"line_start":1580,"line_end":1580,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55891,"byte_end":55894,"line_start":1581,"line_end":1581,"column_start":5,"column_end":8}},{"value":"/ - Features specified by `desc` are not supported by this adapter.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55899,"byte_end":55968,"line_start":1582,"line_end":1582,"column_start":5,"column_end":74}},{"value":"/ - Unsafe features were requested but not enabled when requesting the adapter.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55973,"byte_end":56054,"line_start":1583,"line_end":1583,"column_start":5,"column_end":86}},{"value":"/ - Limits requested exceed the values provided by the adapter.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":56059,"byte_end":56124,"line_start":1584,"line_end":1584,"column_start":5,"column_end":70}},{"value":"/ - Adapter does not support all features wgpu requires to safely operate.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":56129,"byte_end":56205,"line_start":1585,"line_end":1585,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":57280,"byte_end":57302,"line_start":1616,"line_end":1616,"column_start":19,"column_end":41},"name":"create_device_from_hal","qualname":"<Adapter>::create_device_from_hal","value":"pub unsafe fn create_device_from_hal<A: wgc::hub::HalApi>(&Self,\nhal::OpenDevice<A>, &DeviceDescriptor, Option<&std::path::Path>)\n-> Result<(Device, Queue), RequestDeviceError>","parent":null,"children":[],"decl_id":null,"docs":" Create a wgpu [`Device`] and [`Queue`] from a wgpu-hal `OpenDevice`","sig":null,"attributes":[{"value":"/ Create a wgpu [`Device`] and [`Queue`] from a wgpu-hal `OpenDevice`","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":56974,"byte_end":57045,"line_start":1609,"line_end":1609,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":57050,"byte_end":57053,"line_start":1610,"line_end":1610,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":57058,"byte_end":57070,"line_start":1611,"line_end":1611,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":57075,"byte_end":57078,"line_start":1612,"line_end":1612,"column_start":5,"column_end":8}},{"value":"/ - `hal_device` must be created from this adapter internal handle.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":57083,"byte_end":57152,"line_start":1613,"line_end":1613,"column_start":5,"column_end":74}},{"value":"/ - `desc.features` must be a subset of `hal_device` features.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":57157,"byte_end":57221,"line_start":1614,"line_end":1614,"column_start":5,"column_end":69}},{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":57226,"byte_end":57261,"line_start":1615,"line_end":1615,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1261},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58112,"byte_end":58132,"line_start":1640,"line_end":1640,"column_start":12,"column_end":32},"name":"is_surface_supported","qualname":"<Adapter>::is_surface_supported","value":"pub fn is_surface_supported(&Self, &Surface) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether this adapter may present to the passed surface.\n","sig":null,"attributes":[{"value":"/ Returns whether this adapter may present to the passed surface.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58033,"byte_end":58100,"line_start":1639,"line_end":1639,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1262},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58451,"byte_end":58459,"line_start":1648,"line_end":1648,"column_start":12,"column_end":20},"name":"features","qualname":"<Adapter>::features","value":"pub fn features(&Self) -> Features","parent":null,"children":[],"decl_id":null,"docs":" List all features that are supported with this adapter.","sig":null,"attributes":[{"value":"/ List all features that are supported with this adapter.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58265,"byte_end":58324,"line_start":1644,"line_end":1644,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58329,"byte_end":58332,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ Features must be explicitly requested in [`Adapter::request_device`] in order","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58337,"byte_end":58418,"line_start":1646,"line_end":1646,"column_start":5,"column_end":86}},{"value":"/ to use them.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58423,"byte_end":58439,"line_start":1647,"line_end":1647,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1263},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58764,"byte_end":58770,"line_start":1656,"line_end":1656,"column_start":12,"column_end":18},"name":"limits","qualname":"<Adapter>::limits","value":"pub fn limits(&Self) -> Limits","parent":null,"children":[],"decl_id":null,"docs":" List the \"best\" limits that are supported by this adapter.","sig":null,"attributes":[{"value":"/ List the \"best\" limits that are supported by this adapter.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58552,"byte_end":58614,"line_start":1652,"line_end":1652,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58619,"byte_end":58622,"line_start":1653,"line_end":1653,"column_start":5,"column_end":8}},{"value":"/ Limits must be explicitly requested in [`Adapter::request_device`] to set","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58627,"byte_end":58704,"line_start":1654,"line_end":1654,"column_start":5,"column_end":82}},{"value":"/ the values that you are allowed to use.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58709,"byte_end":58752,"line_start":1655,"line_end":1655,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58909,"byte_end":58917,"line_start":1661,"line_end":1661,"column_start":12,"column_end":20},"name":"get_info","qualname":"<Adapter>::get_info","value":"pub fn get_info(&Self) -> AdapterInfo","parent":null,"children":[],"decl_id":null,"docs":" Get info about the adapter itself.\n","sig":null,"attributes":[{"value":"/ Get info about the adapter itself.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":58859,"byte_end":58897,"line_start":1660,"line_end":1660,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59063,"byte_end":59087,"line_start":1666,"line_end":1666,"column_start":12,"column_end":36},"name":"get_downlevel_properties","qualname":"<Adapter>::get_downlevel_properties","value":"pub fn get_downlevel_properties(&Self) -> DownlevelCapabilities","parent":null,"children":[],"decl_id":null,"docs":" Get info about the adapter itself.\n","sig":null,"attributes":[{"value":"/ Get info about the adapter itself.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59013,"byte_end":59051,"line_start":1665,"line_end":1665,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1266},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59513,"byte_end":59540,"line_start":1674,"line_end":1674,"column_start":12,"column_end":39},"name":"get_texture_format_features","qualname":"<Adapter>::get_texture_format_features","value":"pub fn get_texture_format_features(&Self, TextureFormat)\n-> TextureFormatFeatures","parent":null,"children":[],"decl_id":null,"docs":" Returns the features supported for a given texture format by this adapter.","sig":null,"attributes":[{"value":"/ Returns the features supported for a given texture format by this adapter.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59205,"byte_end":59283,"line_start":1670,"line_end":1670,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59288,"byte_end":59291,"line_start":1671,"line_end":1671,"column_start":5,"column_end":8}},{"value":"/ Note that the WebGPU spec further restricts the available usages/features.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59296,"byte_end":59374,"line_start":1672,"line_end":1672,"column_start":5,"column_end":83}},{"value":"/ To disable these restrictions on a device, request the [`Features::TEXTURE_ADAPTER_SPECIFIC_FORMAT_FEATURES`] feature.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59379,"byte_end":59501,"line_start":1673,"line_end":1673,"column_start":5,"column_end":127}}]},{"kind":"Method","id":{"krate":0,"index":1268},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59844,"byte_end":59848,"line_start":1683,"line_end":1683,"column_start":12,"column_end":16},"name":"poll","qualname":"<Device>::poll","value":"pub fn poll(&Self, Maintain)","parent":null,"children":[],"decl_id":null,"docs":" Check for resource cleanups and mapping callbacks.","sig":null,"attributes":[{"value":"/ Check for resource cleanups and mapping callbacks.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59712,"byte_end":59766,"line_start":1680,"line_end":1680,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59771,"byte_end":59774,"line_start":1681,"line_end":1681,"column_start":5,"column_end":8}},{"value":"/ no-op on the web, device is automatically polled.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59779,"byte_end":59832,"line_start":1682,"line_end":1682,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1269},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":60092,"byte_end":60100,"line_start":1690,"line_end":1690,"column_start":12,"column_end":20},"name":"features","qualname":"<Device>::features","value":"pub fn features(&Self) -> Features","parent":null,"children":[],"decl_id":null,"docs":" List all features that may be used with this device.","sig":null,"attributes":[{"value":"/ List all features that may be used with this device.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59955,"byte_end":60011,"line_start":1687,"line_end":1687,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":60016,"byte_end":60019,"line_start":1688,"line_end":1688,"column_start":5,"column_end":8}},{"value":"/ Functions may panic if you use unsupported features.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":60024,"byte_end":60080,"line_start":1689,"line_end":1689,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1270},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":60333,"byte_end":60339,"line_start":1697,"line_end":1697,"column_start":12,"column_end":18},"name":"limits","qualname":"<Device>::limits","value":"pub fn limits(&Self) -> Limits","parent":null,"children":[],"decl_id":null,"docs":" List all limits that were requested of this device.","sig":null,"attributes":[{"value":"/ List all limits that were requested of this device.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":60192,"byte_end":60247,"line_start":1694,"line_end":1694,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":60252,"byte_end":60255,"line_start":1695,"line_end":1695,"column_start":5,"column_end":8}},{"value":"/ If any of these limits are exceeded, functions may panic.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":60260,"byte_end":60321,"line_start":1696,"line_end":1696,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1271},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":60506,"byte_end":60526,"line_start":1702,"line_end":1702,"column_start":12,"column_end":32},"name":"create_shader_module","qualname":"<Device>::create_shader_module","value":"pub fn create_shader_module(&Self, &ShaderModuleDescriptor) -> ShaderModule","parent":null,"children":[],"decl_id":null,"docs":" Creates a shader module from either SPIR-V or WGSL source code.\n","sig":null,"attributes":[{"value":"/ Creates a shader module from either SPIR-V or WGSL source code.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":60427,"byte_end":60494,"line_start":1701,"line_end":1701,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1272},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":61427,"byte_end":61457,"line_start":1724,"line_end":1724,"column_start":19,"column_end":49},"name":"create_shader_module_unchecked","qualname":"<Device>::create_shader_module_unchecked","value":"pub unsafe fn create_shader_module_unchecked(&Self, &ShaderModuleDescriptor)\n-> ShaderModule","parent":null,"children":[],"decl_id":null,"docs":" Creates a shader module from either SPIR-V or WGSL source code without runtime checks.","sig":null,"attributes":[{"value":"/ Creates a shader module from either SPIR-V or WGSL source code without runtime checks.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":60871,"byte_end":60961,"line_start":1714,"line_end":1714,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":60966,"byte_end":60969,"line_start":1715,"line_end":1715,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":60974,"byte_end":60986,"line_start":1716,"line_end":1716,"column_start":5,"column_end":17}},{"value":"/ In contrast with [`create_shader_module`](Self::create_shader_module) this function","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":60991,"byte_end":61078,"line_start":1717,"line_end":1717,"column_start":5,"column_end":92}},{"value":"/ creates a shader module without runtime checks which allows shaders to perform","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":61083,"byte_end":61165,"line_start":1718,"line_end":1718,"column_start":5,"column_end":87}},{"value":"/ operations which can lead to undefined behavior like indexing out of bounds, thus it's","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":61170,"byte_end":61260,"line_start":1719,"line_end":1719,"column_start":5,"column_end":95}},{"value":"/ the caller responsibility to pass a shader which doesn't perform any of this","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":61265,"byte_end":61345,"line_start":1720,"line_end":1720,"column_start":5,"column_end":85}},{"value":"/ operations.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":61350,"byte_end":61365,"line_start":1721,"line_end":1721,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":61370,"byte_end":61373,"line_start":1722,"line_end":1722,"column_start":5,"column_end":8}},{"value":"/ This has no effect on web.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":61378,"byte_end":61408,"line_start":1723,"line_end":1723,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1273},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":62208,"byte_end":62234,"line_start":1747,"line_end":1747,"column_start":19,"column_end":45},"name":"create_shader_module_spirv","qualname":"<Device>::create_shader_module_spirv","value":"pub unsafe fn create_shader_module_spirv(&Self, &ShaderModuleDescriptorSpirV)\n-> ShaderModule","parent":null,"children":[],"decl_id":null,"docs":" Creates a shader module from SPIR-V binary directly.","sig":null,"attributes":[{"value":"/ Creates a shader module from SPIR-V binary directly.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":61831,"byte_end":61887,"line_start":1739,"line_end":1739,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":61892,"byte_end":61895,"line_start":1740,"line_end":1740,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":61900,"byte_end":61912,"line_start":1741,"line_end":1741,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":61917,"byte_end":61920,"line_start":1742,"line_end":1742,"column_start":5,"column_end":8}},{"value":"/ This function passes binary data to the backend as-is and can potentially result in a","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":61925,"byte_end":62014,"line_start":1743,"line_end":1743,"column_start":5,"column_end":94}},{"value":"/ driver crash or bogus behaviour. No attempt is made to ensure that data is valid SPIR-V.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":62019,"byte_end":62111,"line_start":1744,"line_end":1744,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":62116,"byte_end":62119,"line_start":1745,"line_end":1745,"column_start":5,"column_end":8}},{"value":"/ See also [`include_spirv_raw!`] and [`util::make_spirv_raw`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":62124,"byte_end":62189,"line_start":1746,"line_end":1746,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":62555,"byte_end":62577,"line_start":1758,"line_end":1758,"column_start":12,"column_end":34},"name":"create_command_encoder","qualname":"<Device>::create_command_encoder","value":"pub fn create_command_encoder(&Self, &CommandEncoderDescriptor)\n-> CommandEncoder","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty [`CommandEncoder`].\n","sig":null,"attributes":[{"value":"/ Creates an empty [`CommandEncoder`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":62503,"byte_end":62543,"line_start":1757,"line_end":1757,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1275},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":62946,"byte_end":62974,"line_start":1770,"line_end":1770,"column_start":12,"column_end":40},"name":"create_render_bundle_encoder","qualname":"<Device>::create_render_bundle_encoder","value":"pub fn create_render_bundle_encoder(&Self, &RenderBundleEncoderDescriptor)\n-> RenderBundleEncoder","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty [`RenderBundleEncoder`].\n","sig":null,"attributes":[{"value":"/ Creates an empty [`RenderBundleEncoder`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":62889,"byte_end":62934,"line_start":1769,"line_end":1769,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1276},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":63368,"byte_end":63385,"line_start":1783,"line_end":1783,"column_start":12,"column_end":29},"name":"create_bind_group","qualname":"<Device>::create_bind_group","value":"pub fn create_bind_group(&Self, &BindGroupDescriptor) -> BindGroup","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`BindGroup`].\n","sig":null,"attributes":[{"value":"/ Creates a new [`BindGroup`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":63324,"byte_end":63356,"line_start":1782,"line_end":1782,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1277},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":63654,"byte_end":63678,"line_start":1791,"line_end":1791,"column_start":12,"column_end":36},"name":"create_bind_group_layout","qualname":"<Device>::create_bind_group_layout","value":"pub fn create_bind_group_layout(&Self, &BindGroupLayoutDescriptor)\n-> BindGroupLayout","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`BindGroupLayout`].\n","sig":null,"attributes":[{"value":"/ Creates a [`BindGroupLayout`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":63608,"byte_end":63642,"line_start":1790,"line_end":1790,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1278},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":63971,"byte_end":63993,"line_start":1799,"line_end":1799,"column_start":12,"column_end":34},"name":"create_pipeline_layout","qualname":"<Device>::create_pipeline_layout","value":"pub fn create_pipeline_layout(&Self, &PipelineLayoutDescriptor)\n-> PipelineLayout","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`PipelineLayout`].\n","sig":null,"attributes":[{"value":"/ Creates a [`PipelineLayout`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":63926,"byte_end":63959,"line_start":1798,"line_end":1798,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":64281,"byte_end":64303,"line_start":1807,"line_end":1807,"column_start":12,"column_end":34},"name":"create_render_pipeline","qualname":"<Device>::create_render_pipeline","value":"pub fn create_render_pipeline(&Self, &RenderPipelineDescriptor)\n-> RenderPipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`RenderPipeline`].\n","sig":null,"attributes":[{"value":"/ Creates a [`RenderPipeline`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":64236,"byte_end":64269,"line_start":1806,"line_end":1806,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1280},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":64592,"byte_end":64615,"line_start":1815,"line_end":1815,"column_start":12,"column_end":35},"name":"create_compute_pipeline","qualname":"<Device>::create_compute_pipeline","value":"pub fn create_compute_pipeline(&Self, &ComputePipelineDescriptor)\n-> ComputePipeline","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`ComputePipeline`].\n","sig":null,"attributes":[{"value":"/ Creates a [`ComputePipeline`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":64546,"byte_end":64580,"line_start":1814,"line_end":1814,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1281},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":64899,"byte_end":64912,"line_start":1823,"line_end":1823,"column_start":12,"column_end":25},"name":"create_buffer","qualname":"<Device>::create_buffer","value":"pub fn create_buffer(&Self, &BufferDescriptor) -> Buffer","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Buffer`].\n","sig":null,"attributes":[{"value":"/ Creates a [`Buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":64862,"byte_end":64887,"line_start":1822,"line_end":1822,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1282},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":65472,"byte_end":65486,"line_start":1839,"line_end":1839,"column_start":12,"column_end":26},"name":"create_texture","qualname":"<Device>::create_texture","value":"pub fn create_texture(&Self, &TextureDescriptor) -> Texture","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Texture`].","sig":null,"attributes":[{"value":"/ Creates a new [`Texture`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":65362,"byte_end":65392,"line_start":1836,"line_end":1836,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":65397,"byte_end":65400,"line_start":1837,"line_end":1837,"column_start":5,"column_end":8}},{"value":"/ `desc` specifies the general format of the texture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":65405,"byte_end":65460,"line_start":1838,"line_end":1838,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1283},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":66042,"byte_end":66065,"line_start":1855,"line_end":1855,"column_start":19,"column_end":42},"name":"create_texture_from_hal","qualname":"<Device>::create_texture_from_hal","value":"pub unsafe fn create_texture_from_hal<A: wgc::hub::HalApi>(&Self, A::Texture,\n&TextureDescriptor) -> Texture","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Texture`] from a wgpu-hal Texture.","sig":null,"attributes":[{"value":"/ Creates a [`Texture`] from a wgpu-hal Texture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":65725,"byte_end":65775,"line_start":1847,"line_end":1847,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":65780,"byte_end":65783,"line_start":1848,"line_end":1848,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":65788,"byte_end":65800,"line_start":1849,"line_end":1849,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":65805,"byte_end":65808,"line_start":1850,"line_end":1850,"column_start":5,"column_end":8}},{"value":"/ - `hal_texture` must be created from this device internal handle","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":65813,"byte_end":65881,"line_start":1851,"line_end":1851,"column_start":5,"column_end":73}},{"value":"/ - `hal_texture` must be created respecting `desc`","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":65886,"byte_end":65939,"line_start":1852,"line_end":1852,"column_start":5,"column_end":58}},{"value":"/ - `hal_texture` must be initialized","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":65944,"byte_end":65983,"line_start":1853,"line_end":1853,"column_start":5,"column_end":44}},{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":65988,"byte_end":66023,"line_start":1854,"line_end":1854,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1285},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":66527,"byte_end":66541,"line_start":1872,"line_end":1872,"column_start":12,"column_end":26},"name":"create_sampler","qualname":"<Device>::create_sampler","value":"pub fn create_sampler(&Self, &SamplerDescriptor) -> Sampler","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`Sampler`].","sig":null,"attributes":[{"value":"/ Creates a new [`Sampler`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":66423,"byte_end":66453,"line_start":1869,"line_end":1869,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":66458,"byte_end":66461,"line_start":1870,"line_end":1870,"column_start":5,"column_end":8}},{"value":"/ `desc` specifies the behavior of the sampler.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":66466,"byte_end":66515,"line_start":1871,"line_end":1871,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":66798,"byte_end":66814,"line_start":1880,"line_end":1880,"column_start":12,"column_end":28},"name":"create_query_set","qualname":"<Device>::create_query_set","value":"pub fn create_query_set(&Self, &QuerySetDescriptor) -> QuerySet","parent":null,"children":[],"decl_id":null,"docs":" Creates a new [`QuerySet`].\n","sig":null,"attributes":[{"value":"/ Creates a new [`QuerySet`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":66755,"byte_end":66786,"line_start":1879,"line_end":1879,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":67112,"byte_end":67131,"line_start":1888,"line_end":1888,"column_start":12,"column_end":31},"name":"on_uncaptured_error","qualname":"<Device>::on_uncaptured_error","value":"pub fn on_uncaptured_error<impl UncapturedErrorHandler: UncapturedErrorHandler>(&Self,\nimpl UncapturedErrorHandler)","parent":null,"children":[],"decl_id":null,"docs":" Set a callback for errors that are not handled in error scopes.\n","sig":null,"attributes":[{"value":"/ Set a callback for errors that are not handled in error scopes.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":67033,"byte_end":67100,"line_start":1887,"line_end":1887,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":67294,"byte_end":67310,"line_start":1893,"line_end":1893,"column_start":12,"column_end":28},"name":"push_error_scope","qualname":"<Device>::push_error_scope","value":"pub fn push_error_scope(&Self, ErrorFilter)","parent":null,"children":[],"decl_id":null,"docs":" Push an error scope.\n","sig":null,"attributes":[{"value":"/ Push an error scope.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":67258,"byte_end":67282,"line_start":1892,"line_end":1892,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":67451,"byte_end":67466,"line_start":1898,"line_end":1898,"column_start":12,"column_end":27},"name":"pop_error_scope","qualname":"<Device>::pop_error_scope","value":"pub fn pop_error_scope(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Pop an error scope.\n","sig":null,"attributes":[{"value":"/ Pop an error scope.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":67416,"byte_end":67439,"line_start":1897,"line_end":1897,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1292},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":67624,"byte_end":67637,"line_start":1903,"line_end":1903,"column_start":12,"column_end":25},"name":"start_capture","qualname":"<Device>::start_capture","value":"pub fn start_capture(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Starts frame capture.\n","sig":null,"attributes":[{"value":"/ Starts frame capture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":67587,"byte_end":67612,"line_start":1902,"line_end":1902,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":67758,"byte_end":67770,"line_start":1908,"line_end":1908,"column_start":12,"column_end":24},"name":"stop_capture","qualname":"<Device>::stop_capture","value":"pub fn stop_capture(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops frame capture.\n","sig":null,"attributes":[{"value":"/ Stops frame capture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":67722,"byte_end":67746,"line_start":1907,"line_end":1907,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1294},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68185,"byte_end":68191,"line_start":1919,"line_end":1919,"column_start":19,"column_end":25},"name":"as_hal","qualname":"<Device>::as_hal","value":"pub unsafe fn as_hal<A: wgc::hub::HalApi, F: FnOnce(Option<&A::Device>) -> R,\nR>(&Self, F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner hal Device using a callback. The hal device will be `None` if the\n backend type argument does not match with this wgpu Device","sig":null,"attributes":[{"value":"/ Returns the inner hal Device using a callback. The hal device will be `None` if the","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":67854,"byte_end":67941,"line_start":1912,"line_end":1912,"column_start":5,"column_end":92}},{"value":"/ backend type argument does not match with this wgpu Device","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":67946,"byte_end":68008,"line_start":1913,"line_end":1913,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68013,"byte_end":68016,"line_start":1914,"line_end":1914,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68021,"byte_end":68033,"line_start":1915,"line_end":1915,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68038,"byte_end":68041,"line_start":1916,"line_end":1916,"column_start":5,"column_end":8}},{"value":"/ - The raw handle obtained from the hal Device must not be manually destroyed","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68046,"byte_end":68126,"line_start":1917,"line_end":1917,"column_start":5,"column_end":85}},{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68131,"byte_end":68166,"line_start":1918,"line_end":1918,"column_start":5,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":2082},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68643,"byte_end":68661,"line_start":1938,"line_end":1938,"column_start":12,"column_end":30},"name":"RequestDeviceError","qualname":"::RequestDeviceError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Requesting a device failed.\n","sig":null,"attributes":[{"value":"/ Requesting a device failed.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68561,"byte_end":68592,"line_start":1936,"line_end":1936,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":2094},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68981,"byte_end":68997,"line_start":1950,"line_end":1950,"column_start":12,"column_end":28},"name":"BufferAsyncError","qualname":"::BufferAsyncError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error occurred when trying to async map a buffer.\n","sig":null,"attributes":[{"value":"/ Error occurred when trying to async map a buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68877,"byte_end":68930,"line_start":1948,"line_end":1948,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2107},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":69352,"byte_end":69356,"line_start":1964,"line_end":1964,"column_start":5,"column_end":9},"name":"Read","qualname":"::MapMode::Read","value":"MapMode::Read","parent":{"krate":0,"index":2106},"children":[],"decl_id":null,"docs":" Map only for reading\n","sig":null,"attributes":[{"value":"/ Map only for reading","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":69323,"byte_end":69347,"line_start":1963,"line_end":1963,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2109},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":69391,"byte_end":69396,"line_start":1966,"line_end":1966,"column_start":5,"column_end":10},"name":"Write","qualname":"::MapMode::Write","value":"MapMode::Write","parent":{"krate":0,"index":2106},"children":[],"decl_id":null,"docs":" Map only for writing\n","sig":null,"attributes":[{"value":"/ Map only for writing","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":69362,"byte_end":69386,"line_start":1965,"line_end":1965,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":2106},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":69309,"byte_end":69316,"line_start":1962,"line_end":1962,"column_start":10,"column_end":17},"name":"MapMode","qualname":"::MapMode","value":"pub enum MapMode { Read, Write, }","parent":null,"children":[{"krate":0,"index":2107},{"krate":0,"index":2109}],"decl_id":null,"docs":" Type of buffer mapping.\n","sig":null,"attributes":[{"value":"/ Type of buffer mapping.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":69231,"byte_end":69258,"line_start":1960,"line_end":1960,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2119},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":71002,"byte_end":71012,"line_start":2021,"line_end":2021,"column_start":12,"column_end":22},"name":"BufferView","qualname":"::BufferView","value":"BufferView {  }","parent":null,"children":[{"krate":0,"index":2121},{"krate":0,"index":2122}],"decl_id":null,"docs":" Read only view into a mapped buffer.\n","sig":null,"attributes":[{"value":"/ Read only view into a mapped buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":70933,"byte_end":70973,"line_start":2019,"line_end":2019,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":2126},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":71147,"byte_end":71160,"line_start":2028,"line_end":2028,"column_start":12,"column_end":25},"name":"BufferViewMut","qualname":"::BufferViewMut","value":"BufferViewMut {  }","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130}],"decl_id":null,"docs":" Write only view into mapped buffer.\n","sig":null,"attributes":[{"value":"/ Write only view into mapped buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":71079,"byte_end":71118,"line_start":2026,"line_end":2026,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1329},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":72532,"byte_end":72549,"line_start":2095,"line_end":2095,"column_start":12,"column_end":29},"name":"as_entire_binding","qualname":"<Buffer>::as_entire_binding","value":"pub fn as_entire_binding(&Self) -> BindingResource","parent":null,"children":[],"decl_id":null,"docs":" Return the binding view of the entire buffer.\n","sig":null,"attributes":[{"value":"/ Return the binding view of the entire buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":72471,"byte_end":72520,"line_start":2094,"line_end":2094,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1330},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":72715,"byte_end":72739,"line_start":2100,"line_end":2100,"column_start":12,"column_end":36},"name":"as_entire_buffer_binding","qualname":"<Buffer>::as_entire_buffer_binding","value":"pub fn as_entire_buffer_binding(&Self) -> BufferBinding","parent":null,"children":[],"decl_id":null,"docs":" Return the binding view of the entire buffer.\n","sig":null,"attributes":[{"value":"/ Return the binding view of the entire buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":72654,"byte_end":72703,"line_start":2099,"line_end":2099,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1331},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":73086,"byte_end":73091,"line_start":2110,"line_end":2110,"column_start":12,"column_end":17},"name":"slice","qualname":"<Buffer>::slice","value":"pub fn slice<S: RangeBounds<BufferAddress>>(&Self, S) -> BufferSlice","parent":null,"children":[],"decl_id":null,"docs":" Use only a portion of this Buffer for a given operation. Choosing a range with no end\n will use the rest of the buffer. Using a totally unbounded range will use the entire buffer.\n","sig":null,"attributes":[{"value":"/ Use only a portion of this Buffer for a given operation. Choosing a range with no end","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":72884,"byte_end":72973,"line_start":2108,"line_end":2108,"column_start":5,"column_end":94}},{"value":"/ will use the rest of the buffer. Using a totally unbounded range will use the entire buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":72978,"byte_end":73074,"line_start":2109,"line_end":2109,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1333},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":73416,"byte_end":73421,"line_start":2120,"line_end":2120,"column_start":12,"column_end":17},"name":"unmap","qualname":"<Buffer>::unmap","value":"pub fn unmap(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flushes any pending write operations and unmaps the buffer from host memory.\n","sig":null,"attributes":[{"value":"/ Flushes any pending write operations and unmaps the buffer from host memory.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":73324,"byte_end":73404,"line_start":2119,"line_end":2119,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1334},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":73616,"byte_end":73623,"line_start":2126,"line_end":2126,"column_start":12,"column_end":19},"name":"destroy","qualname":"<Buffer>::destroy","value":"pub fn destroy(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the associated native resources as soon as possible.\n","sig":null,"attributes":[{"value":"/ Destroy the associated native resources as soon as possible.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":73540,"byte_end":73604,"line_start":2125,"line_end":2125,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":74292,"byte_end":74301,"line_start":2142,"line_end":2142,"column_start":12,"column_end":21},"name":"map_async","qualname":"<BufferSlice>::map_async","value":"pub fn map_async(&Self, MapMode) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Map the buffer. Buffer is ready to map once the future is resolved.","sig":null,"attributes":[{"value":"/ Map the buffer. Buffer is ready to map once the future is resolved.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":73769,"byte_end":73840,"line_start":2134,"line_end":2134,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":73845,"byte_end":73848,"line_start":2135,"line_end":2135,"column_start":5,"column_end":8}},{"value":"/ For the future to complete, `device.poll(...)` must be called elsewhere in the runtime, possibly integrated","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":73853,"byte_end":73964,"line_start":2136,"line_end":2136,"column_start":5,"column_end":116}},{"value":"/ into an event loop, run on a separate thread, or continually polled in the same task runtime that this","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":73969,"byte_end":74075,"line_start":2137,"line_end":2137,"column_start":5,"column_end":111}},{"value":"/ future will be run on.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":74080,"byte_end":74106,"line_start":2138,"line_end":2138,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":74111,"byte_end":74114,"line_start":2139,"line_end":2139,"column_start":5,"column_end":8}},{"value":"/ It's expected that wgpu will eventually supply its own event loop infrastructure that will be easy to integrate","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":74119,"byte_end":74234,"line_start":2140,"line_end":2140,"column_start":5,"column_end":120}},{"value":"/ into other event loops, like winit's.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":74239,"byte_end":74280,"line_start":2141,"line_end":2141,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":75169,"byte_end":75185,"line_start":2169,"line_end":2169,"column_start":12,"column_end":28},"name":"get_mapped_range","qualname":"<BufferSlice>::get_mapped_range","value":"pub fn get_mapped_range(&Self) -> BufferView","parent":null,"children":[],"decl_id":null,"docs":" Synchronously and immediately map a buffer for reading. If the buffer is not immediately mappable\n through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.\n","sig":null,"attributes":[{"value":"/ Synchronously and immediately map a buffer for reading. If the buffer is not immediately mappable","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":74956,"byte_end":75057,"line_start":2167,"line_end":2167,"column_start":5,"column_end":106}},{"value":"/ through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":75062,"byte_end":75157,"line_start":2168,"line_end":2168,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":75715,"byte_end":75735,"line_start":2181,"line_end":2181,"column_start":12,"column_end":32},"name":"get_mapped_range_mut","qualname":"<BufferSlice>::get_mapped_range_mut","value":"pub fn get_mapped_range_mut(&Self) -> BufferViewMut","parent":null,"children":[],"decl_id":null,"docs":" Synchronously and immediately map a buffer for writing. If the buffer is not immediately mappable\n through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.\n","sig":null,"attributes":[{"value":"/ Synchronously and immediately map a buffer for writing. If the buffer is not immediately mappable","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":75502,"byte_end":75603,"line_start":2179,"line_end":2179,"column_start":5,"column_end":106}},{"value":"/ through [`BufferDescriptor::mapped_at_creation`] or [`BufferSlice::map_async`], will panic.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":75608,"byte_end":75703,"line_start":2180,"line_end":2180,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76666,"byte_end":76672,"line_start":2212,"line_end":2212,"column_start":19,"column_end":25},"name":"as_hal","qualname":"<Texture>::as_hal","value":"pub unsafe fn as_hal<A: wgc::hub::HalApi, F: FnOnce(Option<&A::Texture>) ->\n()>(&Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Returns the inner hal Texture using a callback. The hal texture will be `None` if the\n backend type argument does not match with this wgpu Texture","sig":null,"attributes":[{"value":"/ Returns the inner hal Texture using a callback. The hal texture will be `None` if the","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76331,"byte_end":76420,"line_start":2205,"line_end":2205,"column_start":5,"column_end":94}},{"value":"/ backend type argument does not match with this wgpu Texture","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76425,"byte_end":76488,"line_start":2206,"line_end":2206,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76493,"byte_end":76496,"line_start":2207,"line_end":2207,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76501,"byte_end":76513,"line_start":2208,"line_end":2208,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76518,"byte_end":76521,"line_start":2209,"line_end":2209,"column_start":5,"column_end":8}},{"value":"/ - The raw handle obtained from the hal Texture must not be manually destroyed","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76526,"byte_end":76607,"line_start":2210,"line_end":2210,"column_start":5,"column_end":86}},{"value":"cfg(not(target_arch = \"wasm32\"))","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76612,"byte_end":76647,"line_start":2211,"line_end":2211,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76930,"byte_end":76941,"line_start":2221,"line_end":2221,"column_start":12,"column_end":23},"name":"create_view","qualname":"<Texture>::create_view","value":"pub fn create_view(&Self, &TextureViewDescriptor) -> TextureView","parent":null,"children":[],"decl_id":null,"docs":" Creates a view of this texture.\n","sig":null,"attributes":[{"value":"/ Creates a view of this texture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76883,"byte_end":76918,"line_start":2220,"line_end":2220,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1348},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":77241,"byte_end":77248,"line_start":2229,"line_end":2229,"column_start":12,"column_end":19},"name":"destroy","qualname":"<Texture>::destroy","value":"pub fn destroy(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Destroy the associated native resources as soon as possible.\n","sig":null,"attributes":[{"value":"/ Destroy the associated native resources as soon as possible.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":77165,"byte_end":77229,"line_start":2228,"line_end":2228,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1349},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":77403,"byte_end":77416,"line_start":2234,"line_end":2234,"column_start":12,"column_end":25},"name":"as_image_copy","qualname":"<Texture>::as_image_copy","value":"pub fn as_image_copy(&Self) -> ImageCopyTexture","parent":null,"children":[],"decl_id":null,"docs":" Make an `ImageCopyTexture` representing the whole texture.\n","sig":null,"attributes":[{"value":"/ Make an `ImageCopyTexture` representing the whole texture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":77329,"byte_end":77391,"line_start":2233,"line_end":2233,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":78075,"byte_end":78081,"line_start":2262,"line_end":2262,"column_start":12,"column_end":18},"name":"finish","qualname":"<CommandEncoder>::finish","value":"pub fn finish(Self) -> CommandBuffer","parent":null,"children":[],"decl_id":null,"docs":" Finishes recording and returns a [`CommandBuffer`] that can be submitted for execution.\n","sig":null,"attributes":[{"value":"/ Finishes recording and returns a [`CommandBuffer`] that can be submitted for execution.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":77972,"byte_end":78063,"line_start":2261,"line_end":2261,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":78495,"byte_end":78512,"line_start":2275,"line_end":2275,"column_start":12,"column_end":29},"name":"begin_render_pass","qualname":"<CommandEncoder>::begin_render_pass","value":"pub fn begin_render_pass<'a>(&'a mut Self, &RenderPassDescriptor)\n-> RenderPass","parent":null,"children":[],"decl_id":null,"docs":" Begins recording of a render pass.","sig":null,"attributes":[{"value":"/ Begins recording of a render pass.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":78347,"byte_end":78385,"line_start":2272,"line_end":2272,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":78390,"byte_end":78393,"line_start":2273,"line_end":2273,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`RenderPass`] object which records a single render pass.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":78398,"byte_end":78483,"line_start":2274,"line_end":2274,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":78960,"byte_end":78978,"line_start":2289,"line_end":2289,"column_start":12,"column_end":30},"name":"begin_compute_pass","qualname":"<CommandEncoder>::begin_compute_pass","value":"pub fn begin_compute_pass(&mut Self, &ComputePassDescriptor) -> ComputePass","parent":null,"children":[],"decl_id":null,"docs":" Begins recording of a compute pass.","sig":null,"attributes":[{"value":"/ Begins recording of a compute pass.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":78809,"byte_end":78848,"line_start":2286,"line_end":2286,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":78853,"byte_end":78856,"line_start":2287,"line_end":2287,"column_start":5,"column_end":8}},{"value":"/ This function returns a [`ComputePass`] object which records a single compute pass.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":78861,"byte_end":78948,"line_start":2288,"line_end":2288,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":79482,"byte_end":79503,"line_start":2304,"line_end":2304,"column_start":12,"column_end":33},"name":"copy_buffer_to_buffer","qualname":"<CommandEncoder>::copy_buffer_to_buffer","value":"pub fn copy_buffer_to_buffer(&mut Self, &Buffer, BufferAddress, &Buffer,\nBufferAddress, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from one buffer to another.","sig":null,"attributes":[{"value":"/ Copy data from one buffer to another.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":79237,"byte_end":79278,"line_start":2297,"line_end":2297,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":79283,"byte_end":79286,"line_start":2298,"line_end":2298,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":79291,"byte_end":79303,"line_start":2299,"line_end":2299,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":79308,"byte_end":79311,"line_start":2300,"line_end":2300,"column_start":5,"column_end":8}},{"value":"/ - Buffer offsets or copy size not a multiple of [`COPY_BUFFER_ALIGNMENT`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":79316,"byte_end":79394,"line_start":2301,"line_end":2301,"column_start":5,"column_end":83}},{"value":"/ - Copy would overrun buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":79399,"byte_end":79431,"line_start":2302,"line_end":2302,"column_start":5,"column_end":37}},{"value":"/ - Copy within the same buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":79436,"byte_end":79470,"line_start":2303,"line_end":2303,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80236,"byte_end":80258,"line_start":2330,"line_end":2330,"column_start":12,"column_end":34},"name":"copy_buffer_to_texture","qualname":"<CommandEncoder>::copy_buffer_to_texture","value":"pub fn copy_buffer_to_texture(&mut Self, ImageCopyBuffer, ImageCopyTexture,\nExtent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from a buffer to a texture.","sig":null,"attributes":[{"value":"/ Copy data from a buffer to a texture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":79982,"byte_end":80023,"line_start":2323,"line_end":2323,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80028,"byte_end":80031,"line_start":2324,"line_end":2324,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80036,"byte_end":80048,"line_start":2325,"line_end":2325,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80053,"byte_end":80056,"line_start":2326,"line_end":2326,"column_start":5,"column_end":8}},{"value":"/ - Copy would overrun buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80061,"byte_end":80093,"line_start":2327,"line_end":2327,"column_start":5,"column_end":37}},{"value":"/ - Copy would overrun texture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80098,"byte_end":80131,"line_start":2328,"line_end":2328,"column_start":5,"column_end":38}},{"value":"/ - `source.layout.bytes_per_row` isn't divisible by [`COPY_BYTES_PER_ROW_ALIGNMENT`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80136,"byte_end":80224,"line_start":2329,"line_end":2329,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80856,"byte_end":80878,"line_start":2352,"line_end":2352,"column_start":12,"column_end":34},"name":"copy_texture_to_buffer","qualname":"<CommandEncoder>::copy_texture_to_buffer","value":"pub fn copy_texture_to_buffer(&mut Self, ImageCopyTexture, ImageCopyBuffer,\nExtent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from a texture to a buffer.","sig":null,"attributes":[{"value":"/ Copy data from a texture to a buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80602,"byte_end":80643,"line_start":2345,"line_end":2345,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80648,"byte_end":80651,"line_start":2346,"line_end":2346,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80656,"byte_end":80668,"line_start":2347,"line_end":2347,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80673,"byte_end":80676,"line_start":2348,"line_end":2348,"column_start":5,"column_end":8}},{"value":"/ - Copy would overrun buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80681,"byte_end":80713,"line_start":2349,"line_end":2349,"column_start":5,"column_end":37}},{"value":"/ - Copy would overrun texture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80718,"byte_end":80751,"line_start":2350,"line_end":2350,"column_start":5,"column_end":38}},{"value":"/ - `source.layout.bytes_per_row` isn't divisible by [`COPY_BYTES_PER_ROW_ALIGNMENT`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":80756,"byte_end":80844,"line_start":2351,"line_end":2351,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":81485,"byte_end":81508,"line_start":2374,"line_end":2374,"column_start":12,"column_end":35},"name":"copy_texture_to_texture","qualname":"<CommandEncoder>::copy_texture_to_texture","value":"pub fn copy_texture_to_texture(&mut Self, ImageCopyTexture, ImageCopyTexture,\nExtent3d)","parent":null,"children":[],"decl_id":null,"docs":" Copy data from one texture to another.","sig":null,"attributes":[{"value":"/ Copy data from one texture to another.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":81222,"byte_end":81264,"line_start":2367,"line_end":2367,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":81269,"byte_end":81272,"line_start":2368,"line_end":2368,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":81277,"byte_end":81289,"line_start":2369,"line_end":2369,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":81294,"byte_end":81297,"line_start":2370,"line_end":2370,"column_start":5,"column_end":8}},{"value":"/ - Textures are not the same type","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":81302,"byte_end":81338,"line_start":2371,"line_end":2371,"column_start":5,"column_end":41}},{"value":"/ - If a depth texture, or a multisampled texture, the entire texture must be copied","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":81343,"byte_end":81429,"line_start":2372,"line_end":2372,"column_start":5,"column_end":91}},{"value":"/ - Copy would overrun either texture","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":81434,"byte_end":81473,"line_start":2373,"line_end":2373,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82165,"byte_end":82178,"line_start":2398,"line_end":2398,"column_start":12,"column_end":25},"name":"clear_texture","qualname":"<CommandEncoder>::clear_texture","value":"pub fn clear_texture(&mut Self, &Texture, &ImageSubresourceRange)","parent":null,"children":[],"decl_id":null,"docs":" Clears texture to zero.","sig":null,"attributes":[{"value":"/ Clears texture to zero.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":81854,"byte_end":81881,"line_start":2389,"line_end":2389,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":81886,"byte_end":81889,"line_start":2390,"line_end":2390,"column_start":5,"column_end":8}},{"value":"/ Where possible it may be significantly more efficient to perform clears via render passes!","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":81894,"byte_end":81988,"line_start":2391,"line_end":2391,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":81993,"byte_end":81996,"line_start":2392,"line_end":2392,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82001,"byte_end":82013,"line_start":2393,"line_end":2393,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82018,"byte_end":82021,"line_start":2394,"line_end":2394,"column_start":5,"column_end":8}},{"value":"/ - `CLEAR_COMMANDS` extension not enabled","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82026,"byte_end":82070,"line_start":2395,"line_end":2395,"column_start":5,"column_end":49}},{"value":"/ - Texture does not have `COPY_DST` usage.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82075,"byte_end":82120,"line_start":2396,"line_end":2396,"column_start":5,"column_end":50}},{"value":"/ - Range is out of bounds","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82125,"byte_end":82153,"line_start":2397,"line_end":2397,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82596,"byte_end":82608,"line_start":2413,"line_end":2413,"column_start":12,"column_end":24},"name":"clear_buffer","qualname":"<CommandEncoder>::clear_buffer","value":"pub fn clear_buffer(&mut Self, &Buffer, BufferAddress, Option<BufferSize>)","parent":null,"children":[],"decl_id":null,"docs":" Clears buffer to zero.","sig":null,"attributes":[{"value":"/ Clears buffer to zero.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82443,"byte_end":82469,"line_start":2407,"line_end":2407,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82474,"byte_end":82477,"line_start":2408,"line_end":2408,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82482,"byte_end":82494,"line_start":2409,"line_end":2409,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82499,"byte_end":82502,"line_start":2410,"line_end":2410,"column_start":5,"column_end":8}},{"value":"/ - Buffer does not have `COPY_DST` usage.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82507,"byte_end":82551,"line_start":2411,"line_end":2411,"column_start":5,"column_end":49}},{"value":"/ - Range it out of bounds","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82556,"byte_end":82584,"line_start":2412,"line_end":2412,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82958,"byte_end":82977,"line_start":2429,"line_end":2429,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<CommandEncoder>::insert_debug_marker","value":"pub fn insert_debug_marker(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":82921,"byte_end":82946,"line_start":2428,"line_end":2428,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1366},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":83215,"byte_end":83231,"line_start":2435,"line_end":2435,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<CommandEncoder>::push_debug_group","value":"pub fn push_debug_group(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":83140,"byte_end":83203,"line_start":2434,"line_end":2434,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1367},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":83455,"byte_end":83470,"line_start":2441,"line_end":2441,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<CommandEncoder>::pop_debug_group","value":"pub fn pop_debug_group(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":83391,"byte_end":83443,"line_start":2440,"line_end":2440,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":84148,"byte_end":84163,"line_start":2456,"line_end":2456,"column_start":12,"column_end":27},"name":"write_timestamp","qualname":"<CommandEncoder>::write_timestamp","value":"pub fn write_timestamp(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Issue a timestamp command at this point in the queue.\n The timestamp will be written to the specified query set, at the specified index.","sig":null,"attributes":[{"value":"/ Issue a timestamp command at this point in the queue.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":83731,"byte_end":83788,"line_start":2449,"line_end":2449,"column_start":5,"column_end":62}},{"value":"/ The timestamp will be written to the specified query set, at the specified index.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":83793,"byte_end":83878,"line_start":2450,"line_end":2450,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":83883,"byte_end":83886,"line_start":2451,"line_end":2451,"column_start":5,"column_end":8}},{"value":"/ Must be multiplied by [`Queue::get_timestamp_period`] to get","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":83891,"byte_end":83955,"line_start":2452,"line_end":2452,"column_start":5,"column_end":69}},{"value":"/ the value in nanoseconds. Absolute values have no meaning,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":83960,"byte_end":84022,"line_start":2453,"line_end":2453,"column_start":5,"column_end":67}},{"value":"/ but timestamps can be subtracted to get the time it takes","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":84027,"byte_end":84088,"line_start":2454,"line_end":2454,"column_start":5,"column_end":66}},{"value":"/ for a string of operations to complete.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":84093,"byte_end":84136,"line_start":2455,"line_end":2455,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":84780,"byte_end":84797,"line_start":2471,"line_end":2471,"column_start":12,"column_end":29},"name":"resolve_query_set","qualname":"<CommandEncoder>::resolve_query_set","value":"pub fn resolve_query_set(&mut Self, &QuerySet, Range<u32>, &Buffer,\nBufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Resolve a query set, writing the results into the supplied destination buffer.","sig":null,"attributes":[{"value":"/ Resolve a query set, writing the results into the supplied destination buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":84572,"byte_end":84654,"line_start":2468,"line_end":2468,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":84659,"byte_end":84662,"line_start":2469,"line_end":2469,"column_start":5,"column_end":8}},{"value":"/ Queries may be between 8 and 40 bytes each. See [`PipelineStatisticsTypes`] for more information.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":84667,"byte_end":84768,"line_start":2470,"line_end":2470,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":85755,"byte_end":85769,"line_start":2497,"line_end":2497,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<RenderPass>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when any `draw()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":85298,"byte_end":85380,"line_start":2491,"line_end":2491,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when any `draw()` function is called must match the layout of this bind group.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":85385,"byte_end":85490,"line_start":2492,"line_end":2492,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":85495,"byte_end":85498,"line_start":2493,"line_end":2493,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in binding order.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":85503,"byte_end":85577,"line_start":2494,"line_end":2494,"column_start":5,"column_end":79}},{"value":"/ These offsets have to be aligned to [`Limits::min_uniform_buffer_offset_alignment`]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":85582,"byte_end":85669,"line_start":2495,"line_end":2495,"column_start":5,"column_end":92}},{"value":"/ or [`Limits::min_storage_buffer_offset_alignment`] appropriately.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":85674,"byte_end":85743,"line_start":2496,"line_end":2496,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":86116,"byte_end":86128,"line_start":2509,"line_end":2509,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<RenderPass>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a RenderPipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active render pipeline.","sig":null,"attributes":[{"value":"/ Sets the active render pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":85981,"byte_end":86017,"line_start":2506,"line_end":2506,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":86022,"byte_end":86025,"line_start":2507,"line_end":2507,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will exhibit the behavior defined by `pipeline`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":86030,"byte_end":86104,"line_start":2508,"line_end":2508,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":86392,"byte_end":86410,"line_start":2516,"line_end":2516,"column_start":12,"column_end":30},"name":"set_blend_constant","qualname":"<RenderPass>::set_blend_constant","value":"pub fn set_blend_constant(&mut Self, Color)","parent":null,"children":[],"decl_id":null,"docs":" Sets the blend color as used by some of the blending modes.","sig":null,"attributes":[{"value":"/ Sets the blend color as used by some of the blending modes.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":86245,"byte_end":86308,"line_start":2513,"line_end":2513,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":86313,"byte_end":86316,"line_start":2514,"line_end":2514,"column_start":5,"column_end":8}},{"value":"/ Subsequent blending tests will test against this value.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":86321,"byte_end":86380,"line_start":2515,"line_end":2515,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":86692,"byte_end":86708,"line_start":2524,"line_end":2524,"column_start":12,"column_end":28},"name":"set_index_buffer","qualname":"<RenderPass>::set_index_buffer","value":"pub fn set_index_buffer(&mut Self, BufferSlice, IndexFormat)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active index buffer.","sig":null,"attributes":[{"value":"/ Sets the active index buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":86491,"byte_end":86524,"line_start":2520,"line_end":2520,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":86529,"byte_end":86532,"line_start":2521,"line_end":2521,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw_indexed`](RenderPass::draw_indexed) on this [`RenderPass`] will","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":86537,"byte_end":86631,"line_start":2522,"line_end":2522,"column_start":5,"column_end":99}},{"value":"/ use `buffer` as the source index buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":86636,"byte_end":86680,"line_start":2523,"line_end":2523,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87399,"byte_end":87416,"line_start":2544,"line_end":2544,"column_start":12,"column_end":29},"name":"set_vertex_buffer","qualname":"<RenderPass>::set_vertex_buffer","value":"pub fn set_vertex_buffer(&mut Self, u32, BufferSlice)","parent":null,"children":[],"decl_id":null,"docs":" Assign a vertex buffer to a slot.","sig":null,"attributes":[{"value":"/ Assign a vertex buffer to a slot.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":86993,"byte_end":87030,"line_start":2534,"line_end":2534,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87035,"byte_end":87038,"line_start":2535,"line_end":2535,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw`] and [`draw_indexed`] on this","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87043,"byte_end":87104,"line_start":2536,"line_end":2536,"column_start":5,"column_end":66}},{"value":"/ [`RenderPass`] will use `buffer` as one of the source vertex buffers.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87109,"byte_end":87182,"line_start":2537,"line_end":2537,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87187,"byte_end":87190,"line_start":2538,"line_end":2538,"column_start":5,"column_end":8}},{"value":"/ The `slot` refers to the index of the matching descriptor in","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87195,"byte_end":87259,"line_start":2539,"line_end":2539,"column_start":5,"column_end":69}},{"value":"/ [`VertexState::buffers`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87264,"byte_end":87293,"line_start":2540,"line_end":2540,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87298,"byte_end":87301,"line_start":2541,"line_end":2541,"column_start":5,"column_end":8}},{"value":"/ [`draw`]: RenderPass::draw","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87306,"byte_end":87336,"line_start":2542,"line_end":2542,"column_start":5,"column_end":35}},{"value":"/ [`draw_indexed`]: RenderPass::draw_indexed","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87341,"byte_end":87387,"line_start":2543,"line_end":2543,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87814,"byte_end":87830,"line_start":2557,"line_end":2557,"column_start":12,"column_end":28},"name":"set_scissor_rect","qualname":"<RenderPass>::set_scissor_rect","value":"pub fn set_scissor_rect(&mut Self, u32, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the scissor region.","sig":null,"attributes":[{"value":"/ Sets the scissor region.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87678,"byte_end":87706,"line_start":2554,"line_end":2554,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87711,"byte_end":87714,"line_start":2555,"line_end":2555,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will discard any fragments that fall outside this region.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87719,"byte_end":87802,"line_start":2556,"line_end":2556,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1380},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":88070,"byte_end":88082,"line_start":2564,"line_end":2564,"column_start":12,"column_end":24},"name":"set_viewport","qualname":"<RenderPass>::set_viewport","value":"pub fn set_viewport(&mut Self, f32, f32, f32, f32, f32, f32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the viewport region.","sig":null,"attributes":[{"value":"/ Sets the viewport region.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87951,"byte_end":87980,"line_start":2561,"line_end":2561,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87985,"byte_end":87988,"line_start":2562,"line_end":2562,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will draw any fragments in this region.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":87993,"byte_end":88058,"line_start":2563,"line_end":2563,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":88349,"byte_end":88370,"line_start":2571,"line_end":2571,"column_start":12,"column_end":33},"name":"set_stencil_reference","qualname":"<RenderPass>::set_stencil_reference","value":"pub fn set_stencil_reference(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the stencil reference.","sig":null,"attributes":[{"value":"/ Sets the stencil reference.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":88235,"byte_end":88266,"line_start":2568,"line_end":2568,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":88271,"byte_end":88274,"line_start":2569,"line_end":2569,"column_start":5,"column_end":8}},{"value":"/ Subsequent stencil tests will test against this value.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":88279,"byte_end":88337,"line_start":2570,"line_end":2570,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1382},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":88620,"byte_end":88624,"line_start":2578,"line_end":2578,"column_start":12,"column_end":16},"name":"draw","qualname":"<RenderPass>::draw","value":"pub fn draw(&mut Self, Range<u32>, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s).","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s).","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":88461,"byte_end":88515,"line_start":2575,"line_end":2575,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":88520,"byte_end":88523,"line_start":2576,"line_end":2576,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":88528,"byte_end":88608,"line_start":2577,"line_end":2577,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":88792,"byte_end":88811,"line_start":2583,"line_end":2583,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<RenderPass>::insert_debug_marker","value":"pub fn insert_debug_marker(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":88755,"byte_end":88780,"line_start":2582,"line_end":2582,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":88968,"byte_end":88984,"line_start":2588,"line_end":2588,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<RenderPass>::push_debug_group","value":"pub fn push_debug_group(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":88893,"byte_end":88956,"line_start":2587,"line_end":2587,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1385},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89127,"byte_end":89142,"line_start":2593,"line_end":2593,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<RenderPass>::pop_debug_group","value":"pub fn pop_debug_group(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89063,"byte_end":89115,"line_start":2592,"line_end":2592,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1386},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89484,"byte_end":89496,"line_start":2601,"line_end":2601,"column_start":12,"column_end":24},"name":"draw_indexed","qualname":"<RenderPass>::draw_indexed","value":"pub fn draw_indexed(&mut Self, Range<u32>, i32, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89202,"byte_end":89291,"line_start":2597,"line_end":2597,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89296,"byte_end":89299,"line_start":2598,"line_end":2598,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89304,"byte_end":89398,"line_start":2599,"line_end":2599,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89403,"byte_end":89472,"line_start":2600,"line_end":2600,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1387},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90420,"byte_end":90433,"line_start":2621,"line_end":2621,"column_start":12,"column_end":25},"name":"draw_indirect","qualname":"<RenderPass>::draw_indirect","value":"pub fn draw_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89665,"byte_end":89766,"line_start":2605,"line_end":2605,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89771,"byte_end":89774,"line_start":2606,"line_end":2606,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89779,"byte_end":89859,"line_start":2607,"line_end":2607,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89864,"byte_end":89867,"line_start":2608,"line_end":2608,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89872,"byte_end":89937,"line_start":2609,"line_end":2609,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89942,"byte_end":89945,"line_start":2610,"line_end":2610,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89950,"byte_end":89961,"line_start":2611,"line_end":2611,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89966,"byte_end":89980,"line_start":2612,"line_end":2612,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":89985,"byte_end":90010,"line_start":2613,"line_end":2613,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90015,"byte_end":90076,"line_start":2614,"line_end":2614,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90081,"byte_end":90145,"line_start":2615,"line_end":2615,"column_start":5,"column_end":69}},{"value":"/     first_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90150,"byte_end":90218,"line_start":2616,"line_end":2616,"column_start":5,"column_end":73}},{"value":"/     first_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90223,"byte_end":90301,"line_start":2617,"line_end":2617,"column_start":5,"column_end":83}},{"value":"/     // has to be 0, unless [`Features::INDIRECT_FIRST_INSTANCE`] is enabled.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90306,"byte_end":90386,"line_start":2618,"line_end":2618,"column_start":5,"column_end":85}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90391,"byte_end":90396,"line_start":2619,"line_end":2619,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90401,"byte_end":90408,"line_start":2620,"line_end":2620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1388},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91593,"byte_end":91614,"line_start":2644,"line_end":2644,"column_start":12,"column_end":33},"name":"draw_indexed_indirect","qualname":"<RenderPass>::draw_indexed_indirect","value":"pub fn draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90588,"byte_end":90677,"line_start":2625,"line_end":2625,"column_start":5,"column_end":94}},{"value":"/ based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90682,"byte_end":90733,"line_start":2626,"line_end":2626,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90738,"byte_end":90741,"line_start":2627,"line_end":2627,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90746,"byte_end":90840,"line_start":2628,"line_end":2628,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90845,"byte_end":90914,"line_start":2629,"line_end":2629,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90919,"byte_end":90922,"line_start":2630,"line_end":2630,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90927,"byte_end":90992,"line_start":2631,"line_end":2631,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":90997,"byte_end":91000,"line_start":2632,"line_end":2632,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91005,"byte_end":91016,"line_start":2633,"line_end":2633,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91021,"byte_end":91035,"line_start":2634,"line_end":2634,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91040,"byte_end":91072,"line_start":2635,"line_end":2635,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91077,"byte_end":91138,"line_start":2636,"line_end":2636,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91143,"byte_end":91207,"line_start":2637,"line_end":2637,"column_start":5,"column_end":69}},{"value":"/     first_index: u32, // The base index within the index buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91212,"byte_end":91280,"line_start":2638,"line_end":2638,"column_start":5,"column_end":73}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91285,"byte_end":91391,"line_start":2639,"line_end":2639,"column_start":5,"column_end":111}},{"value":"/     first_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91396,"byte_end":91474,"line_start":2640,"line_end":2640,"column_start":5,"column_end":83}},{"value":"/     // has to be 0, unless [`Features::INDIRECT_FIRST_INSTANCE`] is enabled.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91479,"byte_end":91559,"line_start":2641,"line_end":2641,"column_start":5,"column_end":85}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91564,"byte_end":91569,"line_start":2642,"line_end":2642,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91574,"byte_end":91581,"line_start":2643,"line_end":2643,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91951,"byte_end":91966,"line_start":2655,"line_end":2655,"column_start":12,"column_end":27},"name":"execute_bundles","qualname":"<RenderPass>::execute_bundles","value":"pub fn execute_bundles<I: Iterator<Item = &'a RenderBundle>>(&mut Self, I)","parent":null,"children":[],"decl_id":null,"docs":" Execute a [render bundle][RenderBundle], which is a set of pre-recorded commands\n that can be run together.\n","sig":null,"attributes":[{"value":"/ Execute a [render bundle][RenderBundle], which is a set of pre-recorded commands","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91821,"byte_end":91905,"line_start":2653,"line_end":2653,"column_start":5,"column_end":89}},{"value":"/ that can be run together.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":91910,"byte_end":91939,"line_start":2654,"line_end":2654,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":1394},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93062,"byte_end":93081,"line_start":2681,"line_end":2681,"column_start":12,"column_end":31},"name":"multi_draw_indirect","qualname":"<RenderPass>::multi_draw_indirect","value":"pub fn multi_draw_indirect(&mut Self, &'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.\n `count` draw calls are issued.","sig":null,"attributes":[{"value":"/ Dispatches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92268,"byte_end":92383,"line_start":2663,"line_end":2663,"column_start":5,"column_end":120}},{"value":"/ `count` draw calls are issued.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92388,"byte_end":92422,"line_start":2664,"line_end":2664,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92427,"byte_end":92430,"line_start":2665,"line_end":2665,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92435,"byte_end":92515,"line_start":2666,"line_end":2666,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92520,"byte_end":92523,"line_start":2667,"line_end":2667,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92528,"byte_end":92593,"line_start":2668,"line_end":2668,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92598,"byte_end":92601,"line_start":2669,"line_end":2669,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92606,"byte_end":92617,"line_start":2670,"line_end":2670,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92622,"byte_end":92636,"line_start":2671,"line_end":2671,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92641,"byte_end":92666,"line_start":2672,"line_end":2672,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92671,"byte_end":92732,"line_start":2673,"line_end":2673,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92737,"byte_end":92801,"line_start":2674,"line_end":2674,"column_start":5,"column_end":69}},{"value":"/     base_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92806,"byte_end":92873,"line_start":2675,"line_end":2675,"column_start":5,"column_end":72}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92878,"byte_end":92955,"line_start":2676,"line_end":2676,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92960,"byte_end":92965,"line_start":2677,"line_end":2677,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92970,"byte_end":92977,"line_start":2678,"line_end":2678,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92982,"byte_end":92985,"line_start":2679,"line_end":2679,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92990,"byte_end":93050,"line_start":2680,"line_end":2680,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":94340,"byte_end":94367,"line_start":2711,"line_end":2711,"column_start":12,"column_end":39},"name":"multi_draw_indexed_indirect","qualname":"<RenderPass>::multi_draw_indexed_indirect","value":"pub fn multi_draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches multiple draw calls from the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`. `count` draw calls are issued.","sig":null,"attributes":[{"value":"/ Dispatches multiple draw calls from the active index buffer and the active vertex buffers,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93313,"byte_end":93407,"line_start":2691,"line_end":2691,"column_start":5,"column_end":99}},{"value":"/ based on the contents of the `indirect_buffer`. `count` draw calls are issued.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93412,"byte_end":93494,"line_start":2692,"line_end":2692,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93499,"byte_end":93502,"line_start":2693,"line_end":2693,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93507,"byte_end":93601,"line_start":2694,"line_end":2694,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93606,"byte_end":93675,"line_start":2695,"line_end":2695,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93680,"byte_end":93683,"line_start":2696,"line_end":2696,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93688,"byte_end":93753,"line_start":2697,"line_end":2697,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93758,"byte_end":93761,"line_start":2698,"line_end":2698,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93766,"byte_end":93777,"line_start":2699,"line_end":2699,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93782,"byte_end":93796,"line_start":2700,"line_end":2700,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93801,"byte_end":93833,"line_start":2701,"line_end":2701,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93838,"byte_end":93899,"line_start":2702,"line_end":2702,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93904,"byte_end":93968,"line_start":2703,"line_end":2703,"column_start":5,"column_end":69}},{"value":"/     base_index: u32, // The base index within the index buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":93973,"byte_end":94040,"line_start":2704,"line_end":2704,"column_start":5,"column_end":72}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":94045,"byte_end":94151,"line_start":2705,"line_end":2705,"column_start":5,"column_end":111}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":94156,"byte_end":94233,"line_start":2706,"line_end":2706,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":94238,"byte_end":94243,"line_start":2707,"line_end":2707,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":94248,"byte_end":94255,"line_start":2708,"line_end":2708,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":94260,"byte_end":94263,"line_start":2709,"line_end":2709,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":94268,"byte_end":94328,"line_start":2710,"line_end":2710,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":96012,"byte_end":96037,"line_start":2754,"line_end":2754,"column_start":12,"column_end":37},"name":"multi_draw_indirect_count","qualname":"<RenderPass>::multi_draw_indirect_count","value":"pub fn multi_draw_indirect_count(&mut Self, &'a Buffer, BufferAddress,\n&'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Disptaches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.\n The count buffer is read to determine how many draws to issue.","sig":null,"attributes":[{"value":"/ Disptaches multiple draw calls from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":94743,"byte_end":94858,"line_start":2724,"line_end":2724,"column_start":5,"column_end":120}},{"value":"/ The count buffer is read to determine how many draws to issue.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":94863,"byte_end":94929,"line_start":2725,"line_end":2725,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":94934,"byte_end":94937,"line_start":2726,"line_end":2726,"column_start":5,"column_end":8}},{"value":"/ The indirect buffer must be long enough to account for `max_count` draws, however only `count` will","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":94942,"byte_end":95045,"line_start":2727,"line_end":2727,"column_start":5,"column_end":108}},{"value":"/ draws will be read. If `count` is greater than `max_count`, `max_count` will be used.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95050,"byte_end":95139,"line_start":2728,"line_end":2728,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95144,"byte_end":95147,"line_start":2729,"line_end":2729,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95152,"byte_end":95232,"line_start":2730,"line_end":2730,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95237,"byte_end":95240,"line_start":2731,"line_end":2731,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95245,"byte_end":95310,"line_start":2732,"line_end":2732,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95315,"byte_end":95318,"line_start":2733,"line_end":2733,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95323,"byte_end":95334,"line_start":2734,"line_end":2734,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95339,"byte_end":95353,"line_start":2735,"line_end":2735,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95358,"byte_end":95383,"line_start":2736,"line_end":2736,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95388,"byte_end":95449,"line_start":2737,"line_end":2737,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95454,"byte_end":95518,"line_start":2738,"line_end":2738,"column_start":5,"column_end":69}},{"value":"/     base_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95523,"byte_end":95590,"line_start":2739,"line_end":2739,"column_start":5,"column_end":72}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95595,"byte_end":95672,"line_start":2740,"line_end":2740,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95677,"byte_end":95682,"line_start":2741,"line_end":2741,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95687,"byte_end":95694,"line_start":2742,"line_end":2742,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95699,"byte_end":95702,"line_start":2743,"line_end":2743,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95707,"byte_end":95767,"line_start":2744,"line_end":2744,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95772,"byte_end":95775,"line_start":2745,"line_end":2745,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `count_buffer` is the following:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95780,"byte_end":95842,"line_start":2746,"line_end":2746,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95847,"byte_end":95850,"line_start":2747,"line_end":2747,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95855,"byte_end":95866,"line_start":2748,"line_end":2748,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95871,"byte_end":95885,"line_start":2749,"line_end":2749,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirectCount {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95890,"byte_end":95920,"line_start":2750,"line_end":2750,"column_start":5,"column_end":35}},{"value":"/     count: u32, // Number of draw calls to issue.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95925,"byte_end":95978,"line_start":2751,"line_end":2751,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95983,"byte_end":95988,"line_start":2752,"line_end":2752,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":95993,"byte_end":96000,"line_start":2753,"line_end":2753,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1399},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97953,"byte_end":97986,"line_start":2803,"line_end":2803,"column_start":12,"column_end":45},"name":"multi_draw_indexed_indirect_count","qualname":"<RenderPass>::multi_draw_indexed_indirect_count","value":"pub fn multi_draw_indexed_indirect_count(&mut Self, &'a Buffer, BufferAddress,\n&'a Buffer, BufferAddress, u32)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches multiple draw calls from the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`. The count buffer is read to determine how many draws to issue.","sig":null,"attributes":[{"value":"/ Dispatches multiple draw calls from the active index buffer and the active vertex buffers,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":96444,"byte_end":96538,"line_start":2771,"line_end":2771,"column_start":5,"column_end":99}},{"value":"/ based on the contents of the `indirect_buffer`. The count buffer is read to determine how many draws to issue.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":96543,"byte_end":96657,"line_start":2772,"line_end":2772,"column_start":5,"column_end":119}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":96662,"byte_end":96665,"line_start":2773,"line_end":2773,"column_start":5,"column_end":8}},{"value":"/ The indirect buffer must be long enough to account for `max_count` draws, however only `count` will","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":96670,"byte_end":96773,"line_start":2774,"line_end":2774,"column_start":5,"column_end":108}},{"value":"/ draws will be read. If `count` is greater than `max_count`, `max_count` will be used.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":96778,"byte_end":96867,"line_start":2775,"line_end":2775,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":96872,"byte_end":96875,"line_start":2776,"line_end":2776,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderPass::set_index_buffer`], while the active","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":96880,"byte_end":96974,"line_start":2777,"line_end":2777,"column_start":5,"column_end":99}},{"value":"/ vertex buffers can be set with [`RenderPass::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":96979,"byte_end":97048,"line_start":2778,"line_end":2778,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97053,"byte_end":97056,"line_start":2779,"line_end":2779,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97061,"byte_end":97126,"line_start":2780,"line_end":2780,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97131,"byte_end":97134,"line_start":2781,"line_end":2781,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97139,"byte_end":97150,"line_start":2782,"line_end":2782,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97155,"byte_end":97169,"line_start":2783,"line_end":2783,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97174,"byte_end":97206,"line_start":2784,"line_end":2784,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97211,"byte_end":97272,"line_start":2785,"line_end":2785,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97277,"byte_end":97341,"line_start":2786,"line_end":2786,"column_start":5,"column_end":69}},{"value":"/     base_index: u32, // The base index within the index buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97346,"byte_end":97413,"line_start":2787,"line_end":2787,"column_start":5,"column_end":72}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97418,"byte_end":97524,"line_start":2788,"line_end":2788,"column_start":5,"column_end":111}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97529,"byte_end":97606,"line_start":2789,"line_end":2789,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97611,"byte_end":97616,"line_start":2790,"line_end":2790,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97621,"byte_end":97628,"line_start":2791,"line_end":2791,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97633,"byte_end":97636,"line_start":2792,"line_end":2792,"column_start":5,"column_end":8}},{"value":"/ These draw structures are expected to be tightly packed.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97641,"byte_end":97701,"line_start":2793,"line_end":2793,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97706,"byte_end":97709,"line_start":2794,"line_end":2794,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `count_buffer` is the following:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97714,"byte_end":97776,"line_start":2795,"line_end":2795,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97781,"byte_end":97784,"line_start":2796,"line_end":2796,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97789,"byte_end":97800,"line_start":2797,"line_end":2797,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97805,"byte_end":97819,"line_start":2798,"line_end":2798,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirectCount {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97824,"byte_end":97861,"line_start":2799,"line_end":2799,"column_start":5,"column_end":42}},{"value":"/     count: u32, // Number of draw calls to issue.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97866,"byte_end":97919,"line_start":2800,"line_end":2800,"column_start":5,"column_end":58}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97924,"byte_end":97929,"line_start":2801,"line_end":2801,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":97934,"byte_end":97941,"line_start":2802,"line_end":2802,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99736,"byte_end":99754,"line_start":2851,"line_end":2851,"column_start":12,"column_end":30},"name":"set_push_constants","qualname":"<RenderPass>::set_push_constants","value":"pub fn set_push_constants(&mut Self, ShaderStages, u32, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set push constant data.","sig":null,"attributes":[{"value":"/ Set push constant data.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":98526,"byte_end":98553,"line_start":2823,"line_end":2823,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":98558,"byte_end":98561,"line_start":2824,"line_end":2824,"column_start":5,"column_end":8}},{"value":"/ Offset is measured in bytes, but must be a multiple of [`PUSH_CONSTANT_ALIGNMENT`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":98566,"byte_end":98653,"line_start":2825,"line_end":2825,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":98658,"byte_end":98661,"line_start":2826,"line_end":2826,"column_start":5,"column_end":8}},{"value":"/ Data size must be a multiple of 4 and must be aligned to the 4s, so we take an array of u32.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":98666,"byte_end":98762,"line_start":2827,"line_end":2827,"column_start":5,"column_end":101}},{"value":"/ For example, with an offset of 4 and an array of `[u32; 3]`, that will write to the range","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":98767,"byte_end":98860,"line_start":2828,"line_end":2828,"column_start":5,"column_end":98}},{"value":"/ of 4..16.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":98865,"byte_end":98878,"line_start":2829,"line_end":2829,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":98883,"byte_end":98886,"line_start":2830,"line_end":2830,"column_start":5,"column_end":8}},{"value":"/ For each byte in the range of push constant data written, the union of the stages of all push constant","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":98891,"byte_end":98997,"line_start":2831,"line_end":2831,"column_start":5,"column_end":111}},{"value":"/ ranges that covers that byte must be exactly `stages`. There's no good way of explaining this simply,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99002,"byte_end":99107,"line_start":2832,"line_end":2832,"column_start":5,"column_end":110}},{"value":"/ so here are some examples:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99112,"byte_end":99142,"line_start":2833,"line_end":2833,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99147,"byte_end":99150,"line_start":2834,"line_end":2834,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99155,"byte_end":99166,"line_start":2835,"line_end":2835,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99171,"byte_end":99196,"line_start":2836,"line_end":2836,"column_start":5,"column_end":30}},{"value":"/ - 0..4 Vertex","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99201,"byte_end":99218,"line_start":2837,"line_end":2837,"column_start":5,"column_end":22}},{"value":"/ - 4..8 Fragment","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99223,"byte_end":99242,"line_start":2838,"line_end":2838,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99247,"byte_end":99254,"line_start":2839,"line_end":2839,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99259,"byte_end":99262,"line_start":2840,"line_end":2840,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in two set_push_constants calls. First for the `Vertex` range, second for the `Fragment` range.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99267,"byte_end":99396,"line_start":2841,"line_end":2841,"column_start":5,"column_end":134}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99401,"byte_end":99404,"line_start":2842,"line_end":2842,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99409,"byte_end":99420,"line_start":2843,"line_end":2843,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99425,"byte_end":99450,"line_start":2844,"line_end":2844,"column_start":5,"column_end":30}},{"value":"/ - 0..8  Vertex","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99455,"byte_end":99473,"line_start":2845,"line_end":2845,"column_start":5,"column_end":23}},{"value":"/ - 4..12 Fragment","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99478,"byte_end":99498,"line_start":2846,"line_end":2846,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99503,"byte_end":99510,"line_start":2847,"line_end":2847,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99515,"byte_end":99518,"line_start":2848,"line_end":2848,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in three set_push_constants calls. First for the `Vertex` only range 0..4, second","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99523,"byte_end":99638,"line_start":2849,"line_end":2849,"column_start":5,"column_end":120}},{"value":"/ for the `Vertex | Fragment` range 4..8, third for the `Fragment` range 8..12.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99643,"byte_end":99724,"line_start":2850,"line_end":2850,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":100428,"byte_end":100443,"line_start":2865,"line_end":2865,"column_start":12,"column_end":27},"name":"write_timestamp","qualname":"<RenderPass>::write_timestamp","value":"pub fn write_timestamp(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Issue a timestamp command at this point in the queue. The\n timestamp will be written to the specified query set, at the specified index.","sig":null,"attributes":[{"value":"/ Issue a timestamp command at this point in the queue. The","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":100011,"byte_end":100072,"line_start":2858,"line_end":2858,"column_start":5,"column_end":66}},{"value":"/ timestamp will be written to the specified query set, at the specified index.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":100077,"byte_end":100158,"line_start":2859,"line_end":2859,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":100163,"byte_end":100166,"line_start":2860,"line_end":2860,"column_start":5,"column_end":8}},{"value":"/ Must be multiplied by [`Queue::get_timestamp_period`] to get","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":100171,"byte_end":100235,"line_start":2861,"line_end":2861,"column_start":5,"column_end":69}},{"value":"/ the value in nanoseconds. Absolute values have no meaning,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":100240,"byte_end":100302,"line_start":2862,"line_end":2862,"column_start":5,"column_end":67}},{"value":"/ but timestamps can be subtracted to get the time it takes","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":100307,"byte_end":100368,"line_start":2863,"line_end":2863,"column_start":5,"column_end":66}},{"value":"/ for a string of operations to complete.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":100373,"byte_end":100416,"line_start":2864,"line_end":2864,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":100883,"byte_end":100914,"line_start":2874,"line_end":2874,"column_start":12,"column_end":43},"name":"begin_pipeline_statistics_query","qualname":"<RenderPass>::begin_pipeline_statistics_query","value":"pub fn begin_pipeline_statistics_query(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Start a pipeline statistics query on this render pass. It can be ended with\n `end_pipeline_statistics_query`. Pipeline statistics queries may not be nested.\n","sig":null,"attributes":[{"value":"/ Start a pipeline statistics query on this render pass. It can be ended with","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":100704,"byte_end":100783,"line_start":2872,"line_end":2872,"column_start":5,"column_end":84}},{"value":"/ `end_pipeline_statistics_query`. Pipeline statistics queries may not be nested.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":100788,"byte_end":100871,"line_start":2873,"line_end":2873,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":101252,"byte_end":101281,"line_start":2881,"line_end":2881,"column_start":12,"column_end":41},"name":"end_pipeline_statistics_query","qualname":"<RenderPass>::end_pipeline_statistics_query","value":"pub fn end_pipeline_statistics_query(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" End the pipeline statistics query on this render pass. It can be started with\n `begin_pipeline_statistics_query`. Pipeline statistics queries may not be nested.\n","sig":null,"attributes":[{"value":"/ End the pipeline statistics query on this render pass. It can be started with","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":101069,"byte_end":101150,"line_start":2879,"line_end":2879,"column_start":5,"column_end":86}},{"value":"/ `begin_pipeline_statistics_query`. Pipeline statistics queries may not be nested.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":101155,"byte_end":101240,"line_start":2880,"line_end":2880,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":102148,"byte_end":102162,"line_start":2904,"line_end":2904,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<ComputePass>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when the `dispatch()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":101683,"byte_end":101765,"line_start":2898,"line_end":2898,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when the `dispatch()` function is called must match the layout of this bind group.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":101770,"byte_end":101879,"line_start":2899,"line_end":2899,"column_start":5,"column_end":114}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":101884,"byte_end":101887,"line_start":2900,"line_end":2900,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in the binding order.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":101892,"byte_end":101970,"line_start":2901,"line_end":2901,"column_start":5,"column_end":83}},{"value":"/ These offsets have to be aligned to [`Limits::min_uniform_buffer_offset_alignment`]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":101975,"byte_end":102062,"line_start":2902,"line_end":2902,"column_start":5,"column_end":92}},{"value":"/ or [`Limits::min_storage_buffer_offset_alignment`] appropriately.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":102067,"byte_end":102136,"line_start":2903,"line_end":2903,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":102429,"byte_end":102441,"line_start":2914,"line_end":2914,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<ComputePass>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a ComputePipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active compute pipeline.\n","sig":null,"attributes":[{"value":"/ Sets the active compute pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":102380,"byte_end":102417,"line_start":2913,"line_end":2913,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":102602,"byte_end":102621,"line_start":2919,"line_end":2919,"column_start":12,"column_end":31},"name":"insert_debug_marker","qualname":"<ComputePass>::insert_debug_marker","value":"pub fn insert_debug_marker(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Inserts debug marker.\n","sig":null,"attributes":[{"value":"/ Inserts debug marker.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":102565,"byte_end":102590,"line_start":2918,"line_end":2918,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":102778,"byte_end":102794,"line_start":2924,"line_end":2924,"column_start":12,"column_end":28},"name":"push_debug_group","qualname":"<ComputePass>::push_debug_group","value":"pub fn push_debug_group(&mut Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Start record commands and group it into debug marker group.\n","sig":null,"attributes":[{"value":"/ Start record commands and group it into debug marker group.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":102703,"byte_end":102766,"line_start":2923,"line_end":2923,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":102937,"byte_end":102952,"line_start":2929,"line_end":2929,"column_start":12,"column_end":27},"name":"pop_debug_group","qualname":"<ComputePass>::pop_debug_group","value":"pub fn pop_debug_group(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Stops command recording and creates debug group.\n","sig":null,"attributes":[{"value":"/ Stops command recording and creates debug group.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":102873,"byte_end":102925,"line_start":2928,"line_end":2928,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1420},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103160,"byte_end":103168,"line_start":2936,"line_end":2936,"column_start":12,"column_end":20},"name":"dispatch","qualname":"<ComputePass>::dispatch","value":"pub fn dispatch(&mut Self, u32, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches compute work operations.","sig":null,"attributes":[{"value":"/ Dispatches compute work operations.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103012,"byte_end":103051,"line_start":2933,"line_end":2933,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103056,"byte_end":103059,"line_start":2934,"line_end":2934,"column_start":5,"column_end":8}},{"value":"/ `x`, `y` and `z` denote the number of work groups to dispatch in each dimension.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103064,"byte_end":103148,"line_start":2935,"line_end":2935,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1421},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103698,"byte_end":103715,"line_start":2953,"line_end":2953,"column_start":12,"column_end":29},"name":"dispatch_indirect","qualname":"<ComputePass>::dispatch_indirect","value":"pub fn dispatch_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Dispatches compute work operations, based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Dispatches compute work operations, based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103276,"byte_end":103363,"line_start":2940,"line_end":2940,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103368,"byte_end":103371,"line_start":2941,"line_end":2941,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103376,"byte_end":103441,"line_start":2942,"line_end":2942,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103446,"byte_end":103449,"line_start":2943,"line_end":2943,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103454,"byte_end":103465,"line_start":2944,"line_end":2944,"column_start":5,"column_end":16}},{"value":"/ // x, y and z denote the number of work groups to dispatch in each dimension.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103470,"byte_end":103551,"line_start":2945,"line_end":2945,"column_start":5,"column_end":86}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103556,"byte_end":103570,"line_start":2946,"line_end":2946,"column_start":5,"column_end":19}},{"value":"/ struct DispatchIndirect {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103575,"byte_end":103604,"line_start":2947,"line_end":2947,"column_start":5,"column_end":34}},{"value":"/     x: u32,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103609,"byte_end":103624,"line_start":2948,"line_end":2948,"column_start":5,"column_end":20}},{"value":"/     y: u32,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103629,"byte_end":103644,"line_start":2949,"line_end":2949,"column_start":5,"column_end":20}},{"value":"/     z: u32,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103649,"byte_end":103664,"line_start":2950,"line_end":2950,"column_start":5,"column_end":20}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103669,"byte_end":103674,"line_start":2951,"line_end":2951,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":103679,"byte_end":103686,"line_start":2952,"line_end":2952,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104419,"byte_end":104437,"line_start":2971,"line_end":2971,"column_start":12,"column_end":30},"name":"set_push_constants","qualname":"<ComputePass>::set_push_constants","value":"pub fn set_push_constants(&mut Self, u32, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set push constant data.","sig":null,"attributes":[{"value":"/ Set push constant data.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104055,"byte_end":104082,"line_start":2964,"line_end":2964,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104087,"byte_end":104090,"line_start":2965,"line_end":2965,"column_start":5,"column_end":8}},{"value":"/ Offset is measured in bytes, but must be a multiple of [`PUSH_CONSTANT_ALIGNMENT`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104095,"byte_end":104182,"line_start":2966,"line_end":2966,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104187,"byte_end":104190,"line_start":2967,"line_end":2967,"column_start":5,"column_end":8}},{"value":"/ Data size must be a multiple of 4 and must be aligned to the 4s, so we take an array of u32.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104195,"byte_end":104291,"line_start":2968,"line_end":2968,"column_start":5,"column_end":101}},{"value":"/ For example, with an offset of 4 and an array of `[u32; 3]`, that will write to the range","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104296,"byte_end":104389,"line_start":2969,"line_end":2969,"column_start":5,"column_end":98}},{"value":"/ of 4..16.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104394,"byte_end":104407,"line_start":2970,"line_end":2970,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":105074,"byte_end":105089,"line_start":2984,"line_end":2984,"column_start":12,"column_end":27},"name":"write_timestamp","qualname":"<ComputePass>::write_timestamp","value":"pub fn write_timestamp(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Issue a timestamp command at this point in the queue. The timestamp will be written to the specified query set, at the specified index.","sig":null,"attributes":[{"value":"/ Issue a timestamp command at this point in the queue. The timestamp will be written to the specified query set, at the specified index.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104665,"byte_end":104804,"line_start":2978,"line_end":2978,"column_start":5,"column_end":144}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104809,"byte_end":104812,"line_start":2979,"line_end":2979,"column_start":5,"column_end":8}},{"value":"/ Must be multiplied by [`Queue::get_timestamp_period`] to get","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104817,"byte_end":104881,"line_start":2980,"line_end":2980,"column_start":5,"column_end":69}},{"value":"/ the value in nanoseconds. Absolute values have no meaning,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104886,"byte_end":104948,"line_start":2981,"line_end":2981,"column_start":5,"column_end":67}},{"value":"/ but timestamps can be subtracted to get the time it takes","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104953,"byte_end":105014,"line_start":2982,"line_end":2982,"column_start":5,"column_end":66}},{"value":"/ for a string of operations to complete.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":105019,"byte_end":105062,"line_start":2983,"line_end":2983,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":105530,"byte_end":105561,"line_start":2993,"line_end":2993,"column_start":12,"column_end":43},"name":"begin_pipeline_statistics_query","qualname":"<ComputePass>::begin_pipeline_statistics_query","value":"pub fn begin_pipeline_statistics_query(&mut Self, &QuerySet, u32)","parent":null,"children":[],"decl_id":null,"docs":" Start a pipeline statistics query on this render pass. It can be ended with\n `end_pipeline_statistics_query`. Pipeline statistics queries may not be nested.\n","sig":null,"attributes":[{"value":"/ Start a pipeline statistics query on this render pass. It can be ended with","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":105351,"byte_end":105430,"line_start":2991,"line_end":2991,"column_start":5,"column_end":84}},{"value":"/ `end_pipeline_statistics_query`. Pipeline statistics queries may not be nested.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":105435,"byte_end":105518,"line_start":2992,"line_end":2992,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":105899,"byte_end":105928,"line_start":3000,"line_end":3000,"column_start":12,"column_end":41},"name":"end_pipeline_statistics_query","qualname":"<ComputePass>::end_pipeline_statistics_query","value":"pub fn end_pipeline_statistics_query(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" End the pipeline statistics query on this render pass. It can be started with\n `begin_pipeline_statistics_query`. Pipeline statistics queries may not be nested.\n","sig":null,"attributes":[{"value":"/ End the pipeline statistics query on this render pass. It can be started with","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":105716,"byte_end":105797,"line_start":2998,"line_end":2998,"column_start":5,"column_end":86}},{"value":"/ `begin_pipeline_statistics_query`. Pipeline statistics queries may not be nested.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":105802,"byte_end":105887,"line_start":2999,"line_end":2999,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":106450,"byte_end":106456,"line_start":3018,"line_end":3018,"column_start":12,"column_end":18},"name":"finish","qualname":"<RenderBundleEncoder>::finish","value":"pub fn finish(Self, &RenderBundleDescriptor) -> RenderBundle","parent":null,"children":[],"decl_id":null,"docs":" Finishes recording and returns a [`RenderBundle`] that can be executed in other render passes.\n","sig":null,"attributes":[{"value":"/ Finishes recording and returns a [`RenderBundle`] that can be executed in other render passes.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":106340,"byte_end":106438,"line_start":3017,"line_end":3017,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":106985,"byte_end":106999,"line_start":3029,"line_end":3029,"column_start":12,"column_end":26},"name":"set_bind_group","qualname":"<RenderBundleEncoder>::set_bind_group","value":"pub fn set_bind_group(&mut Self, u32, &'a BindGroup, &[DynamicOffset])","parent":null,"children":[],"decl_id":null,"docs":" Sets the active bind group for a given bind group index. The bind group layout\n in the active pipeline when any `draw()` function is called must match the layout of this bind group.","sig":null,"attributes":[{"value":"/ Sets the active bind group for a given bind group index. The bind group layout","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":106690,"byte_end":106772,"line_start":3025,"line_end":3025,"column_start":5,"column_end":87}},{"value":"/ in the active pipeline when any `draw()` function is called must match the layout of this bind group.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":106777,"byte_end":106882,"line_start":3026,"line_end":3026,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":106887,"byte_end":106890,"line_start":3027,"line_end":3027,"column_start":5,"column_end":8}},{"value":"/ If the bind group have dynamic offsets, provide them in the binding order.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":106895,"byte_end":106973,"line_start":3028,"line_end":3028,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":107346,"byte_end":107358,"line_start":3041,"line_end":3041,"column_start":12,"column_end":24},"name":"set_pipeline","qualname":"<RenderBundleEncoder>::set_pipeline","value":"pub fn set_pipeline(&mut Self, &'a RenderPipeline)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active render pipeline.","sig":null,"attributes":[{"value":"/ Sets the active render pipeline.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":107211,"byte_end":107247,"line_start":3038,"line_end":3038,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":107252,"byte_end":107255,"line_start":3039,"line_end":3039,"column_start":5,"column_end":8}},{"value":"/ Subsequent draw calls will exhibit the behavior defined by `pipeline`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":107260,"byte_end":107334,"line_start":3040,"line_end":3040,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":107694,"byte_end":107710,"line_start":3049,"line_end":3049,"column_start":12,"column_end":28},"name":"set_index_buffer","qualname":"<RenderBundleEncoder>::set_index_buffer","value":"pub fn set_index_buffer(&mut Self, BufferSlice, IndexFormat)","parent":null,"children":[],"decl_id":null,"docs":" Sets the active index buffer.","sig":null,"attributes":[{"value":"/ Sets the active index buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":107475,"byte_end":107508,"line_start":3045,"line_end":3045,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":107513,"byte_end":107516,"line_start":3046,"line_end":3046,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw_indexed`](RenderBundleEncoder::draw_indexed) on this [`RenderBundleEncoder`] will","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":107521,"byte_end":107633,"line_start":3047,"line_end":3047,"column_start":5,"column_end":117}},{"value":"/ use `buffer` as the source index buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":107638,"byte_end":107682,"line_start":3048,"line_end":3048,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108428,"byte_end":108445,"line_start":3069,"line_end":3069,"column_start":12,"column_end":29},"name":"set_vertex_buffer","qualname":"<RenderBundleEncoder>::set_vertex_buffer","value":"pub fn set_vertex_buffer(&mut Self, u32, BufferSlice)","parent":null,"children":[],"decl_id":null,"docs":" Assign a vertex buffer to a slot.","sig":null,"attributes":[{"value":"/ Assign a vertex buffer to a slot.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":107995,"byte_end":108032,"line_start":3059,"line_end":3059,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108037,"byte_end":108040,"line_start":3060,"line_end":3060,"column_start":5,"column_end":8}},{"value":"/ Subsequent calls to [`draw`] and [`draw_indexed`] on this","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108045,"byte_end":108106,"line_start":3061,"line_end":3061,"column_start":5,"column_end":66}},{"value":"/ [`RenderBundleEncoder`] will use `buffer` as one of the source vertex buffers.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108111,"byte_end":108193,"line_start":3062,"line_end":3062,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108198,"byte_end":108201,"line_start":3063,"line_end":3063,"column_start":5,"column_end":8}},{"value":"/ The `slot` refers to the index of the matching descriptor in","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108206,"byte_end":108270,"line_start":3064,"line_end":3064,"column_start":5,"column_end":69}},{"value":"/ [`VertexState::buffers`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108275,"byte_end":108304,"line_start":3065,"line_end":3065,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108309,"byte_end":108312,"line_start":3066,"line_end":3066,"column_start":5,"column_end":8}},{"value":"/ [`draw`]: RenderBundleEncoder::draw","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108317,"byte_end":108356,"line_start":3067,"line_end":3067,"column_start":5,"column_end":44}},{"value":"/ [`draw_indexed`]: RenderBundleEncoder::draw_indexed","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108361,"byte_end":108416,"line_start":3068,"line_end":3068,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108875,"byte_end":108879,"line_start":3082,"line_end":3082,"column_start":12,"column_end":16},"name":"draw","qualname":"<RenderBundleEncoder>::draw","value":"pub fn draw(&mut Self, Range<u32>, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s).","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s).","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108707,"byte_end":108761,"line_start":3079,"line_end":3079,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108766,"byte_end":108769,"line_start":3080,"line_end":3080,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":108774,"byte_end":108863,"line_start":3081,"line_end":3081,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109310,"byte_end":109322,"line_start":3090,"line_end":3090,"column_start":12,"column_end":24},"name":"draw_indexed","qualname":"<RenderBundleEncoder>::draw_indexed","value":"pub fn draw_indexed(&mut Self, Range<u32>, i32, Range<u32>)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109010,"byte_end":109099,"line_start":3086,"line_end":3086,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109104,"byte_end":109107,"line_start":3087,"line_end":3087,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderBundleEncoder::set_index_buffer`], while the active","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109112,"byte_end":109215,"line_start":3088,"line_end":3088,"column_start":5,"column_end":108}},{"value":"/ vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109220,"byte_end":109298,"line_start":3089,"line_end":3089,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110168,"byte_end":110181,"line_start":3109,"line_end":3109,"column_start":12,"column_end":25},"name":"draw_indirect","qualname":"<RenderBundleEncoder>::draw_indirect","value":"pub fn draw_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws primitives from the active vertex buffer(s) based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109491,"byte_end":109592,"line_start":3094,"line_end":3094,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109597,"byte_end":109600,"line_start":3095,"line_end":3095,"column_start":5,"column_end":8}},{"value":"/ The active vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109605,"byte_end":109694,"line_start":3096,"line_end":3096,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109699,"byte_end":109702,"line_start":3097,"line_end":3097,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109707,"byte_end":109772,"line_start":3098,"line_end":3098,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109777,"byte_end":109780,"line_start":3099,"line_end":3099,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109785,"byte_end":109796,"line_start":3100,"line_end":3100,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109801,"byte_end":109815,"line_start":3101,"line_end":3101,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndirect {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109820,"byte_end":109845,"line_start":3102,"line_end":3102,"column_start":5,"column_end":30}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109850,"byte_end":109911,"line_start":3103,"line_end":3103,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109916,"byte_end":109980,"line_start":3104,"line_end":3104,"column_start":5,"column_end":69}},{"value":"/     base_vertex: u32, // The Index of the first vertex to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":109985,"byte_end":110052,"line_start":3105,"line_end":3105,"column_start":5,"column_end":72}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110057,"byte_end":110134,"line_start":3106,"line_end":3106,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110139,"byte_end":110144,"line_start":3107,"line_end":3107,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110149,"byte_end":110156,"line_start":3108,"line_end":3108,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111272,"byte_end":111293,"line_start":3131,"line_end":3131,"column_start":12,"column_end":33},"name":"draw_indexed_indirect","qualname":"<RenderBundleEncoder>::draw_indexed_indirect","value":"pub fn draw_indexed_indirect(&mut Self, &'a Buffer, BufferAddress)","parent":null,"children":[],"decl_id":null,"docs":" Draws indexed primitives using the active index buffer and the active vertex buffers,\n based on the contents of the `indirect_buffer`.","sig":null,"attributes":[{"value":"/ Draws indexed primitives using the active index buffer and the active vertex buffers,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110336,"byte_end":110425,"line_start":3113,"line_end":3113,"column_start":5,"column_end":94}},{"value":"/ based on the contents of the `indirect_buffer`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110430,"byte_end":110481,"line_start":3114,"line_end":3114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110486,"byte_end":110489,"line_start":3115,"line_end":3115,"column_start":5,"column_end":8}},{"value":"/ The active index buffer can be set with [`RenderBundleEncoder::set_index_buffer`], while the active","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110494,"byte_end":110597,"line_start":3116,"line_end":3116,"column_start":5,"column_end":108}},{"value":"/ vertex buffers can be set with [`RenderBundleEncoder::set_vertex_buffer`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110602,"byte_end":110680,"line_start":3117,"line_end":3117,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110685,"byte_end":110688,"line_start":3118,"line_end":3118,"column_start":5,"column_end":8}},{"value":"/ The structure expected in `indirect_buffer` is the following:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110693,"byte_end":110758,"line_start":3119,"line_end":3119,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110763,"byte_end":110766,"line_start":3120,"line_end":3120,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110771,"byte_end":110782,"line_start":3121,"line_end":3121,"column_start":5,"column_end":16}},{"value":"/ #[repr(C)]","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110787,"byte_end":110801,"line_start":3122,"line_end":3122,"column_start":5,"column_end":19}},{"value":"/ struct DrawIndexedIndirect {","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110806,"byte_end":110838,"line_start":3123,"line_end":3123,"column_start":5,"column_end":37}},{"value":"/     vertex_count: u32, // The number of vertices to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110843,"byte_end":110904,"line_start":3124,"line_end":3124,"column_start":5,"column_end":66}},{"value":"/     instance_count: u32, // The number of instances to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110909,"byte_end":110973,"line_start":3125,"line_end":3125,"column_start":5,"column_end":69}},{"value":"/     base_index: u32, // The base index within the index buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":110978,"byte_end":111045,"line_start":3126,"line_end":3126,"column_start":5,"column_end":72}},{"value":"/     vertex_offset: i32, // The value added to the vertex index before indexing into the vertex buffer.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111050,"byte_end":111156,"line_start":3127,"line_end":3127,"column_start":5,"column_end":111}},{"value":"/     base_instance: u32, // The instance ID of the first instance to draw.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111161,"byte_end":111238,"line_start":3128,"line_end":3128,"column_start":5,"column_end":82}},{"value":"/ }","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111243,"byte_end":111248,"line_start":3129,"line_end":3129,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111253,"byte_end":111260,"line_start":3130,"line_end":3130,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112844,"byte_end":112862,"line_start":3171,"line_end":3171,"column_start":12,"column_end":30},"name":"set_push_constants","qualname":"<RenderBundleEncoder>::set_push_constants","value":"pub fn set_push_constants(&mut Self, ShaderStages, u32, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Set push constant data.","sig":null,"attributes":[{"value":"/ Set push constant data.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111634,"byte_end":111661,"line_start":3143,"line_end":3143,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111666,"byte_end":111669,"line_start":3144,"line_end":3144,"column_start":5,"column_end":8}},{"value":"/ Offset is measured in bytes, but must be a multiple of [`PUSH_CONSTANT_ALIGNMENT`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111674,"byte_end":111761,"line_start":3145,"line_end":3145,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111766,"byte_end":111769,"line_start":3146,"line_end":3146,"column_start":5,"column_end":8}},{"value":"/ Data size must be a multiple of 4 and must be aligned to the 4s, so we take an array of u32.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111774,"byte_end":111870,"line_start":3147,"line_end":3147,"column_start":5,"column_end":101}},{"value":"/ For example, with an offset of 4 and an array of `[u32; 3]`, that will write to the range","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111875,"byte_end":111968,"line_start":3148,"line_end":3148,"column_start":5,"column_end":98}},{"value":"/ of 4..16.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111973,"byte_end":111986,"line_start":3149,"line_end":3149,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111991,"byte_end":111994,"line_start":3150,"line_end":3150,"column_start":5,"column_end":8}},{"value":"/ For each byte in the range of push constant data written, the union of the stages of all push constant","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111999,"byte_end":112105,"line_start":3151,"line_end":3151,"column_start":5,"column_end":111}},{"value":"/ ranges that covers that byte must be exactly `stages`. There's no good way of explaining this simply,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112110,"byte_end":112215,"line_start":3152,"line_end":3152,"column_start":5,"column_end":110}},{"value":"/ so here are some examples:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112220,"byte_end":112250,"line_start":3153,"line_end":3153,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112255,"byte_end":112258,"line_start":3154,"line_end":3154,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112263,"byte_end":112274,"line_start":3155,"line_end":3155,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112279,"byte_end":112304,"line_start":3156,"line_end":3156,"column_start":5,"column_end":30}},{"value":"/ - 0..4 Vertex","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112309,"byte_end":112326,"line_start":3157,"line_end":3157,"column_start":5,"column_end":22}},{"value":"/ - 4..8 Fragment","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112331,"byte_end":112350,"line_start":3158,"line_end":3158,"column_start":5,"column_end":24}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112355,"byte_end":112362,"line_start":3159,"line_end":3159,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112367,"byte_end":112370,"line_start":3160,"line_end":3160,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in two set_push_constants calls. First for the `Vertex` range, second for the `Fragment` range.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112375,"byte_end":112504,"line_start":3161,"line_end":3161,"column_start":5,"column_end":134}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112509,"byte_end":112512,"line_start":3162,"line_end":3162,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112517,"byte_end":112528,"line_start":3163,"line_end":3163,"column_start":5,"column_end":16}},{"value":"/ For the given ranges:","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112533,"byte_end":112558,"line_start":3164,"line_end":3164,"column_start":5,"column_end":30}},{"value":"/ - 0..8  Vertex","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112563,"byte_end":112581,"line_start":3165,"line_end":3165,"column_start":5,"column_end":23}},{"value":"/ - 4..12 Fragment","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112586,"byte_end":112606,"line_start":3166,"line_end":3166,"column_start":5,"column_end":25}},{"value":"/ ```","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112611,"byte_end":112618,"line_start":3167,"line_end":3167,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112623,"byte_end":112626,"line_start":3168,"line_end":3168,"column_start":5,"column_end":8}},{"value":"/ You would need to upload this in three set_push_constants calls. First for the `Vertex` only range 0..4, second","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112631,"byte_end":112746,"line_start":3169,"line_end":3169,"column_start":5,"column_end":120}},{"value":"/ for the `Vertex | Fragment` range 4..8, third for the `Fragment` range 8..12.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112751,"byte_end":112832,"line_start":3170,"line_end":3170,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1450},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113397,"byte_end":113409,"line_start":3184,"line_end":3184,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Queue>::write_buffer","value":"pub fn write_buffer(&Self, &Buffer, BufferAddress, &[u8])","parent":null,"children":[],"decl_id":null,"docs":" Schedule a data write into `buffer` starting at `offset`.","sig":null,"attributes":[{"value":"/ Schedule a data write into `buffer` starting at `offset`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113008,"byte_end":113069,"line_start":3177,"line_end":3177,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113074,"byte_end":113077,"line_start":3178,"line_end":3178,"column_start":5,"column_end":8}},{"value":"/ This method is intended to have low performance costs.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113082,"byte_end":113140,"line_start":3179,"line_end":3179,"column_start":5,"column_end":63}},{"value":"/ As such, the write is not immediately submitted, and instead enqueued","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113145,"byte_end":113218,"line_start":3180,"line_end":3180,"column_start":5,"column_end":78}},{"value":"/ internally to happen at the start of the next `submit()` call.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113223,"byte_end":113289,"line_start":3181,"line_end":3181,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113294,"byte_end":113297,"line_start":3182,"line_end":3182,"column_start":5,"column_end":8}},{"value":"/ This method fails if `data` overruns the size of `buffer` starting at `offset`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113302,"byte_end":113385,"line_start":3183,"line_end":3183,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113954,"byte_end":113967,"line_start":3195,"line_end":3195,"column_start":12,"column_end":25},"name":"write_texture","qualname":"<Queue>::write_texture","value":"pub fn write_texture(&Self, ImageCopyTexture, &[u8], ImageDataLayout,\nExtent3d)","parent":null,"children":[],"decl_id":null,"docs":" Schedule a data write into `texture`.","sig":null,"attributes":[{"value":"/ Schedule a data write into `texture`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113571,"byte_end":113612,"line_start":3188,"line_end":3188,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113617,"byte_end":113620,"line_start":3189,"line_end":3189,"column_start":5,"column_end":8}},{"value":"/ This method is intended to have low performance costs.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113625,"byte_end":113683,"line_start":3190,"line_end":3190,"column_start":5,"column_end":63}},{"value":"/ As such, the write is not immediately submitted, and instead enqueued","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113688,"byte_end":113761,"line_start":3191,"line_end":3191,"column_start":5,"column_end":78}},{"value":"/ internally to happen at the start of the next `submit()` call.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113766,"byte_end":113832,"line_start":3192,"line_end":3192,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113837,"byte_end":113840,"line_start":3193,"line_end":3193,"column_start":5,"column_end":8}},{"value":"/ This method fails if `data` overruns the size of fragment of `texture` specified with `size`.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":113845,"byte_end":113942,"line_start":3194,"line_end":3194,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":1452},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":114293,"byte_end":114299,"line_start":3206,"line_end":3206,"column_start":12,"column_end":18},"name":"submit","qualname":"<Queue>::submit","value":"pub fn submit<I: IntoIterator<Item = CommandBuffer>>(&Self, I)","parent":null,"children":[],"decl_id":null,"docs":" Submits a series of finished command buffers for execution.\n","sig":null,"attributes":[{"value":"/ Submits a series of finished command buffers for execution.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":114218,"byte_end":114281,"line_start":3205,"line_end":3205,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1455},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":114742,"byte_end":114762,"line_start":3219,"line_end":3219,"column_start":12,"column_end":32},"name":"get_timestamp_period","qualname":"<Queue>::get_timestamp_period","value":"pub fn get_timestamp_period(&Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Gets the amount of nanoseconds each tick of a timestamp query represents.","sig":null,"attributes":[{"value":"/ Gets the amount of nanoseconds each tick of a timestamp query represents.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":114586,"byte_end":114663,"line_start":3216,"line_end":3216,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":114668,"byte_end":114671,"line_start":3217,"line_end":3217,"column_start":5,"column_end":8}},{"value":"/ Returns zero if timestamp queries are unsupported.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":114676,"byte_end":114730,"line_start":3218,"line_end":3218,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1456},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":114983,"byte_end":115005,"line_start":3225,"line_end":3225,"column_start":12,"column_end":34},"name":"on_submitted_work_done","qualname":"<Queue>::on_submitted_work_done","value":"pub fn on_submitted_work_done(&Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Returns a future that resolves once all the work submitted by this point\n is done processing on GPU.\n","sig":null,"attributes":[{"value":"/ Returns a future that resolves once all the work submitted by this point","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":114860,"byte_end":114936,"line_start":3223,"line_end":3223,"column_start":5,"column_end":81}},{"value":"/ is done processing on GPU.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":114941,"byte_end":114971,"line_start":3224,"line_end":3224,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115334,"byte_end":115341,"line_start":3234,"line_end":3234,"column_start":12,"column_end":19},"name":"present","qualname":"<SurfaceTexture>::present","value":"pub fn present(Self)","parent":null,"children":[],"decl_id":null,"docs":" Schedule this texture to be presented on the owning surface.","sig":null,"attributes":[{"value":"/ Schedule this texture to be presented on the owning surface.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115157,"byte_end":115221,"line_start":3231,"line_end":3231,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115226,"byte_end":115229,"line_start":3232,"line_end":3232,"column_start":5,"column_end":8}},{"value":"/ Needs to be called after any work on the texture is scheduled via [`Queue::submit`].","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115234,"byte_end":115322,"line_start":3233,"line_end":3233,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115969,"byte_end":115989,"line_start":3256,"line_end":3256,"column_start":12,"column_end":32},"name":"get_preferred_format","qualname":"<Surface>::get_preferred_format","value":"pub fn get_preferred_format(&Self, &Adapter) -> Option<TextureFormat>","parent":null,"children":[],"decl_id":null,"docs":" Returns an optimal texture format to use for the [`Surface`] with this adapter.","sig":null,"attributes":[{"value":"/ Returns an optimal texture format to use for the [`Surface`] with this adapter.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115796,"byte_end":115879,"line_start":3253,"line_end":3253,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115884,"byte_end":115887,"line_start":3254,"line_end":3254,"column_start":5,"column_end":8}},{"value":"/ Returns None if the surface is incompatible with the adapter.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115892,"byte_end":115957,"line_start":3255,"line_end":3255,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116373,"byte_end":116382,"line_start":3266,"line_end":3266,"column_start":12,"column_end":21},"name":"configure","qualname":"<Surface>::configure","value":"pub fn configure(&Self, &Device, &SurfaceConfiguration)","parent":null,"children":[],"decl_id":null,"docs":" Initializes [`Surface`] for presentation.","sig":null,"attributes":[{"value":"/ Initializes [`Surface`] for presentation.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116139,"byte_end":116184,"line_start":3260,"line_end":3260,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116189,"byte_end":116192,"line_start":3261,"line_end":3261,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116197,"byte_end":116209,"line_start":3262,"line_end":3262,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116214,"byte_end":116217,"line_start":3263,"line_end":3263,"column_start":5,"column_end":8}},{"value":"/ - A old [`SurfaceTexture`] is still alive referencing an old surface.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116222,"byte_end":116295,"line_start":3264,"line_end":3264,"column_start":5,"column_end":78}},{"value":"/ - Texture format requested is unsupported on the surface.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116300,"byte_end":116361,"line_start":3265,"line_end":3265,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":117004,"byte_end":117023,"line_start":3278,"line_end":3278,"column_start":12,"column_end":31},"name":"get_current_texture","qualname":"<Surface>::get_current_texture","value":"pub fn get_current_texture(&Self) -> Result<SurfaceTexture, SurfaceError>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next texture to be presented by the swapchain for drawing.","sig":null,"attributes":[{"value":"/ Returns the next texture to be presented by the swapchain for drawing.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116532,"byte_end":116606,"line_start":3270,"line_end":3270,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116611,"byte_end":116614,"line_start":3271,"line_end":3271,"column_start":5,"column_end":8}},{"value":"/ In order to present the [`SurfaceTexture`] returned by this method,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116619,"byte_end":116690,"line_start":3272,"line_end":3272,"column_start":5,"column_end":76}},{"value":"/ first a [`Queue::submit`] needs to be done with some work rendering to this texture.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116695,"byte_end":116783,"line_start":3273,"line_end":3273,"column_start":5,"column_end":93}},{"value":"/ Then [`SurfaceTexture::present`] needs to be called.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116788,"byte_end":116844,"line_start":3274,"line_end":3274,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116849,"byte_end":116852,"line_start":3275,"line_end":3275,"column_start":5,"column_end":8}},{"value":"/ If a SurfaceTexture referencing this surface is alive when the swapchain is recreated,","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116857,"byte_end":116947,"line_start":3276,"line_end":3276,"column_start":5,"column_end":95}},{"value":"/ recreating the swapchain will panic.","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":116952,"byte_end":116992,"line_start":3277,"line_end":3277,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":1467},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":117988,"byte_end":118010,"line_start":3306,"line_end":3306,"column_start":11,"column_end":33},"name":"UncapturedErrorHandler","qualname":"::UncapturedErrorHandler","value":"UncapturedErrorHandler: Fn(Error) -> () + Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Type for the callback of uncaptured error handler\n","sig":null,"attributes":[{"value":"/ Type for the callback of uncaptured error handler","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":117924,"byte_end":117977,"line_start":3305,"line_end":3305,"column_start":1,"column_end":54}}]},{"kind":"StructVariant","id":{"krate":0,"index":2135},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118200,"byte_end":118211,"line_start":3313,"line_end":3313,"column_start":5,"column_end":16},"name":"OutOfMemory","qualname":"::Error::OutOfMemory","value":"Error::OutOfMemory { source }","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Out of memory error\n","sig":null,"attributes":[{"value":"/ Out of memory error","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118172,"byte_end":118195,"line_start":3312,"line_end":3312,"column_start":5,"column_end":28}}]},{"kind":"StructVariant","id":{"krate":0,"index":2137},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118352,"byte_end":118362,"line_start":3318,"line_end":3318,"column_start":5,"column_end":15},"name":"Validation","qualname":"::Error::Validation","value":"Error::Validation { source, description }","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Validation error, signifying a bug in code or data\n","sig":null,"attributes":[{"value":"/ Validation error, signifying a bug in code or data","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118293,"byte_end":118347,"line_start":3317,"line_end":3317,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":2134},"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118160,"byte_end":118165,"line_start":3311,"line_end":3311,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"pub enum Error {\n    OutOfMemory {\n            source: Box<dyn error::Error + Send + 'static>,\n        },\n    Validation {\n            source: Box<dyn error::Error + Send + 'static>,\n            description: String,\n        },\n}","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2137}],"decl_id":null,"docs":" Error type\n","sig":null,"attributes":[{"value":"/ Error type","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118119,"byte_end":118133,"line_start":3309,"line_end":3309,"column_start":1,"column_end":15}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":120404,"byte_end":120411,"line_start":28,"line_end":28,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":120486,"byte_end":120493,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":120641,"byte_end":120648,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":127091,"byte_end":127102,"line_start":244,"line_end":244,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":129648,"byte_end":129658,"line_start":319,"line_end":319,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":134335,"byte_end":134345,"line_start":458,"line_end":458,"column_start":60,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":136806,"byte_end":136825,"line_start":529,"line_end":529,"column_start":56,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":143138,"byte_end":143145,"line_start":740,"line_end":740,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":275},{"krate":0,"index":276},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":303},{"krate":0,"index":306},{"krate":0,"index":315},{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":195448,"byte_end":195460,"line_start":2234,"line_end":2234,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":196302,"byte_end":196314,"line_start":2265,"line_end":2265,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":196684,"byte_end":196701,"line_start":2282,"line_end":2282,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":196726,"byte_end":196743,"line_start":2283,"line_end":2283,"column_start":22,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":196787,"byte_end":196804,"line_start":2285,"line_end":2285,"column_start":40,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":197039,"byte_end":197056,"line_start":2295,"line_end":2295,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/native_gpu_future.rs","byte_start":197807,"byte_end":197816,"line_start":27,"line_end":27,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/native_gpu_future.rs","byte_start":198282,"byte_end":198301,"line_start":43,"line_end":43,"column_start":9,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":203250,"byte_end":203254,"line_start":14,"line_end":14,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205115,"byte_end":205126,"line_start":70,"line_end":70,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":540},{"krate":0,"index":541}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":210547,"byte_end":210553,"line_start":40,"line_end":40,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":220462,"byte_end":220472,"line_start":123,"line_end":123,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":608},{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":222153,"byte_end":222172,"line_start":174,"line_end":174,"column_start":32,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":201378,"byte_end":201392,"line_start":73,"line_end":73,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":202726,"byte_end":202740,"line_start":108,"line_end":108,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18478,"byte_end":18485,"line_start":526,"line_end":526,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":19537,"byte_end":19547,"line_start":565,"line_end":565,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1145},{"krate":0,"index":1146}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22446,"byte_end":22453,"line_start":670,"line_end":670,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22937,"byte_end":22944,"line_start":688,"line_end":688,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":23627,"byte_end":23642,"line_start":708,"line_end":708,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24263,"byte_end":24272,"line_start":728,"line_end":728,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24807,"byte_end":24819,"line_start":747,"line_end":747,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":27012,"byte_end":27026,"line_start":812,"line_end":812,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1175}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":27534,"byte_end":27548,"line_start":830,"line_end":830,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1177}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":27691,"byte_end":27705,"line_start":838,"line_end":838,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":28426,"byte_end":28441,"line_start":861,"line_end":861,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":28585,"byte_end":28600,"line_start":869,"line_end":869,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29435,"byte_end":29448,"line_start":893,"line_end":893,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":30121,"byte_end":30135,"line_start":916,"line_end":916,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":31801,"byte_end":31813,"line_start":968,"line_end":968,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32072,"byte_end":32080,"line_start":982,"line_end":982,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35397,"byte_end":35403,"line_start":1069,"line_end":1069,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35944,"byte_end":35954,"line_start":1086,"line_end":1086,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41681,"byte_end":41698,"line_start":1210,"line_end":1210,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1221}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49854,"byte_end":49866,"line_start":1404,"line_end":1404,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1233}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50406,"byte_end":50418,"line_start":1415,"line_end":1415,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50428,"byte_end":50436,"line_start":1417,"line_end":1417,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1239},{"krate":0,"index":1242},{"krate":0,"index":1246},{"krate":0,"index":1248},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55438,"byte_end":55445,"line_start":1569,"line_end":1569,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1254},{"krate":0,"index":1258},{"krate":0,"index":1261},{"krate":0,"index":1262},{"krate":0,"index":1263},{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59699,"byte_end":59705,"line_start":1679,"line_end":1679,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1268},{"krate":0,"index":1269},{"krate":0,"index":1270},{"krate":0,"index":1271},{"krate":0,"index":1272},{"krate":0,"index":1273},{"krate":0,"index":1274},{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1282},{"krate":0,"index":1283},{"krate":0,"index":1285},{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1292},{"krate":0,"index":1293},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68426,"byte_end":68432,"line_start":1928,"line_end":1928,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1299}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68681,"byte_end":68699,"line_start":1940,"line_end":1940,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1301}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68854,"byte_end":68872,"line_start":1946,"line_end":1946,"column_start":23,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":69017,"byte_end":69033,"line_start":1952,"line_end":1952,"column_start":18,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":69210,"byte_end":69226,"line_start":1958,"line_end":1958,"column_start":23,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":71272,"byte_end":71282,"line_start":2034,"line_end":2034,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1313},{"krate":0,"index":1314}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":71405,"byte_end":71418,"line_start":2042,"line_end":2042,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1316},{"krate":0,"index":1317}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":71703,"byte_end":71716,"line_start":2055,"line_end":2055,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1319}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":71834,"byte_end":71844,"line_start":2061,"line_end":2061,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":71939,"byte_end":71952,"line_start":2067,"line_end":2067,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1323}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":72052,"byte_end":72062,"line_start":2073,"line_end":2073,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":72258,"byte_end":72271,"line_start":2083,"line_end":2083,"column_start":15,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1327}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":72458,"byte_end":72464,"line_start":2093,"line_end":2093,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1329},{"krate":0,"index":1330},{"krate":0,"index":1331},{"krate":0,"index":1333},{"krate":0,"index":1334}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":73710,"byte_end":73721,"line_start":2131,"line_end":2131,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1337},{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76177,"byte_end":76183,"line_start":2196,"line_end":2196,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76317,"byte_end":76324,"line_start":2204,"line_end":2204,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1344},{"krate":0,"index":1347},{"krate":0,"index":1348},{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":77635,"byte_end":77642,"line_start":2244,"line_end":2244,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1351}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":77800,"byte_end":77811,"line_start":2252,"line_end":2252,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":77951,"byte_end":77965,"line_start":2260,"line_end":2260,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364},{"krate":0,"index":1365},{"krate":0,"index":1366},{"krate":0,"index":1367}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":83710,"byte_end":83724,"line_start":2448,"line_end":2448,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":84551,"byte_end":84565,"line_start":2467,"line_end":2467,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":85277,"byte_end":85287,"line_start":2490,"line_end":2490,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92247,"byte_end":92257,"line_start":2662,"line_end":2662,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1394},{"krate":0,"index":1395}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":94722,"byte_end":94732,"line_start":2723,"line_end":2723,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1398},{"krate":0,"index":1399}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":98505,"byte_end":98515,"line_start":2822,"line_end":2822,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1402}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99990,"byte_end":100000,"line_start":2857,"line_end":2857,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":100683,"byte_end":100693,"line_start":2871,"line_end":2871,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1408},{"krate":0,"index":1409}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":101371,"byte_end":101381,"line_start":2886,"line_end":2886,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":101661,"byte_end":101672,"line_start":2897,"line_end":2897,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1420},{"krate":0,"index":1421}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104033,"byte_end":104044,"line_start":2963,"line_end":2963,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1424}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104643,"byte_end":104654,"line_start":2977,"line_end":2977,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":105329,"byte_end":105340,"line_start":2990,"line_end":2990,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":106018,"byte_end":106029,"line_start":3005,"line_end":3005,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1434}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":106310,"byte_end":106329,"line_start":3016,"line_end":3016,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1437},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1443},{"krate":0,"index":1444},{"krate":0,"index":1445}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111604,"byte_end":111623,"line_start":3142,"line_end":3142,"column_start":10,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112996,"byte_end":113001,"line_start":3176,"line_end":3176,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452},{"krate":0,"index":1455},{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115136,"byte_end":115150,"line_start":3230,"line_end":3230,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1459}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115498,"byte_end":115512,"line_start":3240,"line_end":3240,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1461}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115782,"byte_end":115789,"line_start":3252,"line_end":3252,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118077,"byte_end":118078,"line_start":3307,"line_end":3307,"column_start":36,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118506,"byte_end":118511,"line_start":3326,"line_end":3326,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118774,"byte_end":118779,"line_start":3335,"line_end":3335,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":294,"byte_end":298,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":469}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":120404,"byte_end":120411,"line_start":28,"line_end":28,"column_start":15,"column_end":22},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":126},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":120486,"byte_end":120493,"line_start":34,"line_end":34,"column_start":21,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":126},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":120641,"byte_end":120648,"line_start":40,"line_end":40,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":126},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":127091,"byte_end":127102,"line_start":244,"line_end":244,"column_start":61,"column_end":72},"kind":{"Impl":{"id":3}},"from":{"krate":29,"index":738},"to":{"krate":0,"index":980}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":129648,"byte_end":129658,"line_start":319,"line_end":319,"column_start":56,"column_end":66},"kind":{"Impl":{"id":4}},"from":{"krate":29,"index":1267},"to":{"krate":0,"index":993}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":134335,"byte_end":134345,"line_start":458,"line_end":458,"column_start":60,"column_end":70},"kind":{"Impl":{"id":5}},"from":{"krate":29,"index":1267},"to":{"krate":0,"index":1008}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":136806,"byte_end":136825,"line_start":529,"line_end":529,"column_start":56,"column_end":75},"kind":{"Impl":{"id":6}},"from":{"krate":29,"index":4895},"to":{"krate":0,"index":993}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":143138,"byte_end":143145,"line_start":740,"line_end":740,"column_start":25,"column_end":32},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":126},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":195448,"byte_end":195460,"line_start":2234,"line_end":2234,"column_start":6,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":394},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":196302,"byte_end":196314,"line_start":2265,"line_end":2265,"column_start":21,"column_end":33},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":394},"to":{"krate":2,"index":9597}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":196684,"byte_end":196701,"line_start":2282,"line_end":2282,"column_start":22,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1511},"to":{"krate":2,"index":3024}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":196726,"byte_end":196743,"line_start":2283,"line_end":2283,"column_start":22,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1511},"to":{"krate":2,"index":3036}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":196787,"byte_end":196804,"line_start":2285,"line_end":2285,"column_start":40,"column_end":57},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1511},"to":{"krate":0,"index":1309}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/direct.rs","byte_start":197039,"byte_end":197056,"line_start":2295,"line_end":2295,"column_start":15,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1511},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/native_gpu_future.rs","byte_start":197807,"byte_end":197816,"line_start":27,"line_end":27,"column_start":20,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":451},"to":{"krate":2,"index":12962}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/backend/native_gpu_future.rs","byte_start":198282,"byte_end":198301,"line_start":43,"line_end":43,"column_start":9,"column_end":28},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":203250,"byte_end":203254,"line_start":14,"line_end":14,"column_start":41,"column_end":45},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":516},"to":{"krate":2,"index":12962}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/belt.rs","byte_start":205115,"byte_end":205126,"line_start":70,"line_end":70,"column_start":6,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":528},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/device.rs","byte_start":210547,"byte_end":210553,"line_start":40,"line_end":40,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1566},"to":{"krate":0,"index":549}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":220462,"byte_end":220472,"line_start":123,"line_end":123,"column_start":32,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1674},"to":{"krate":0,"index":588}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/encoder.rs","byte_start":222153,"byte_end":222172,"line_start":174,"line_end":174,"column_start":32,"column_end":51},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1688},"to":{"krate":0,"index":588}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":201378,"byte_end":201392,"line_start":73,"line_end":73,"column_start":6,"column_end":20},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/util/mod.rs","byte_start":202726,"byte_end":202740,"line_start":108,"line_end":108,"column_start":26,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":685},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":4976,"byte_end":4987,"line_start":140,"line_end":140,"column_start":38,"column_end":49},"kind":"SuperTrait","from":{"krate":0,"index":993},"to":{"krate":0,"index":1008}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":5864,"byte_end":5869,"line_start":165,"line_end":165,"column_start":16,"column_end":21},"kind":"SuperTrait","from":{"krate":2,"index":9597},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":5872,"byte_end":5876,"line_start":165,"line_end":165,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":5879,"byte_end":5884,"line_start":165,"line_end":165,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":3029},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":5887,"byte_end":5891,"line_start":165,"line_end":165,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":3036},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":18478,"byte_end":18485,"line_start":526,"line_end":526,"column_start":15,"column_end":22},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1561},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":19537,"byte_end":19547,"line_start":565,"line_end":565,"column_start":6,"column_end":16},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1587},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22446,"byte_end":22453,"line_start":670,"line_end":670,"column_start":15,"column_end":22},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1624},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":22937,"byte_end":22944,"line_start":688,"line_end":688,"column_start":15,"column_end":22},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1629},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":23627,"byte_end":23642,"line_start":708,"line_end":708,"column_start":15,"column_end":30},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1634},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24263,"byte_end":24272,"line_start":728,"line_end":728,"column_start":15,"column_end":24},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1639},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":24807,"byte_end":24819,"line_start":747,"line_end":747,"column_start":15,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1644},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":27012,"byte_end":27026,"line_start":812,"line_end":812,"column_start":15,"column_end":29},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1649},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":27534,"byte_end":27548,"line_start":830,"line_end":830,"column_start":15,"column_end":29},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1654},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":27691,"byte_end":27705,"line_start":838,"line_end":838,"column_start":6,"column_end":20},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1654},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":28426,"byte_end":28441,"line_start":861,"line_end":861,"column_start":15,"column_end":30},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1659},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":28585,"byte_end":28600,"line_start":869,"line_end":869,"column_start":6,"column_end":21},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":29435,"byte_end":29448,"line_start":893,"line_end":893,"column_start":15,"column_end":28},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1664},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":30121,"byte_end":30135,"line_start":916,"line_end":916,"column_start":15,"column_end":29},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1669},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":31801,"byte_end":31813,"line_start":968,"line_end":968,"column_start":15,"column_end":27},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1697},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":32072,"byte_end":32080,"line_start":982,"line_end":982,"column_start":15,"column_end":23},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1190},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35397,"byte_end":35403,"line_start":1069,"line_end":1069,"column_start":30,"column_end":36},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1744},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":35944,"byte_end":35954,"line_start":1086,"line_end":1086,"column_start":30,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1774},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":41681,"byte_end":41698,"line_start":1210,"line_end":1210,"column_start":18,"column_end":35},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1862},"to":{"krate":2,"index":3002}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":49854,"byte_end":49866,"line_start":1404,"line_end":1404,"column_start":18,"column_end":30},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2063},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50406,"byte_end":50418,"line_start":1415,"line_end":1415,"column_start":23,"column_end":35},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2063},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":50428,"byte_end":50436,"line_start":1417,"line_end":1417,"column_start":6,"column_end":14},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1557},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":55438,"byte_end":55445,"line_start":1569,"line_end":1569,"column_start":6,"column_end":13},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":59699,"byte_end":59705,"line_start":1679,"line_end":1679,"column_start":6,"column_end":12},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68426,"byte_end":68432,"line_start":1928,"line_end":1928,"column_start":15,"column_end":21},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1566},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68681,"byte_end":68699,"line_start":1940,"line_end":1940,"column_start":18,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2082},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":68854,"byte_end":68872,"line_start":1946,"line_end":1946,"column_start":23,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2082},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":69017,"byte_end":69033,"line_start":1952,"line_end":1952,"column_start":18,"column_end":34},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":9604}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":69210,"byte_end":69226,"line_start":1958,"line_end":1958,"column_start":23,"column_end":39},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2094},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":71272,"byte_end":71282,"line_start":2034,"line_end":2034,"column_start":26,"column_end":36},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2119},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":71405,"byte_end":71418,"line_start":2042,"line_end":2042,"column_start":26,"column_end":39},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2126},"to":{"krate":2,"index":3242}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":71703,"byte_end":71716,"line_start":2055,"line_end":2055,"column_start":29,"column_end":42},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2126},"to":{"krate":2,"index":3255}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":71834,"byte_end":71844,"line_start":2061,"line_end":2061,"column_start":22,"column_end":32},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2119},"to":{"krate":2,"index":2921}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":71939,"byte_end":71952,"line_start":2067,"line_end":2067,"column_start":22,"column_end":35},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2126},"to":{"krate":2,"index":2924}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":72052,"byte_end":72062,"line_start":2073,"line_end":2073,"column_start":15,"column_end":25},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2119},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":72258,"byte_end":72271,"line_start":2083,"line_end":2083,"column_start":15,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2126},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":72458,"byte_end":72464,"line_start":2093,"line_end":2093,"column_start":6,"column_end":12},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":73710,"byte_end":73721,"line_start":2131,"line_end":2131,"column_start":10,"column_end":21},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1600},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76177,"byte_end":76183,"line_start":2196,"line_end":2196,"column_start":15,"column_end":21},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1593},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":76317,"byte_end":76324,"line_start":2204,"line_end":2204,"column_start":6,"column_end":13},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1613},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":77635,"byte_end":77642,"line_start":2244,"line_end":2244,"column_start":15,"column_end":22},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1613},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":77800,"byte_end":77811,"line_start":2252,"line_end":2252,"column_start":15,"column_end":26},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1619},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":77951,"byte_end":77965,"line_start":2260,"line_end":2260,"column_start":6,"column_end":20},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":83710,"byte_end":83724,"line_start":2448,"line_end":2448,"column_start":6,"column_end":20},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":84551,"byte_end":84565,"line_start":2467,"line_end":2467,"column_start":6,"column_end":20},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1669},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":85277,"byte_end":85287,"line_start":2490,"line_end":2490,"column_start":10,"column_end":20},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":92247,"byte_end":92257,"line_start":2662,"line_end":2662,"column_start":10,"column_end":20},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":94722,"byte_end":94732,"line_start":2723,"line_end":2723,"column_start":10,"column_end":20},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":98505,"byte_end":98515,"line_start":2822,"line_end":2822,"column_start":10,"column_end":20},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":99990,"byte_end":100000,"line_start":2857,"line_end":2857,"column_start":10,"column_end":20},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":100683,"byte_end":100693,"line_start":2871,"line_end":2871,"column_start":10,"column_end":20},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":101371,"byte_end":101381,"line_start":2886,"line_end":2886,"column_start":19,"column_end":29},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1674},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":101661,"byte_end":101672,"line_start":2897,"line_end":2897,"column_start":10,"column_end":21},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104033,"byte_end":104044,"line_start":2963,"line_end":2963,"column_start":10,"column_end":21},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":104643,"byte_end":104654,"line_start":2977,"line_end":2977,"column_start":10,"column_end":21},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":105329,"byte_end":105340,"line_start":2990,"line_end":2990,"column_start":10,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1681},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":106018,"byte_end":106029,"line_start":3005,"line_end":3005,"column_start":19,"column_end":30},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1681},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":106310,"byte_end":106329,"line_start":3016,"line_end":3016,"column_start":10,"column_end":29},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":111604,"byte_end":111623,"line_start":3142,"line_end":3142,"column_start":10,"column_end":29},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1688},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":112996,"byte_end":113001,"line_start":3176,"line_end":3176,"column_start":6,"column_end":11},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1702},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115136,"byte_end":115150,"line_start":3230,"line_end":3230,"column_start":6,"column_end":20},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115498,"byte_end":115512,"line_start":3240,"line_end":3240,"column_start":15,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2056},"to":{"krate":2,"index":3266}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":115782,"byte_end":115789,"line_start":3252,"line_end":3252,"column_start":6,"column_end":13},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1629},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118012,"byte_end":118014,"line_start":3306,"line_end":3306,"column_start":35,"column_end":37},"kind":"SuperTrait","from":{"krate":2,"index":3269},"to":{"krate":0,"index":1467}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118024,"byte_end":118028,"line_start":3306,"line_end":3306,"column_start":47,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":3024},"to":{"krate":0,"index":1467}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118077,"byte_end":118078,"line_start":3307,"line_end":3307,"column_start":36,"column_end":37},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1469},"to":{"krate":0,"index":1467}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118506,"byte_end":118511,"line_start":3326,"line_end":3326,"column_start":23,"column_end":28},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2134},"to":{"krate":1,"index":2452}},{"span":{"file_name":"/Users/jackson/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.12.0/src/lib.rs","byte_start":118774,"byte_end":118779,"line_start":3335,"line_end":3335,"column_start":18,"column_end":23},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":2134},"to":{"krate":2,"index":9604}}]}